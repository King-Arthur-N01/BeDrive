{"version":3,"file":"drive-routes.3ff65938.js","sources":["../../../node_modules/@tanstack/query-core/build/lib/infiniteQueryObserver.mjs","../../../node_modules/@tanstack/react-query/build/lib/useInfiniteQuery.mjs","../../../resources/client/drive/drive-query-keys.ts","../../../resources/client/drive/shareable-link/shareable-link-page/link-page-store.ts","../../../resources/client/drive/shareable-link/queries/use-shareable-link-page.ts","../../../resources/client/drive/shareable-link/shareable-link-page/queries/check-link-password.ts","../../../resources/client/drive/shareable-link/shareable-link-page/queries/import-into-own-drive.ts","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page-action-buttons.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-navbar.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/password-page.tsx","../../../resources/client/drive/file-view/file-grid/base-file-grid-item.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-grid.tsx","../../../resources/client/drive/file-view/file-table/file-table-columns.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-table.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/use-navigate-to-subfolder.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-view.tsx","../../../resources/client/common/ui/layout/dashboard-content-header.tsx","../../../resources/client/drive/files/queries/use-folder-path.ts","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-breadcrumb.tsx","../../../resources/client/drive/layout/sorting/available-sorts.ts","../../../resources/client/drive/layout/sorting/entries-sort-button.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-header.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/share.svg","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page-file-preview.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page.tsx","../../../resources/client/drive/layout/sidebar/storage-summary/storage-summary.ts","../../../resources/client/common/ui/progress/meter.tsx","../../../resources/client/drive/layout/sidebar/storage-summary/storage-meter.tsx","../../../resources/client/common/workspace/requests/create-workspace.ts","../../../resources/client/common/workspace/new-workspace-dialog.tsx","../../../resources/client/common/workspace/requests/workspace-with-members.ts","../../../resources/client/common/workspace/requests/invite-members.ts","../../../resources/client/common/workspace/requests/resend-invite.ts","../../../resources/client/common/utils/string/is-email.ts","../../../resources/client/common/workspace/requests/change-role.ts","../../../resources/client/common/workspace/requests/remove-member.ts","../../../resources/client/common/workspace/leave-workspace-confirmation.tsx","../../../resources/client/common/workspace/workspace-members-dialog.tsx","../../../resources/client/common/workspace/requests/update-workspace.ts","../../../resources/client/common/workspace/rename-workspace-dialog.tsx","../../../resources/client/common/workspace/requests/delete-workspace.ts","../../../resources/client/common/workspace/workspace-selector.tsx","../../../resources/client/drive/drive-page/add-files.svg","../../../resources/client/drive/drive-page/time-management.svg","../../../resources/client/drive/drive-page/file-searching.svg","../../../resources/client/drive/drive-page/throw-away.svg","../../../resources/client/drive/drive-page/loving-it.svg","../../../resources/client/drive/drive-page/drive-page.tsx","../../../resources/client/drive/menu-positions.ts","../../../node_modules/performant-array-to-tree/build/arrayToTree.min.js","../../../resources/client/drive/files/queries/use-folders.ts","../../../resources/client/drive/drive-store.ts","../../../resources/client/drive/files/queries/use-move-entries.ts","../../../resources/client/drive/uploading/use-drive-upload-queue.ts","../../../resources/client/drive/files/utils/can-move-entries-into.ts","../../../resources/client/drive/files/use-folder-drop-action.ts","../../../resources/client/drive/layout/sidebar/folder-tree-drag-id.ts","../../../resources/client/drive/layout/sidebar/use-sidebar-tree-drop-target.ts","../../../resources/client/common/ui/tree/tree-context.tsx","../../../resources/client/common/ui/tree/render-tree.ts","../../../resources/client/common/ui/tree/tree-label.tsx","../../../resources/client/common/ui/tree/tree-item.tsx","../../../resources/client/common/ui/tree/tree.tsx","../../../resources/client/drive/layout/sidebar/folder-tree.tsx","../../../resources/client/drive/files/queries/use-delete-entries.ts","../../../resources/client/drive/layout/sidebar/sidebar-menu.tsx","../../../resources/client/drive/layout/create-new-button.tsx","../../../resources/client/drive/layout/sidebar/sidebar.tsx","../../../resources/client/drive/files/queries/use-paginated-entries.ts","../../../resources/client/drive/search/drive-search-filters.ts","../../../resources/client/drive/search/search-filter-list.tsx","../../../resources/client/common/ui/interactions/utils/restrict-resizable-within-boundary.ts","../../../resources/client/common/ui/interactions/dnd/mouse-selection/use-mouse-selectable.ts","../../../resources/client/common/ui/interactions/utils/rects-intersect.ts","../../../resources/client/common/ui/interactions/dnd/mouse-selection/use-mouse-selection-box.ts","../../../resources/client/drive/shareable-link/queries/create-shareable-link.ts","../../../resources/client/drive/files/queries/use-add-star-to-entries.ts","../../../resources/client/drive/files/queries/use-remove-star-from-entries.ts","../../../resources/client/drive/files/queries/use-duplicate-entries.ts","../../../resources/client/drive/share-dialog/queries/use-unshare-entries.ts","../../../resources/client/drive/files/queries/use-restore-entries.ts","../../../resources/client/drive/entry-actions/use-entry-actions.ts","../../../resources/client/drive/entry-actions/use-drive-page-actions.ts","../../../resources/client/drive/entry-actions/entry-action-menu-trigger.tsx","../../../resources/client/drive/files/queries/use-entries.ts","../../../resources/client/drive/files/use-selected-entries.ts","../../../resources/client/drive/entry-actions/entry-action-list.tsx","../../../resources/client/common/ui/navigation/menu/context-menu.tsx","../../../resources/client/drive/files/drive-context-menu.tsx","../../../resources/client/drive/file-view/use-file-view-dnd.ts","../../../resources/client/drive/file-view/file-table/file-table-row.tsx","../../../resources/client/drive/file-view/use-view-item-action-handler.ts","../../../resources/client/drive/file-view/file-table/file-table-mobile-columns.tsx","../../../resources/client/drive/file-view/file-table/file-table.tsx","../../../resources/client/drive/file-view/file-grid/file-grid-item.tsx","../../../resources/client/drive/file-view/file-grid/file-grid.tsx","../../../resources/client/drive/layout/sorting/drive-sort-button.tsx","../../../resources/client/drive/page-breadcrumbs.tsx","../../../resources/client/common/ui/infinite-scroll/infinite-scroll-sentinel.tsx","../../../resources/client/drive/drop-target-mask.tsx","../../../resources/client/drive/file-view/file-view.tsx","../../../resources/client/drive/uploading/upload-queue-item.tsx","../../../resources/client/drive/uploading/upload-queue.tsx","../../../resources/client/drive/details-sidebar/detailed-examination.svg","../../../resources/client/drive/details-sidebar/details-sidebar.tsx","../../../resources/client/drive/files/queries/use-rename-entry.ts","../../../resources/client/drive/files/dialogs/rename-entry-dialog.tsx","../../../resources/client/drive/files/queries/create-folder.ts","../../../resources/client/drive/files/dialogs/new-folder-dialog.tsx","../../../resources/client/drive/files/dialogs/entry-preview-dialog.tsx","../../../resources/client/drive/share-dialog/queries/use-share-entry.ts","../../../resources/client/drive/files/drive-entry.ts","../../../resources/client/drive/share-dialog/permission-selector.tsx","../../../resources/client/drive/share-dialog/queries/use-change-permission.ts","../../../resources/client/drive/share-dialog/member-list.tsx","../../../resources/client/drive/share-dialog/share-panel.tsx","../../../resources/client/drive/shareable-link/queries/use-entry-shareable-link.ts","../../../resources/client/drive/shareable-link/queries/use-delete-shareable-link.ts","../../../resources/client/drive/share-dialog/link-panel/shareable-link-panel.tsx","../../../resources/client/drive/shareable-link/queries/use-update-shareable-link.ts","../../../resources/client/drive/share-dialog/link-panel/link-settings-dialog.tsx","../../../resources/client/drive/share-dialog/share-dialog.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-search.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-breadcrumbs.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/my-files.svg","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-folder-list.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog.tsx","../../../resources/client/drive/files/dialogs/drive-dialogs-container.tsx","../../../resources/client/drive/search/navbar-search.tsx","../../../resources/client/common/ui/interactions/dnd/use-drag-monitor.ts","../../../resources/client/drive/file-view/entry-drag-preview.tsx","../../../resources/client/drive/layout/drive-content-header.tsx","../../../resources/client/drive/layout/drive-layout.tsx","../../../resources/client/drive/drive-routes.tsx"],"sourcesContent":["import { QueryObserver } from './queryObserver.mjs';\nimport { infiniteQueryBehavior, hasNextPage, hasPreviousPage } from './infiniteQueryBehavior.mjs';\n\nclass InfiniteQueryObserver extends QueryObserver {\n  // Type override\n  // Type override\n  // Type override\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(client, options) {\n    super(client, options);\n  }\n\n  bindMethods() {\n    super.bindMethods();\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  }\n\n  setOptions(options, notifyOptions) {\n    super.setOptions({ ...options,\n      behavior: infiniteQueryBehavior()\n    }, notifyOptions);\n  }\n\n  getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return super.getOptimisticResult(options);\n  }\n\n  fetchNextPage({\n    pageParam,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        fetchMore: {\n          direction: 'forward',\n          pageParam\n        }\n      }\n    });\n  }\n\n  fetchPreviousPage({\n    pageParam,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        fetchMore: {\n          direction: 'backward',\n          pageParam\n        }\n      }\n    });\n  }\n\n  createResult(query, options) {\n    var _state$data, _state$data2, _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet;\n\n    const {\n      state\n    } = query;\n    const result = super.createResult(query, options);\n    return { ...result,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, (_state$data = state.data) == null ? void 0 : _state$data.pages),\n      hasPreviousPage: hasPreviousPage(options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),\n      isFetchingNextPage: state.fetchStatus === 'fetching' && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === 'forward',\n      isFetchingPreviousPage: state.fetchStatus === 'fetching' && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === 'backward'\n    };\n  }\n\n}\n\nexport { InfiniteQueryObserver };\n//# sourceMappingURL=infiniteQueryObserver.mjs.map\n","import { parseQueryArgs, InfiniteQueryObserver } from '@tanstack/query-core';\nimport { useBaseQuery } from './useBaseQuery.mjs';\n\nfunction useInfiniteQuery(arg1, arg2, arg3) {\n  const options = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(options, InfiniteQueryObserver);\n}\n\nexport { useInfiniteQuery };\n//# sourceMappingURL=useInfiniteQuery.mjs.map\n","import type {DriveApiIndexParams} from './files/queries/use-paginated-entries';\nimport type {UserFoldersApiParams} from './files/queries/use-folders';\nimport {queryClient} from '../common/http/query-client';\nimport {Key} from 'react';\n\nexport const DriveQueryKeys = {\n  fetchEntries: (params?: DriveApiIndexParams) => {\n    const key: ('drive-entries' | DriveApiIndexParams)[] = ['drive-entries'];\n    if (params) key.push(params);\n    return key;\n  },\n  fetchUserFolders(params?: UserFoldersApiParams) {\n    const key: (string | UserFoldersApiParams)[] = ['user-folders'];\n    if (params) {\n      key.push(params);\n    }\n    return key;\n  },\n  fetchShareableLink: (params?: {hash?: string; sort?: string}) => {\n    const key: (string | object)[] = ['shareable-link'];\n    if (params) {\n      key.push(params);\n    }\n    return key;\n  },\n  fetchFolderPath(\n    hash?: string,\n    params?: Record<string, string | number | null>\n  ) {\n    const key: (string | any)[] = ['folder-path'];\n    if (hash) {\n      key.push(hash);\n    }\n    if (params) {\n      key.push(params);\n    }\n    return key;\n  },\n  fetchEntryShareableLink: (entryId: number) => {\n    return ['file-entries', entryId, 'shareable-link'];\n  },\n  fetchFileEntry: (id?: number) => {\n    const key: Key[] = ['drive/file-entries/model'];\n    if (id) key.push(id);\n    return key;\n  },\n  fetchStorageSummary: ['storage-summary'],\n};\n\nexport function invalidateEntryQueries() {\n  queryClient.invalidateQueries(DriveQueryKeys.fetchEntries());\n  queryClient.invalidateQueries(DriveQueryKeys.fetchFolderPath());\n  queryClient.invalidateQueries(DriveQueryKeys.fetchUserFolders());\n  // fetching model for single file entry in \"useFileEntry\"\n  queryClient.invalidateQueries(DriveQueryKeys.fetchFileEntry());\n}\n","import create from 'zustand';\nimport {immer} from 'zustand/middleware/immer';\nimport {DriveSortDescriptor} from '../../drive-store';\nimport {\n  getFromLocalStorage,\n  setInLocalStorage,\n} from '../../../common/utils/hooks/local-storage';\n\ninterface LinkPageState {\n  password: string | null;\n  setPassword: (value: string) => void;\n  isPasswordProtected: boolean;\n  setIsPasswordProtected: (value: boolean) => void;\n  activeSort: DriveSortDescriptor;\n  setActiveSort: (value: DriveSortDescriptor) => void;\n  viewMode: 'grid' | 'list';\n  setViewMode: (mode: 'grid' | 'list') => void;\n}\n\nexport const useLinkPageStore = create<LinkPageState>()(\n  immer(set => ({\n    password: null,\n    viewMode: getFromLocalStorage<'list' | 'grid'>('drive.viewMode'),\n    activeSort: {\n      orderBy: 'updated_at',\n      orderDir: 'desc',\n    },\n    setPassword: value => {\n      set(state => {\n        state.password = value;\n      });\n    },\n    isPasswordProtected: false,\n    setIsPasswordProtected: value => {\n      set(state => {\n        state.isPasswordProtected = value;\n      });\n    },\n\n    setViewMode: mode => {\n      set(state => {\n        state.viewMode = mode;\n        setInLocalStorage('drive.viewMode', mode);\n      });\n    },\n    setActiveSort: value => {\n      set(state => {\n        state.activeSort = value;\n      });\n    },\n  }))\n);\n\nexport function linkPageState() {\n  return useLinkPageStore.getState();\n}\n","import {\n  QueryFunctionContext,\n  QueryKey,\n  useInfiniteQuery,\n} from '@tanstack/react-query';\nimport {useParams} from 'react-router-dom';\nimport axios from 'axios';\nimport type {FetchShareableLinkResponse} from './use-entry-shareable-link';\nimport type {DriveEntry} from '../../files/drive-entry';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {\n  linkPageState,\n  useLinkPageStore,\n} from '../shareable-link-page/link-page-store';\nimport {PaginationResponse} from '../../../common/http/backend-response/pagination-response';\nimport {BackendErrorResponse} from '../../../common/errors/backend-error-response';\nimport {apiClient} from '../../../common/http/query-client';\n\ninterface FetchShareableLinkPageResponse extends FetchShareableLinkResponse {\n  folderChildren: PaginationResponse<DriveEntry>;\n}\n\ninterface FetchShareableLinkPageErrorResponse extends BackendErrorResponse {\n  passwordInvalid: boolean;\n}\n\ninterface FetchLinkByHashParams {\n  hash: string;\n  page?: number;\n  order?: string;\n  password?: string | null;\n}\nfunction fetchLinkByHash({\n  hash,\n  page = 1,\n  order,\n  password,\n}: FetchLinkByHashParams): Promise<FetchShareableLinkPageResponse> {\n  return apiClient\n    .get(`shareable-links/${hash}`, {\n      params: {withEntries: true, page, order, password},\n    })\n    .then(response => response.data);\n}\n\nexport function useShareableLinkPage() {\n  const {hash} = useParams();\n  const {orderBy, orderDir} = useLinkPageStore(s => s.activeSort);\n  const order = `${orderBy}:${orderDir}`;\n  const isPasswordProtected = useLinkPageStore(s => s.isPasswordProtected);\n  const password = useLinkPageStore(s => s.password);\n\n  const query = useInfiniteQuery(\n    DriveQueryKeys.fetchShareableLink({hash, sort: order}),\n    ({pageParam = 1}: QueryFunctionContext<QueryKey, number>) => {\n      return fetchLinkByHash({hash: hash!, page: pageParam, order, password});\n    },\n    {\n      getNextPageParam: lastResponse => {\n        if (!lastResponse.folderChildren) return undefined;\n        const currentPage = lastResponse.folderChildren.current_page;\n        const lastPage = lastResponse.folderChildren.last_page;\n        if (currentPage >= lastPage) {\n          return undefined;\n        }\n        return currentPage + 1;\n      },\n      // disable query if link is password protected and correct\n      // password was not entered yet, to prevent unnecessary requests\n      enabled: (!!hash && !isPasswordProtected) || !!password,\n      keepPreviousData: true,\n      retry: (retryCount, e: unknown) => {\n        if (isPasswordInvalidResponse(e)) {\n          return false;\n        } else {\n          return retryCount <= 2;\n        }\n      },\n      onError: (e: unknown) => {\n        if (isPasswordInvalidResponse(e)) {\n          return linkPageState().setIsPasswordProtected(true);\n        }\n      },\n    }\n  );\n\n  return {\n    ...query,\n    link: query.data?.pages[0].link,\n    entries: query.data?.pages.flatMap(p => p.folderChildren?.data),\n  };\n}\n\nfunction isPasswordInvalidResponse(e: unknown) {\n  return (\n    axios.isAxiosError(e) &&\n    (e.response?.data as FetchShareableLinkPageErrorResponse).passwordInvalid\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../../../common/http/backend-response/backend-response';\nimport {linkPageState} from '../link-page-store';\nimport {apiClient} from '../../../../common/http/query-client';\nimport {showHttpErrorToast} from '../../../../common/utils/http/show-http-error-toast';\nimport {message} from '../../../../common/i18n/message';\n\ninterface Response extends BackendResponse {\n  matches: boolean;\n}\n\ninterface Props {\n  password: string;\n  linkHash: string;\n}\n\nfunction checkLinkPassword({password, linkHash}: Props): Promise<Response> {\n  return apiClient\n    .post(`shareable-links/${linkHash}/check-password`, {password})\n    .then(r => r.data);\n}\n\nexport function useCheckLinkPassword() {\n  return useMutation((props: Props) => checkLinkPassword(props), {\n    onSuccess: (response, props) => {\n      if (response.matches) {\n        linkPageState().setPassword(props.password);\n      }\n    },\n    onError: err => showHttpErrorToast(err, message('Could not create link')),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../../../common/http/backend-response/backend-response';\nimport {DriveEntryUser} from '../../../files/drive-entry';\nimport {toast} from '../../../../common/ui/toast/toast';\nimport {useLinkPageStore} from '../link-page-store';\nimport {apiClient, queryClient} from '../../../../common/http/query-client';\nimport {DriveQueryKeys} from '../../../drive-query-keys';\nimport {message} from '../../../../common/i18n/message';\nimport {showHttpErrorToast} from '../../../../common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  users: DriveEntryUser[];\n}\n\ninterface Props {\n  password: string | null;\n  linkId: number;\n}\n\nfunction importIntoOwnDrive({linkId, password}: Props): Promise<Response> {\n  return apiClient\n    .post(`shareable-links/${linkId}/import`, {password})\n    .then(r => r.data);\n}\n\nexport function useImportIntoOwnDrive() {\n  const password = useLinkPageStore(s => s.password);\n  return useMutation(\n    (props: Omit<Props, 'password'>) =>\n      importIntoOwnDrive({...props, password}),\n    {\n      onSuccess: () => {\n        toast(message('Item imported into your drive'));\n        queryClient.invalidateQueries(DriveQueryKeys.fetchShareableLink());\n      },\n      onError: err => showHttpErrorToast(err, message('Could not create link')),\n    }\n  );\n}\n","import {useShareableLinkPage} from '../queries/use-shareable-link-page';\nimport {useAuth} from '../../../common/auth/use-auth';\nimport {useFileEntryUrls} from '../../../common/uploads/hooks/file-entry-urls';\nimport {useImportIntoOwnDrive} from './queries/import-into-own-drive';\nimport {Button} from '../../../common/ui/buttons/button';\nimport {FileDownloadIcon} from '../../../common/icons/material/FileDownload';\nimport {downloadFileFromUrl} from '../../../common/uploads/utils/download-file-from-url';\nimport {Trans} from '../../../common/i18n/trans';\nimport {\n  Menu,\n  MenuItem,\n  MenuTrigger,\n} from '../../../common/ui/navigation/menu/menu-trigger';\nimport {IconButton} from '../../../common/ui/buttons/icon-button';\nimport {KeyboardArrowDownIcon} from '../../../common/icons/material/KeyboardArrowDown';\nimport {ImportExportIcon} from '../../../common/icons/material/ImportExport';\nimport React from 'react';\n\nexport function ShareableLinkPageActionButtons() {\n  const {link} = useShareableLinkPage();\n  const {user, isLoggedIn} = useAuth();\n  const {downloadUrl} = useFileEntryUrls(link?.entry);\n  const importIntoOwnDrive = useImportIntoOwnDrive();\n  const alreadyImported = link?.entry?.users!.find(u => u.id === user?.id);\n\n  if (!link?.entry) return null;\n\n  return (\n    <div>\n      {link.allow_download && (\n        <Button\n          size=\"sm\"\n          variant=\"flat\"\n          color=\"chip\"\n          startIcon={<FileDownloadIcon />}\n          onClick={() => {\n            if (downloadUrl) {\n              downloadFileFromUrl(downloadUrl);\n            }\n          }}\n        >\n          <Trans message=\"Download\" />\n        </Button>\n      )}\n      {!alreadyImported && isLoggedIn && link.allow_edit && (\n        <MenuTrigger\n          onItemSelected={key => {\n            if (key === 'import') {\n              importIntoOwnDrive.mutate({linkId: link.id});\n            } else if (key === 'download') {\n              if (downloadUrl) {\n                downloadFileFromUrl(downloadUrl);\n              }\n            }\n          }}\n        >\n          <IconButton\n            className=\"ml-6\"\n            size=\"sm\"\n            variant=\"flat\"\n            color=\"chip\"\n            radius=\"rounded\"\n            disabled={importIntoOwnDrive.isLoading}\n          >\n            <KeyboardArrowDownIcon />\n          </IconButton>\n          <Menu>\n            <MenuItem value=\"download\" startIcon={<FileDownloadIcon />}>\n              <Trans message=\"Download\" />\n            </MenuItem>\n            <MenuItem value=\"import\" startIcon={<ImportExportIcon />}>\n              <Trans message=\"Save a copy to your own drive\" />\n            </MenuItem>\n          </Menu>\n        </MenuTrigger>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport {FileTypeIcon} from '../../../common/uploads/file-type-icon/file-type-icon';\nimport {Navbar} from '../../../common/ui/navigation/navbar/navbar';\nimport {useShareableLinkPage} from '../queries/use-shareable-link-page';\nimport {ShareableLinkPageActionButtons} from './shareable-link-page-action-buttons';\n\nexport function ShareableLinkNavbar() {\n  const {link} = useShareableLinkPage();\n  return (\n    <Navbar\n      size=\"md\"\n      color=\"bg\"\n      className=\"flex-shrink-0\"\n      rightChildren={link?.entry && <ShareableLinkPageActionButtons />}\n      menuPosition=\"shareable-link-page\"\n    >\n      {link?.entry && link.entry.type !== 'folder' && (\n        <div className=\"flex items-center gap-10\">\n          <FileTypeIcon className=\"flex-shrink-0\" type={link.entry.type} />\n          <div className=\"font-medium whitespace-nowrap overflow-hidden overflow-ellipsis flex-auto\">\n            {link.entry.name}\n          </div>\n        </div>\n      )}\n    </Navbar>\n  );\n}\n","import {useState} from 'react';\nimport {SvgImage} from '../../../common/ui/images/svg-image/svg-image';\nimport {\n  TextField\n} from '../../../common/ui/forms/input-field/text-field/text-field';\nimport {Button} from '../../../common/ui/buttons/button';\nimport {useCheckLinkPassword} from './queries/check-link-password';\nimport {Trans} from '../../../common/i18n/trans';\nimport {useTrans} from '../../../common/i18n/use-trans';\nimport {ShareableLinkNavbar} from './shareable-link-navbar';\nimport {useParams} from 'react-router-dom';\nimport secureFilesSvg\n  from './../../../common/auth/ui/account-settings/access-token-panel/secure-files.svg';\n\nexport function PasswordPage() {\n  const {trans} = useTrans();\n  const {hash} = useParams();\n  const fieldLabel = trans({message: 'Password'});\n  const [password, setPassword] = useState<string>('');\n  const checkPassword = useCheckLinkPassword();\n  const linkHash = hash ? hash.split(':')[0] : null;\n\n  const passwordIsInvalid = checkPassword.data && !checkPassword.data.matches;\n\n  return (\n    <div className=\"bg-alt w-full h-full flex flex-col\">\n      <ShareableLinkNavbar />\n      <div className=\"px-10 md:px-20 mx-auto my-80\">\n        <div className=\"flex flex-col md:flex-row gap-40 md:gap-14 bg items-center max-w-[560px] border rounded p-24\">\n          <div className=\"h-132\">\n            <SvgImage src={secureFilesSvg} />\n          </div>\n          <form\n            onSubmit={e => {\n              e.preventDefault();\n              checkPassword.mutate({\n                linkHash: linkHash!,\n                password,\n              });\n            }}\n          >\n            <span className=\"text-sm\">\n              <Trans message=\"The link you are trying to access is password protected.\" />\n            </span>\n            <TextField\n              autoFocus\n              placeholder={fieldLabel}\n              aria-label={fieldLabel}\n              className=\"mt-10 mb-20\"\n              type=\"password\"\n              value={password}\n              required\n              errorMessage={\n                passwordIsInvalid && <Trans message=\"Password is not valid\" />\n              }\n              onChange={e => {\n                setPassword(e.target.value);\n              }}\n            />\n            <div className=\"text-right\">\n              <Button\n                variant=\"flat\"\n                color=\"primary\"\n                type=\"submit\"\n                className=\"w-full md:w-auto\"\n                disabled={checkPassword.isLoading}\n              >\n                <Trans message=\"Enter\" />\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, {ComponentPropsWithoutRef, ReactNode} from 'react';\nimport clsx from 'clsx';\nimport {FileThumbnail} from '../../../common/uploads/file-type-icon/file-thumbnail';\nimport {DriveEntry} from '../../files/drive-entry';\n\ninterface BaseFileGridItemProps extends ComponentPropsWithoutRef<'div'> {\n  entry: DriveEntry;\n  className?: string;\n  isSelected?: boolean;\n  isMobileMode?: boolean;\n  footerAdornment?: ReactNode;\n}\n\nexport const BaseFileGridItem = React.forwardRef<\n  HTMLDivElement,\n  BaseFileGridItemProps\n>(\n  (\n    {entry, className, isSelected, isMobileMode, footerAdornment, ...domProps},\n    ref\n  ) => {\n    return (\n      <div\n        {...domProps}\n        ref={ref}\n        className={clsx(\n          'shadow rounded border aspect-square flex flex-col grid-item transition-shadow-opacity select-none overflow-hidden outline-none dark:bg-alt',\n          isSelected && 'border-primary',\n          className\n        )}\n      >\n        <div className=\"flex-auto relative min-h-0\">\n          <FileThumbnail\n            className=\"h-full\"\n            iconClassName=\"block w-70 h-70 absolute m-auto inset-0\"\n            file={entry}\n          />\n        </div>\n        <Footer\n          entry={entry}\n          isSelected={isSelected}\n          isMobile={isMobileMode}\n          adornment={footerAdornment}\n        />\n      </div>\n    );\n  }\n);\n\ninterface FooterProps {\n  entry: DriveEntry;\n  isSelected?: boolean;\n  isMobile?: boolean;\n  adornment?: ReactNode;\n}\nfunction Footer({entry, isSelected, isMobile, adornment}: FooterProps) {\n  return (\n    <div\n      className={clsx(\n        'text-sm h-48 flex items-center',\n        isMobile ? 'justify-between gap-10 pl-18 pr-2' : 'justify-center px-16',\n        isSelected && 'bg-primary-light/20'\n      )}\n    >\n      <div className=\"min-w-0 whitespace-nowrap overflow-hidden overflow-ellipsis\">\n        {entry.name}\n      </div>\n      {adornment}\n    </div>\n  );\n}\n","import {BaseFileGridItem} from '../../../file-view/file-grid/base-file-grid-item';\nimport React from 'react';\nimport {DriveEntry} from '../../../files/drive-entry';\n\nexport interface FolderPreviewGridProps {\n  entries: DriveEntry[];\n  onEntrySelected: (entry: DriveEntry, index: number) => void;\n}\nexport function FolderPreviewFileGrid({\n  entries,\n  onEntrySelected,\n}: FolderPreviewGridProps) {\n  return (\n    <div className=\"file-grid\">\n      {entries.map((entry, index) => (\n        <BaseFileGridItem\n          tabIndex={-1}\n          className=\"hover:shadow-md cursor-pointer bg\"\n          entry={entry}\n          key={entry.id}\n          onContextMenu={e => {\n            e.preventDefault();\n          }}\n          onKeyDown={e => {\n            if (e.key === 'Enter' || e.key === ' ') {\n              onEntrySelected(entry, index);\n            }\n          }}\n          onClick={() => {\n            onEntrySelected(entry, index);\n          }}\n        />\n      ))}\n    </div>\n  );\n}\n","import {ColumnConfig} from '../../../common/datatable/column-config';\nimport {DriveEntry} from '../../files/drive-entry';\nimport {Trans} from '../../../common/i18n/trans';\nimport {FileThumbnail} from '../../../common/uploads/file-type-icon/file-thumbnail';\nimport {FormattedDate} from '../../../common/i18n/formatted-date';\nimport {prettyBytes} from '../../../common/uploads/utils/pretty-bytes';\nimport React from 'react';\nimport memoize from 'nano-memoize';\n\nconst formatFileSize = memoize(bytes => {\n  return prettyBytes(bytes);\n});\n\nexport const fileTableColumns: ColumnConfig<DriveEntry>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    header: () => <Trans message=\"Name\" />,\n    body: entry => (\n      <div className=\"flex items-center gap-14\">\n        <div>\n          <FileThumbnail\n            className=\"w-24 h-24 rounded\"\n            iconClassName=\"w-24 h-24\"\n            file={entry}\n          />\n        </div>\n        <div className=\"overflow-hidden overflow-ellipsis\">{entry.name}</div>\n      </div>\n    ),\n    width: 'w-5/6 max-w-1',\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    header: () => <Trans message=\"Last modified\" />,\n    body: user => <FormattedDate date={user.updated_at} />,\n  },\n  {\n    key: 'file_size',\n    allowsSorting: true,\n    header: () => <Trans message=\"Size\" />,\n    body: entry => formatFileSize(entry.file_size) ?? '-',\n  },\n];\n","import {useIsMobileMediaQuery} from '../../../../common/utils/hooks/is-mobile-media-query';\nimport {DriveSortDescriptor} from '../../../drive-store';\nimport React from 'react';\nimport {Table} from '../../../../common/ui/tables/table';\nimport {linkPageState, useLinkPageStore} from '../link-page-store';\nimport type {FolderPreviewGridProps} from './folder-preview-file-grid';\nimport {fileTableColumns} from '../../../file-view/file-table/file-table-columns';\n\nconst mobileColumns = fileTableColumns.filter(\n  config => config.key !== 'updated_at'\n);\n\nexport function FolderPreviewFileTable({\n  entries,\n  onEntrySelected,\n}: FolderPreviewGridProps) {\n  const sortDescriptor = useLinkPageStore(s => s.activeSort);\n  const isMobile = useIsMobileMediaQuery();\n\n  return (\n    <Table\n      columns={isMobile ? mobileColumns : fileTableColumns}\n      data={entries}\n      sortDescriptor={sortDescriptor}\n      onSortChange={value => {\n        linkPageState().setActiveSort(value as DriveSortDescriptor);\n      }}\n      onAction={(item, index) => {\n        onEntrySelected(item, index);\n      }}\n      enableSelection={false}\n    />\n  );\n}\n","import {useShareableLinkPage} from '../../queries/use-shareable-link-page';\nimport {useNavigate} from 'react-router-dom';\nimport {ShareableLink} from '../../shareable-link';\n\nfunction buildFolderHash(link: ShareableLink, folderHash?: string) {\n  let hash = link.hash;\n  if (folderHash && link.entry?.hash !== folderHash) {\n    hash = `${hash}:${folderHash}`;\n  }\n  return hash;\n}\n\nexport function useNavigateToSubfolder() {\n  const {link} = useShareableLinkPage();\n  const navigate = useNavigate();\n  return (hash: string) => {\n    if (!link) return;\n    navigate(`/drive/s/${buildFolderHash(link, hash)}`);\n  };\n}\n","import {AnimatePresence, m} from 'framer-motion';\nimport React, {Fragment, useEffect, useRef, useState} from 'react';\nimport {ProgressCircle} from '../../../../common/ui/progress/progress-circle';\nimport {useShareableLinkPage} from '../../queries/use-shareable-link-page';\nimport {FilePreviewDialog} from '../../../../common/uploads/preview/file-preview-dialog';\nimport {DialogTrigger} from '../../../../common/ui/overlays/dialog/dialog-trigger';\nimport clsx from 'clsx';\nimport {DriveEntry} from '../../../files/drive-entry';\nimport {FolderPreviewFileGrid} from './folder-preview-file-grid';\nimport {useLinkPageStore} from '../link-page-store';\nimport {FolderPreviewFileTable} from './folder-preview-file-table';\nimport {useNavigateToSubfolder} from './use-navigate-to-subfolder';\nimport {useLocation} from 'react-router-dom';\nimport {opacityAnimation} from '../../../../common/ui/animation/opacity-animation';\nimport {AdHost} from '../../../../common/admin/ads/ad-host';\n\ninterface FolderPreviewChildrenProps {\n  className?: string;\n}\nexport function FolderPreviewFileView({className}: FolderPreviewChildrenProps) {\n  const {pathname} = useLocation();\n  const navigateToSubfolder = useNavigateToSubfolder();\n  const [activePreviewIndex, setActivePreviewIndex] = useState<number>();\n  const viewMode = useLinkPageStore(s => s.viewMode);\n  const sentinelRef = useRef<HTMLDivElement>(null);\n  const {\n    link,\n    entries,\n    isFetchingNextPage,\n    hasNextPage,\n    fetchNextPage,\n    isPreviousData,\n  } = useShareableLinkPage();\n\n  // close preview modal on back/forward navigation\n  useEffect(() => {\n    setActivePreviewIndex(undefined);\n  }, [pathname]);\n\n  useEffect(() => {\n    const sentinelEl = sentinelRef.current;\n    if (!sentinelEl) return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting && hasNextPage) {\n        fetchNextPage();\n      }\n    });\n    observer.observe(sentinelEl);\n    return () => {\n      observer.unobserve(sentinelEl);\n    };\n  }, [hasNextPage, fetchNextPage]);\n\n  if (!link || isPreviousData) {\n    return (\n      <div className={clsx('flex justify-center', className)}>\n        <ProgressCircle isIndeterminate />\n      </div>\n    );\n  }\n\n  const handlePreview = (entry: DriveEntry, index: number) => {\n    if (entry.type === 'folder') {\n      navigateToSubfolder(entry.hash);\n    } else {\n      setActivePreviewIndex(index);\n    }\n  };\n\n  const folderEntries = entries || [];\n\n  return (\n    <Fragment>\n      <AdHost slot=\"file-preview\" className=\"mb-40\" />\n      <div\n        className={clsx(\n          'px-14 pb-14 md:px-24 md:pb-24 flex-auto overflow-auto file-grid-container',\n          className\n        )}\n      >\n        {viewMode === 'grid' ? (\n          <FolderPreviewFileGrid\n            entries={folderEntries}\n            onEntrySelected={handlePreview}\n          />\n        ) : (\n          <FolderPreviewFileTable\n            entries={folderEntries}\n            onEntrySelected={handlePreview}\n          />\n        )}\n        <span ref={sentinelRef} aria-hidden />\n        <AnimatePresence>\n          {isFetchingNextPage && (\n            <m.div\n              className=\"flex justify-center mt-24 w-full\"\n              {...opacityAnimation}\n            >\n              <ProgressCircle isIndeterminate aria-label=\"loading\" />\n            </m.div>\n          )}\n        </AnimatePresence>\n      </div>\n      <DialogTrigger\n        type=\"modal\"\n        isOpen={activePreviewIndex != undefined}\n        onClose={() => setActivePreviewIndex(undefined)}\n      >\n        <FilePreviewDialog\n          entries={folderEntries}\n          defaultActiveIndex={activePreviewIndex}\n          allowDownload={link.allow_download}\n        />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n","import {ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface DashboardContentHeaderProps {\n  children: ReactNode;\n  className?: string;\n}\nexport function DashboardContentHeader({\n  children,\n  className,\n}: DashboardContentHeaderProps) {\n  return (\n    <div className={clsx(className, 'dashboard-grid-header')}>{children}</div>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {DriveFolder} from '../drive-entry';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {BackendResponse} from '../../../common/http/backend-response/backend-response';\nimport {apiClient} from '../../../common/http/query-client';\n\ninterface FolderPathResponse extends BackendResponse {\n  path: DriveFolder[];\n}\n\ntype Params = Record<string, string | number | null>;\n\ninterface Props {\n  hash?: string;\n  params?: Params;\n  isEnabled?: boolean;\n}\nexport function useFolderPath({hash, params, isEnabled = true}: Props) {\n  return useQuery(\n    DriveQueryKeys.fetchFolderPath(hash!, params),\n    () => fetchFolderPath(hash!, params),\n    {enabled: !!hash && isEnabled}\n  );\n}\n\nfunction fetchFolderPath(\n  hash: string,\n  params?: Params\n): Promise<FolderPathResponse> {\n  return apiClient\n    .get(`folders/${hash}/path`, {params})\n    .then(response => response.data);\n}\n","import React, {ReactElement, ReactNode} from 'react';\nimport clsx from 'clsx';\nimport {DriveFolder} from '../../../files/drive-entry';\nimport {useFolderPath} from '../../../files/queries/use-folder-path';\nimport {Breadcrumb} from '../../../../common/ui/breadcrumbs/breadcrumb';\nimport {ShareableLink} from '../../shareable-link';\nimport {useLinkPageStore} from '../link-page-store';\nimport {BreadcrumbItem} from '../../../../common/ui/breadcrumbs/breadcrumb-item';\nimport {useNavigateToSubfolder} from './use-navigate-to-subfolder';\n\ninterface Props {\n  className?: string;\n  folder?: DriveFolder;\n  link: ShareableLink;\n}\nexport function FolderPreviewBreadcrumb({className, folder, link}: Props) {\n  const navigateToSubfolder = useNavigateToSubfolder();\n  const password = useLinkPageStore(s => s.password);\n  const query = useFolderPath({\n    hash: folder?.hash,\n    params: {\n      shareable_link: link.id,\n      password,\n    },\n  });\n\n  let content: ReactNode;\n\n  if (query.isLoading) {\n    content = null;\n  } else {\n    const items: {folder: DriveFolder; label: ReactElement}[] = [];\n    if (query.data) {\n      query.data.path.forEach(parent => {\n        items.push({\n          folder: parent,\n          label: <>{parent.name}</>,\n        });\n      });\n    }\n\n    content = (\n      <Breadcrumb size=\"lg\" isNavigation>\n        {items.map(item => {\n          return (\n            <BreadcrumbItem\n              onSelected={() => {\n                navigateToSubfolder(item.folder.hash);\n              }}\n              key={item.folder.hash}\n            >\n              {item.label}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    );\n  }\n\n  return <div className={clsx('h-36 flex-shrink-0', className)}>{content}</div>;\n}\n","import {message} from '../../../common/i18n/message';\nimport {MessageDescriptor} from '../../../common/i18n/message-descriptor';\n\nexport const AVAILABLE_SORTS: DriveSortOption[] = [\n  {id: 'file_size', label: message('Size')},\n  {id: 'name', label: message('Name')},\n  {id: 'updated_at', label: message('Last modified')},\n  {id: 'created_at', label: message('Upload date')},\n  {id: 'type', label: message('Type')},\n  {id: 'extension', label: message('Extension')},\n];\n\nexport interface DriveSortOption {\n  id: SortColumn;\n  label: MessageDescriptor;\n}\n\nexport type SortColumn =\n  | 'file_size'\n  | 'name'\n  | 'updated_at'\n  | 'created_at'\n  | 'type'\n  | 'extension';\n\nexport type SortDirection = 'desc' | 'asc';\n\nexport interface SortValue {\n  column: SortColumn;\n  direction: SortDirection;\n}\n","import {AVAILABLE_SORTS, SortColumn} from './available-sorts';\nimport {Button} from '../../../common/ui/buttons/button';\nimport {SortIcon} from '../../../common/icons/material/Sort';\nimport {\n  Menu,\n  MenuItem,\n  MenuSection,\n  MenuTrigger,\n} from '../../../common/ui/navigation/menu/menu-trigger';\nimport {Trans} from '../../../common/i18n/trans';\nimport type {DriveSortDescriptor} from '../../drive-store';\n\ninterface Props {\n  descriptor: DriveSortDescriptor;\n  onChange: (value: DriveSortDescriptor) => void;\n  isDisabled?: boolean;\n}\nexport function EntriesSortButton({\n  descriptor,\n  onChange,\n  isDisabled = false,\n}: Props) {\n  const column = descriptor.orderBy;\n  const direction = descriptor.orderDir;\n  const sort = AVAILABLE_SORTS.find(s => s.id === column);\n\n  return (\n    <MenuTrigger\n      showCheckmark\n      selectionMode=\"multiple\"\n      selectedValue={[direction || 'desc', column || '']}\n      onItemSelected={key => {\n        if (key === 'asc' || key === 'desc') {\n          onChange({\n            orderBy: column,\n            orderDir: key,\n          });\n        } else {\n          onChange({\n            orderBy: key as SortColumn,\n            orderDir: direction,\n          });\n        }\n      }}\n    >\n      <Button\n        className=\"text-muted\"\n        variant=\"text\"\n        size=\"sm\"\n        startIcon={<SortIcon />}\n        disabled={isDisabled}\n      >\n        {sort ? <Trans {...sort.label} /> : null}\n      </Button>\n      <Menu>\n        <MenuSection label={<Trans message=\"Direction\" />}>\n          <MenuItem value=\"asc\">\n            <Trans message=\"Ascending\" />\n          </MenuItem>\n          <MenuItem value=\"desc\">\n            <Trans message=\"Descending\" />\n          </MenuItem>\n        </MenuSection>\n        <MenuSection label={<Trans message=\"Sort By\" />}>\n          {AVAILABLE_SORTS.map(item => (\n            <MenuItem key={item.id} value={item.id}>\n              <Trans {...item.label} />\n            </MenuItem>\n          ))}\n        </MenuSection>\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import React from 'react';\nimport {FolderPreviewBreadcrumb} from './folder-preview-breadcrumb';\nimport {EntriesSortButton} from '../../../layout/sorting/entries-sort-button';\nimport {linkPageState, useLinkPageStore} from '../link-page-store';\nimport {IconButton} from '../../../../common/ui/buttons/icon-button';\nimport {GridViewIcon} from '../../../../common/icons/material/GridView';\nimport {useShareableLinkPage} from '../../queries/use-shareable-link-page';\nimport {DriveFolder} from '../../../files/drive-entry';\n\nexport function FolderPreviewHeader() {\n  const activeSort = useLinkPageStore(s => s.activeSort);\n  const {link, isFetching} = useShareableLinkPage();\n  const hasEntry = link && link.entry;\n\n  return (\n    <div className=\"md:flex-row flex flex-col md:items-center gap-14 justify-between p-14 md:p-24 md:h-90\">\n      {hasEntry && (\n        <FolderPreviewBreadcrumb\n          link={link}\n          folder={link.entry as DriveFolder}\n          className=\"flex-auto\"\n        />\n      )}\n      {hasEntry && (\n        <div className=\"flex items-center justify-between md:justify-start text-muted\">\n          <EntriesSortButton\n            isDisabled={isFetching}\n            descriptor={activeSort}\n            onChange={value => {\n              linkPageState().setActiveSort(value);\n            }}\n          />\n          <div className=\"md:border-l md:pl-10 ml-10\">\n            <IconButton\n              onClick={() => {\n                linkPageState().setViewMode(\n                  linkPageState().viewMode === 'grid' ? 'list' : 'grid'\n                );\n              }}\n            >\n              <GridViewIcon />\n            </IconButton>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","export default \"__VITE_ASSET__70babf29__\"","import React from 'react';\nimport {useShareableLinkPage} from '../../queries/use-shareable-link-page';\nimport {IllustratedMessage} from '../../../../common/ui/images/illustrated-message';\nimport {SvgImage} from '../../../../common/ui/images/svg-image/svg-image';\nimport {FolderPreviewFileView} from './folder-preview-file-view';\nimport {Trans} from '../../../../common/i18n/trans';\nimport {DashboardLayout} from '../../../../common/ui/layout/dashboard-layout';\nimport {FileUploadProvider} from '../../../../common/uploads/uploader/file-upload-provider';\nimport {DashboardContent} from '../../../../common/ui/layout/dashboard-content';\nimport {DashboardNavbar} from '../../../../common/ui/layout/dashboard-navbar';\nimport {DashboardContentHeader} from '../../../../common/ui/layout/dashboard-content-header';\nimport {ShareableLinkPageActionButtons} from '../shareable-link-page-action-buttons';\nimport {FolderPreviewHeader} from './folder-preview-header';\nimport shareSvg from './share.svg';\nimport clsx from 'clsx';\n\nexport function FolderPreview() {\n  const {entries, isFetched} = useShareableLinkPage();\n  const showEmptyMessage = isFetched && !entries?.length;\n\n  return (\n    <DashboardLayout name=\"folder-preview\">\n      <DashboardNavbar\n        hideToggleButton\n        rightChildren={<ShareableLinkPageActionButtons />}\n        color=\"bg\"\n      />\n      <DashboardContentHeader>\n        <FolderPreviewHeader />\n      </DashboardContentHeader>\n      <FileUploadProvider>\n        <DashboardContent>\n          {showEmptyMessage ? <EmptyMessage /> : <FolderPreviewFileView />}\n        </DashboardContent>\n      </FileUploadProvider>\n    </DashboardLayout>\n  );\n}\n\ninterface EmptyMessageProps {\n  className?: string;\n}\nfunction EmptyMessage({className}: EmptyMessageProps) {\n  return (\n    <IllustratedMessage\n      className={clsx(className, 'mt-80')}\n      image={<SvgImage src={shareSvg} />}\n      title={<Trans message=\"Folder is empty\" />}\n      description={\n        <Trans message=\"No files have been uploaded to this folder yet\" />\n      }\n    />\n  );\n}\n","import React from 'react';\nimport {FilePreviewContainer} from '../../../common/uploads/preview/file-preview-container';\nimport {useShareableLinkPage} from '../queries/use-shareable-link-page';\nimport {ShareableLinkNavbar} from './shareable-link-navbar';\nimport {AdHost} from '../../../common/admin/ads/ad-host';\n\nexport function ShareableLinkPageFilePreview() {\n  const {link} = useShareableLinkPage();\n\n  if (!link?.entry) return null;\n\n  return (\n    <div className=\"flex flex-col w-full h-full bg-alt\">\n      <ShareableLinkNavbar />\n      <AdHost slot=\"file-preview\" className=\"mt-24\" />\n      <FilePreviewContainer\n        entries={[link.entry]}\n        showHeader={false}\n        allowDownload={link.allow_download}\n      />\n    </div>\n  );\n}\n","import React, {ReactElement} from 'react';\nimport {useShareableLinkPage} from '../queries/use-shareable-link-page';\nimport {useLinkPageStore} from './link-page-store';\nimport {useTrans} from '../../../common/i18n/use-trans';\nimport {ProgressCircle} from '../../../common/ui/progress/progress-circle';\nimport {PasswordPage} from './password-page';\nimport {FolderPreview} from './folder-preview/folder-preview';\nimport {ShareableLinkPageFilePreview} from './shareable-link-page-file-preview';\nimport {FileEntryUrlsContext} from '../../../common/uploads/hooks/file-entry-urls';\nimport {NotFoundPage} from '../../../common/ui/not-found-page/not-found-page';\n\nexport function ShareableLinkPage() {\n  const {status, link} = useShareableLinkPage();\n  const {trans} = useTrans();\n  const isPasswordProtected = useLinkPageStore(s => s.isPasswordProtected);\n  const password = useLinkPageStore(s => s.password);\n\n  let content: ReactElement;\n\n  if (status === 'loading') {\n    content = (\n      <div className=\"flex-auto flex items-center justify-center w-full h-full\">\n        <ProgressCircle\n          aria-label={trans({message: 'Loading link'})}\n          isIndeterminate\n        />\n      </div>\n    );\n  } else if (!link && !isPasswordProtected) {\n    return <NotFoundPage />;\n  } else if (isPasswordProtected && !password) {\n    content = <PasswordPage />;\n  } else if (link?.entry?.type === 'folder') {\n    content = <FolderPreview />;\n  } else {\n    content = <ShareableLinkPageFilePreview />;\n  }\n\n  return (\n    <FileEntryUrlsContext.Provider value={{shareable_link: link?.id, password}}>\n      {content}\n    </FileEntryUrlsContext.Provider>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '../../../../common/http/backend-response/backend-response';\nimport {prettyBytes} from '../../../../common/uploads/utils/pretty-bytes';\nimport {DriveQueryKeys} from '../../../drive-query-keys';\nimport {apiClient} from '../../../../common/http/query-client';\n\nexport interface FetchStorageSummaryResponse extends BackendResponse {\n  used: number;\n  available: number;\n}\n\nexport function useStorageSummary() {\n  return useQuery(DriveQueryKeys.fetchStorageSummary, fetchStorageSummary, {\n    select: formatResponse,\n  });\n}\n\nfunction fetchStorageSummary(): Promise<FetchStorageSummaryResponse> {\n  return apiClient.get(`user/space-usage`).then(response => response.data);\n}\n\nfunction formatResponse(response: FetchStorageSummaryResponse) {\n  // null means that user has unlimited space available\n  const percentage =\n    response.available === null\n      ? 0\n      : (response.used * 100) / response.available;\n\n  return {\n    usedFormatted: prettyBytes(response.used),\n    availableFormatted: prettyBytes(response.available),\n    percentage,\n    used: response.used,\n    available: response.available,\n  };\n}\n","import React from 'react';\nimport {ProgressBarBase, ProgressBarBaseProps} from './progress-bar-base';\n\nexport function Meter(props: ProgressBarBaseProps) {\n  return <ProgressBarBase {...props} role=\"meter progressbar\" />;\n}\n","import React from 'react';\nimport {useStorageSummary} from './storage-summary';\nimport {StorageIcon} from '../../../../common/icons/material/Storage';\nimport {Meter} from '../../../../common/ui/progress/meter';\nimport {Trans} from '../../../../common/i18n/trans';\nimport clsx from 'clsx';\n\nexport function StorageMeter() {\n  const {isLoading, data} = useStorageSummary();\n\n  // prevent translation placeholders from showing if summary is not loaded yet\n  const label = (\n    <span className={clsx('whitespace-nowrap', isLoading && 'invisible')}>\n      <Trans\n        message=\":used of :available used\"\n        values={{\n          used: data?.usedFormatted,\n          available: data?.availableFormatted,\n        }}\n      />\n    </span>\n  );\n  return (\n    <div className=\"pl-24 pt-24 mt-24 border-t flex items-start gap-16\">\n      <StorageIcon className=\"icon-md -mt-4\" />\n      <Meter\n        className=\"flex-auto max-w-144\"\n        size=\"xs\"\n        value={data?.percentage}\n        label={label}\n        showValueLabel={false}\n        labelPosition=\"bottom\"\n      />\n    </div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '../../ui/toast/toast';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {Workspace} from '../types/workspace';\nimport {onFormQueryError} from '../../errors/on-form-query-error';\nimport {message} from '../../i18n/message';\n\ninterface Response extends BackendResponse {\n  workspace: Workspace;\n}\n\ninterface Props {\n  name: string;\n}\n\nexport function useCreateWorkspace(form: UseFormReturn<Props>) {\n  return useMutation((props: Props) => createWorkspace(props), {\n    onSuccess: () => {\n      toast(message('Created workspace'));\n      queryClient.invalidateQueries(WorkspaceQueryKeys.fetchUserWorkspaces);\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction createWorkspace(props: Props): Promise<Response> {\n  return apiClient.post('workspace', props).then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport {FormTextField} from '../ui/forms/input-field/text-field/text-field';\nimport {Form} from '../ui/forms/form';\nimport {Button} from '../ui/buttons/button';\nimport {useCreateWorkspace} from './requests/create-workspace';\nimport {DialogFooter} from '../ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '../ui/overlays/dialog/dialog-context';\nimport {Dialog} from '../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\nimport {Trans} from '../i18n/trans';\n\nexport function NewWorkspaceDialog() {\n  const form = useForm<{name: string}>();\n  const {formId, close} = useDialogContext();\n  const createWorkspace = useCreateWorkspace(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Create workspace\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={() => {\n            createWorkspace.mutate(form.getValues(), {\n              onSuccess: response => {\n                close(response.workspace.id);\n              },\n            });\n          }}\n        >\n          <FormTextField\n            name=\"name\"\n            autoFocus\n            label={<Trans message=\"Workspace name\" />}\n            minLength={3}\n            required\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"text\" onClick={close}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          form={formId}\n          disabled={createWorkspace.isLoading}\n        >\n          <Trans message=\"Create\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {Workspace} from '../types/workspace';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {apiClient} from '../../http/query-client';\n\nexport interface FetchWorkspaceWithMembersResponse extends BackendResponse {\n  workspace: Workspace;\n}\n\nfunction fetchWorkspaceWithMembers(\n  workspaceId: number\n): Promise<FetchWorkspaceWithMembersResponse> {\n  return apiClient\n    .get(`workspace/${workspaceId}`)\n    .then(response => response.data);\n}\n\nexport function useWorkspaceWithMembers(workspaceId: number) {\n  return useQuery(WorkspaceQueryKeys.workspaceWithMembers(workspaceId), () =>\n    fetchWorkspaceWithMembers(workspaceId)\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {WorkspaceInvite} from '../types/workspace-invite';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  invites: WorkspaceInvite[];\n}\n\ninterface Props {\n  workspaceId: number;\n  emails: string[];\n  roleId: number;\n}\n\nfunction InviteMembers({workspaceId, ...other}: Props): Promise<Response> {\n  return apiClient\n    .post(`workspace/${workspaceId}/invite`, other)\n    .then(r => r.data);\n}\n\nexport function useInviteMembers() {\n  return useMutation((props: Props) => InviteMembers(props), {\n    onSuccess: (response, props) => {\n      queryClient.invalidateQueries(\n        WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId)\n      );\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {WorkspaceInvite} from '../types/workspace-invite';\nimport {toast} from '../../ui/toast/toast';\nimport {apiClient} from '../../http/query-client';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  invite: WorkspaceInvite;\n}\n\ninterface Props {\n  workspaceId: number;\n  inviteId: string;\n}\n\nfunction ResendInvite({\n  workspaceId,\n  inviteId,\n  ...other\n}: Props): Promise<Response> {\n  return apiClient\n    .post(`workspace/${workspaceId}/${inviteId}/resend`, other)\n    .then(r => r.data);\n}\n\nexport function useResendInvite() {\n  return useMutation((props: Props) => ResendInvite(props), {\n    onSuccess: () => {\n      toast('Invite sent');\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","const matcher =\n  /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n\nexport function isEmail(string?: string): boolean {\n  if (!string) return false;\n  if (string.length > 320) return false;\n  return matcher.test(string);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '../../ui/toast/toast';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {WorkspaceMember} from '../types/workspace-member';\nimport {WorkspaceInvite} from '../types/workspace-invite';\nimport {message} from '../../i18n/message';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\ninterface Props {\n  workspaceId: number;\n  member: WorkspaceMember | WorkspaceInvite;\n  roleId: number;\n}\n\nfunction ChangeRole({workspaceId, member, ...other}: Props): Promise<Response> {\n  const modelType = member.model_type;\n  const memberId =\n    member.model_type === 'invite' ? member.id : member.member_id;\n  return apiClient\n    .post(\n      `workspace/${workspaceId}/${modelType}/${memberId}/change-role`,\n      other\n    )\n    .then(r => r.data);\n}\n\nexport function useChangeRole() {\n  return useMutation((props: Props) => ChangeRole(props), {\n    onSuccess: (response, props) => {\n      toast(message('Role changed'));\n      queryClient.invalidateQueries(\n        WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId)\n      );\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {useAuth} from '../../auth/use-auth';\nimport {useActiveWorkspaceId} from '../active-workspace-id-context';\nimport {PersonalWorkspace} from '../user-workspaces';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\ninterface Props {\n  workspaceId: number;\n  memberId: number | string;\n  memberType: 'invite' | 'member';\n}\n\nfunction removeMember({\n  workspaceId,\n  memberId,\n  memberType,\n}: Props): Promise<Response> {\n  const endpoint =\n    memberType === 'invite'\n      ? `workspace/invite/${memberId}`\n      : `workspace/${workspaceId}/member/${memberId}`;\n  return apiClient.delete(endpoint).then(r => r.data);\n}\n\nexport function useRemoveMember() {\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\n  const {user} = useAuth();\n  return useMutation((props: Props) => removeMember(props), {\n    onSuccess: (response, props) => {\n      queryClient.invalidateQueries(WorkspaceQueryKeys.fetchUserWorkspaces);\n      queryClient.invalidateQueries(\n        WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId)\n      );\n\n      // if user left workspace that is currently active, switch to personal workspace\n      if (props.memberId === user?.id && workspaceId === props.workspaceId) {\n        setWorkspaceId(PersonalWorkspace.id);\n      }\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import {ConfirmationDialog} from '../ui/overlays/dialog/confirmation-dialog';\nimport {Trans} from '../i18n/trans';\n\nexport function LeaveWorkspaceConfirmation() {\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Leave workspace\" />}\n      body={\n        <div>\n          <Trans message=\"Are you sure you want to leave this workspace?\" />\n          <div className=\"font-semibold mt-8\">\n            <Trans message=\"All resources you've created in the workspace will be transferred to workspace owner.\" />\n          </div>\n        </div>\n      }\n      confirm={<Trans message=\"Leave\" />}\n    />\n  );\n}\n","import {useEffect, useState} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {useWorkspaceWithMembers} from './requests/workspace-with-members';\nimport {ProgressCircle} from '../ui/progress/progress-circle';\nimport {Workspace} from './types/workspace';\nimport {GroupIcon} from '../icons/material/Group';\nimport {WorkspaceMember} from './types/workspace-member';\nimport {useAuth} from '../auth/use-auth';\nimport {ChipField, ChipValue} from '../ui/forms/input-field/chip-field/chip-field';\nimport {useValueLists} from '../http/value-lists';\nimport {Button} from '../ui/buttons/button';\nimport {ArrowDropDownIcon} from '../icons/material/ArrowDropDown';\nimport {useInviteMembers} from './requests/invite-members';\nimport {WorkspaceInvite} from './types/workspace-invite';\nimport {ConfirmationDialog} from '../ui/overlays/dialog/confirmation-dialog';\nimport {useResendInvite} from './requests/resend-invite';\nimport {isEmail} from '../utils/string/is-email';\nimport {ButtonSize} from '../ui/buttons/button-size';\nimport {useChangeRole} from './requests/change-role';\nimport {IconButton} from '../ui/buttons/icon-button';\nimport {useRemoveMember} from './requests/remove-member';\nimport {CloseIcon} from '../icons/material/Close';\nimport {ExitToAppIcon} from '../icons/material/ExitToApp';\nimport {toast} from '../ui/toast/toast';\nimport {DialogTrigger} from '../ui/overlays/dialog/dialog-trigger';\nimport {Menu, MenuItem, MenuTrigger} from '../ui/navigation/menu/menu-trigger';\nimport {useDialogContext} from '../ui/overlays/dialog/dialog-context';\nimport {Dialog} from '../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\nimport {Trans} from '../i18n/trans';\nimport {useTrans} from '../i18n/use-trans';\nimport {message} from '../i18n/message';\nimport {LeaveWorkspaceConfirmation} from './leave-workspace-confirmation';\n\ninterface WorkspaceMembersDialogProps {\n  workspace: Workspace;\n}\nexport function WorkspaceMembersDialog({\n  workspace,\n}: WorkspaceMembersDialogProps) {\n  const {data, isLoading} = useWorkspaceWithMembers(workspace.id);\n  return (\n    <Dialog size=\"lg\">\n      <DialogHeader>\n        <Trans message=\"Manage workspace members\" />\n      </DialogHeader>\n      <DialogBody>\n        {isLoading ? (\n          <div className=\"flex items-center justify-center min-h-[238px]\">\n            <ProgressCircle isIndeterminate aria-label=\"Loading workspace...\" />\n          </div>\n        ) : (\n          <Manager workspace={data!.workspace} />\n        )}\n      </DialogBody>\n    </Dialog>\n  );\n}\n\ninterface ManagerProps {\n  workspace: Workspace;\n}\nfunction Manager({workspace}: ManagerProps) {\n  const can = usePermissions(workspace);\n  const members: (WorkspaceMember | WorkspaceInvite)[] = [\n    ...(workspace.members || []),\n    ...(workspace.invites || []),\n  ];\n\n  return (\n    <div>\n      {can.invite && <InviteChipField workspace={workspace} />}\n      <div className=\"flex items-center gap-10 mb-14 text-base\">\n        <GroupIcon className=\"icon-sm\" />\n        <Trans\n          message=\"Members of `:workspace`\"\n          values={{workspace: workspace.name}}\n        />\n      </div>\n      <AnimatePresence initial={false}>\n        {members.map(member => (\n          <MemberListItem\n            key={`${member.model_type}.${member.id}`}\n            workspace={workspace}\n            member={member}\n          />\n        ))}\n      </AnimatePresence>\n    </div>\n  );\n}\n\ninterface MemberListItemProps {\n  member: WorkspaceMember | WorkspaceInvite;\n  workspace: Workspace;\n}\nfunction MemberListItem({workspace, member}: MemberListItemProps) {\n  return (\n    <m.div\n      initial={{x: '-100%', opacity: 0}}\n      animate={{x: 0, opacity: 1}}\n      exit={{x: '100%', opacity: 0}}\n      transition={{type: 'tween', duration: 0.125}}\n      className=\"flex items-start text-sm gap-14 mb-20\"\n      key={`${member.model_type}.${member.id}`}\n    >\n      <img\n        className=\"w-36 h-36 rounded flex-shrink-0\"\n        src={member.avatar}\n        alt=\"\"\n      />\n      <div className=\"md:flex flex-auto items-center justify-between gap-14 min-w-0\">\n        <div className=\"overflow-hidden mb-10 md:mb-0 md:mr-10\">\n          <div className=\"flex items-center justify-start gap-6\">\n            <div className=\"overflow-hidden text-ellipsis whitespace-nowrap\">\n              {member.display_name}\n            </div>\n            <MemberDisplayNameAppend workspace={workspace} member={member} />\n          </div>\n          <div className=\"text-muted\">{member.email}</div>\n        </div>\n        <MemberActions workspace={workspace} member={member} />\n      </div>\n    </m.div>\n  );\n}\n\nfunction usePermissions(workspace: Workspace) {\n  const {user: authUser} = useAuth();\n  const response = {update: false, invite: false, delete: false};\n  const permissions = ['update', 'invite', 'delete'] as const;\n  const authMember = workspace.members?.find(mb => mb.id === authUser?.id);\n\n  if (authMember) {\n    permissions.forEach(permission => {\n      response[permission] =\n        authMember.is_owner ||\n        !!authMember.permissions?.find(\n          p => p.name === `workspace_members.${permission}`\n        )\n    });\n  }\n\n  return response;\n}\n\ninterface MemberActionsProps {\n  workspace: Workspace;\n  member: WorkspaceMember | WorkspaceInvite;\n}\nfunction MemberActions({workspace, member}: MemberActionsProps) {\n  const [selectedRole, setSelectedRole] = useState<number>(member.role_id);\n  const changeRole = useChangeRole();\n  const {user} = useAuth();\n\n  const can = usePermissions(workspace);\n  const isOwner = member.model_type === 'member' && member.is_owner;\n  const isCurrentUser =\n    member.model_type === 'member' && user?.id === member.id;\n\n  const roleSelector =\n    !can.update || isOwner || isCurrentUser ? (\n      <div className=\"text-muted ml-auto first:capitalize\">\n        <Trans message={member.role_name} />\n      </div>\n    ) : (\n      <RoleMenuTrigger\n        className=\"ml-auto flex-shrink-0\"\n        size=\"xs\"\n        value={selectedRole}\n        isDisabled={changeRole.isLoading}\n        onChange={roleId => {\n          setSelectedRole(roleId);\n          changeRole.mutate({\n            roleId,\n            workspaceId: workspace.id,\n            member,\n          });\n        }}\n      />\n    );\n\n  return (\n    <>\n      {roleSelector}\n      {!isOwner && (isCurrentUser || can.delete) && (\n        <RemoveMemberButton\n          type={isCurrentUser ? 'leave' : 'remove'}\n          member={member}\n          workspace={workspace}\n        />\n      )}\n    </>\n  );\n}\n\ninterface InviteChipFieldProps {\n  workspace: Workspace;\n}\nfunction InviteChipField({workspace}: InviteChipFieldProps) {\n  const {trans} = useTrans();\n  const [chips, setChips] = useState<ChipValue[]>([]);\n  const allEmailsValid = chips.every(chip => !chip.invalid);\n  const displayWith = (chip: ChipValue) => chip.description || chip.name;\n  const [selectedRole, setSelectedRole] = useState<number>();\n  const inviteMembers = useInviteMembers();\n  const {data} = useValueLists(['workspaceRoles']);\n\n  useEffect(() => {\n    if (!selectedRole && data?.workspaceRoles?.length) {\n      setSelectedRole(data.workspaceRoles[0].id);\n    }\n  }, [data, selectedRole]);\n\n  return (\n    <div className=\"mb-30\">\n      <ChipField\n        value={chips}\n        onChange={setChips}\n        displayWith={displayWith}\n        validateWith={chip => {\n          const invalid = !isEmail(chip.description);\n          return {\n            ...chip,\n            invalid,\n            errorMessage: invalid\n              ? trans({message: 'Not a valid email'})\n              : undefined,\n          };\n        }}\n        placeholder={trans({message: 'Enter email addresses'})}\n        label={<Trans message=\"Invite people\" />}\n      />\n      <div className=\"flex items-center gap-14 justify-between mt-14\">\n        <RoleMenuTrigger onChange={setSelectedRole} value={selectedRole} />\n        {chips.length && selectedRole ? (\n          <Button\n            variant=\"flat\"\n            color=\"primary\"\n            size=\"sm\"\n            disabled={inviteMembers.isLoading || !allEmailsValid}\n            onClick={() => {\n              inviteMembers.mutate(\n                {\n                  emails: chips.map(c => displayWith(c)),\n                  roleId: selectedRole,\n                  workspaceId: workspace.id,\n                },\n                {\n                  onSuccess: () => {\n                    setChips([]);\n                  },\n                }\n              );\n            }}\n          >\n            <Trans message=\"Invite\" />\n          </Button>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\ninterface RemoveMemberButtonProps {\n  member: WorkspaceMember | WorkspaceInvite;\n  workspace: Workspace;\n  type: 'leave' | 'remove';\n}\nfunction RemoveMemberButton({\n  member,\n  workspace,\n  type,\n}: RemoveMemberButtonProps) {\n  const removeMember = useRemoveMember();\n  const {close} = useDialogContext();\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={isConfirmed => {\n        if (isConfirmed) {\n          removeMember.mutate({\n            workspaceId: workspace.id,\n            memberId: member.id,\n            memberType: member.model_type,\n          });\n          if (type === 'leave') {\n            close();\n            toast(message('Left workspace'));\n          }\n        }\n      }}\n    >\n      <IconButton\n        size=\"md\"\n        className=\"text-muted flex-shrink-0\"\n        disabled={removeMember.isLoading}\n      >\n        {type === 'leave' ? <ExitToAppIcon /> : <CloseIcon />}\n      </IconButton>\n      {type === 'leave' ? (\n        <LeaveWorkspaceConfirmation />\n      ) : (\n        <RemoveMemberConfirmation member={member} />\n      )}\n    </DialogTrigger>\n  );\n}\n\ninterface RemoveMemberConfirmationProps {\n  member: WorkspaceMember | WorkspaceInvite;\n}\nfunction RemoveMemberConfirmation({member}: RemoveMemberConfirmationProps) {\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Remove member\" />}\n      body={\n        <div>\n          <Trans\n            message=\"Are you sure you want to remove `:name`?\"\n            values={{name: member.display_name}}\n          />\n          <div className=\"font-semibold mt-8\">\n            <Trans\n              message=\"All workspace resources created by `:name` will be transferred to workspace owner.\"\n              values={{\n                name: member.display_name,\n              }}\n            />\n          </div>\n        </div>\n      }\n      confirm={<Trans message=\"Remove\" />}\n    />\n  );\n}\n\ninterface RoleMenuTriggerProps {\n  onChange: (value: number) => void;\n  value?: number;\n  size?: ButtonSize;\n  className?: string;\n  isDisabled?: boolean;\n}\nfunction RoleMenuTrigger({\n  value,\n  onChange,\n  size = 'xs',\n  className,\n  isDisabled,\n}: RoleMenuTriggerProps) {\n  const {data} = useValueLists(['workspaceRoles']);\n  const role = data?.workspaceRoles?.find(r => r.id === value);\n  if (!value || !role || !data?.workspaceRoles) return null;\n\n  return (\n    <MenuTrigger\n      selectionMode=\"single\"\n      selectedValue={value}\n      onSelectionChange={newValue => {\n        onChange(newValue as number);\n      }}\n    >\n      <Button\n        className={className}\n        size={size}\n        variant=\"flat\"\n        color=\"chip\"\n        disabled={isDisabled}\n        endIcon={<ArrowDropDownIcon />}\n      >\n        {role.name}\n      </Button>\n      <Menu>\n        {data.workspaceRoles.map(r => {\n          return (\n            <MenuItem value={r.id} key={r.id} description={r.description}>\n              {r.name}\n            </MenuItem>\n          );\n        })}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n\ninterface MemberDisplayNameAppendProps {\n  member: WorkspaceMember | WorkspaceInvite;\n  workspace: Workspace;\n}\nfunction MemberDisplayNameAppend({\n  member,\n  workspace,\n}: MemberDisplayNameAppendProps) {\n  const {user} = useAuth();\n  const can = usePermissions(workspace);\n\n  if (user?.id === member.id) {\n    return (\n      <div className=\"font-medium\">\n        (<Trans message=\"You\" />)\n      </div>\n    );\n  }\n  if (member.model_type === 'invite') {\n    return (\n      <div className=\"flex items-center gap-4\">\n        <div>·</div>\n        <div className=\"font-medium\">\n          <Trans message=\"Invited\" />\n        </div>\n        {can.invite ? (\n          <>\n            <div>·</div>\n            <ResendInviteDialogTrigger member={member} workspace={workspace} />\n          </>\n        ) : null}\n      </div>\n    );\n  }\n  return null;\n}\n\nfunction ResendInviteDialogTrigger({\n  member,\n  workspace,\n}: MemberDisplayNameAppendProps) {\n  const resendInvite = useResendInvite();\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={isConfirmed => {\n        if (isConfirmed) {\n          resendInvite.mutate({\n            workspaceId: workspace.id,\n            inviteId: member.id as string,\n          });\n        }\n      }}\n    >\n      <Button\n        variant=\"link\"\n        size=\"sm\"\n        color=\"primary\"\n        disabled={resendInvite.isLoading}\n      >\n        <Trans message=\"Resend invite\" />\n      </Button>\n      <ConfirmationDialog\n        title={<Trans message=\"Resend invite\" />}\n        body={\n          <Trans message=\"Are you sure you want to send this invite again?\" />\n        }\n        confirm={<Trans message=\"Send\" />}\n      />\n    </DialogTrigger>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '../../ui/toast/toast';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {Workspace} from '../types/workspace';\nimport {onFormQueryError} from '../../errors/on-form-query-error';\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\nimport {message} from '../../i18n/message';\n\ninterface Response extends BackendResponse {\n  workspace: Workspace;\n}\n\nexport interface UpdateWorkspacePayload {\n  id: number;\n  name: string;\n}\n\nfunction updateWorkspace({\n  id,\n  ...props\n}: UpdateWorkspacePayload): Promise<Response> {\n  return apiClient.put(`workspace/${id}`, props).then(r => r.data);\n}\n\nexport function useUpdateWorkspace(\n  form: UseFormReturn<UpdateWorkspacePayload>\n) {\n  const {close} = useDialogContext();\n  return useMutation(\n    (props: UpdateWorkspacePayload) => updateWorkspace(props),\n    {\n      onSuccess: response => {\n        close();\n        toast(message('Updated workspace'));\n        queryClient.invalidateQueries(WorkspaceQueryKeys.fetchUserWorkspaces);\n        queryClient.invalidateQueries(\n          WorkspaceQueryKeys.workspaceWithMembers(response.workspace.id)\n        );\n      },\n      onError: r => onFormQueryError(r, form),\n    }\n  );\n}\n","import {useForm} from 'react-hook-form';\nimport {FormTextField} from '../ui/forms/input-field/text-field/text-field';\nimport {Form} from '../ui/forms/form';\nimport {Button} from '../ui/buttons/button';\nimport {DialogFooter} from '../ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '../ui/overlays/dialog/dialog-context';\nimport {Dialog} from '../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\nimport {\n  UpdateWorkspacePayload,\n  useUpdateWorkspace,\n} from './requests/update-workspace';\nimport {Workspace} from './types/workspace';\nimport {Trans} from '../i18n/trans';\n\ninterface Props {\n  workspace: Workspace;\n}\nexport function RenameWorkspaceDialog({workspace}: Props) {\n  const form = useForm<UpdateWorkspacePayload>({\n    defaultValues: {id: workspace.id, name: workspace.name},\n  });\n  const {formId, close} = useDialogContext();\n  const updateWorkspace = useUpdateWorkspace(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Rename workspace\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={() => {\n            updateWorkspace.mutate(form.getValues());\n          }}\n        >\n          <FormTextField\n            name=\"name\"\n            autoFocus\n            label={<Trans message=\"Name\" />}\n            minLength={3}\n            required\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"text\" onClick={close}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          form={formId}\n          disabled={updateWorkspace.isLoading}\n        >\n          <Trans message=\"Rename\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '../../ui/toast/toast';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {useActiveWorkspaceId} from '../active-workspace-id-context';\nimport {PersonalWorkspace} from '../user-workspaces';\nimport {message} from '../../i18n/message';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\nexport interface DeleteWorkspacePayload {\n  id: number;\n}\n\nfunction deleteWorkspace({id}: DeleteWorkspacePayload): Promise<Response> {\n  return apiClient.delete(`workspace/${id}`).then(r => r.data);\n}\n\nexport function useDeleteWorkspace() {\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\n  return useMutation(\n    (props: DeleteWorkspacePayload) => deleteWorkspace(props),\n    {\n      onSuccess: (r, payload) => {\n        toast(message('Deleted workspace'));\n        queryClient.invalidateQueries(WorkspaceQueryKeys.fetchUserWorkspaces);\n        queryClient.invalidateQueries(\n          WorkspaceQueryKeys.workspaceWithMembers(payload.id)\n        );\n\n        // if user deleted workspace that is currently active, switch to personal workspace\n        if (workspaceId === payload.id) {\n          setWorkspaceId(PersonalWorkspace.id);\n        }\n      },\n      onError: err => showHttpErrorToast(err),\n    }\n  );\n}\n","import clsx from 'clsx';\nimport {Fragment, useEffect, useState} from 'react';\nimport {ButtonBase} from '../ui/buttons/button-base';\nimport {PersonalWorkspace, useUserWorkspaces} from './user-workspaces';\nimport {UnfoldMoreIcon} from '../icons/material/UnfoldMore';\nimport {AddIcon} from '../icons/material/Add';\nimport {NewWorkspaceDialog} from './new-workspace-dialog';\nimport {WorkspaceMembersDialog} from './workspace-members-dialog';\nimport {useActiveWorkspaceId} from './active-workspace-id-context';\nimport {DialogTrigger} from '../ui/overlays/dialog/dialog-trigger';\nimport {Workspace} from './types/workspace';\nimport {Dialog} from '../ui/overlays/dialog/dialog';\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\nimport {Button} from '../ui/buttons/button';\nimport {CheckIcon} from '../icons/material/Check';\nimport {Menu, MenuItem, MenuTrigger} from '../ui/navigation/menu/menu-trigger';\nimport {KeyboardArrowDownIcon} from '../icons/material/KeyboardArrowDown';\nimport {PersonAddIcon} from '../icons/material/PersonAdd';\nimport {DeleteIcon} from '../icons/material/Delete';\nimport {ExitToAppIcon} from '../icons/material/ExitToApp';\nimport {EditIcon} from '../icons/material/Edit';\nimport {RenameWorkspaceDialog} from './rename-workspace-dialog';\nimport {ConfirmationDialog} from '../ui/overlays/dialog/confirmation-dialog';\nimport {useDeleteWorkspace} from './requests/delete-workspace';\nimport {useRemoveMember} from './requests/remove-member';\nimport {useAuth} from '../auth/use-auth';\nimport {Trans} from '../i18n/trans';\nimport {LeaveWorkspaceConfirmation} from './leave-workspace-confirmation';\n\ntype ActiveDialogName =\n  | 'workspaceMembers'\n  | 'updateWorkspace'\n  | 'deleteWorkspace'\n  | 'leaveWorkspace';\ntype ActiveDialog =\n  | {name: ActiveDialogName; workspace: Workspace}\n  | {name: 'newWorkspace'}\n  | null;\n\ninterface WorkspaceSelectorProps {\n  className?: string;\n  onChange: (id: number) => void;\n}\nexport function WorkspaceSelector({\n  onChange,\n  className,\n}: WorkspaceSelectorProps) {\n  const {data, isFetched, isFetching} = useUserWorkspaces();\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\n  const activeWorkspace = data?.find(w => w.id === workspaceId);\n  const [dialog, setDialog] = useState<ActiveDialog>(null);\n  const [selectorIsOpen, setSelectorIsOpen] = useState(false);\n\n  // if user no longer has access to previously selected workspace, select personal one\n  useEffect(() => {\n    // make sure we don't unset active workspace while user workspaces are being re-fetched\n    if (isFetched && !isFetching && !activeWorkspace) {\n      setWorkspaceId(PersonalWorkspace.id);\n    }\n  }, [activeWorkspace, data, setWorkspaceId, isFetched, isFetching]);\n\n  if (!activeWorkspace) return null;\n\n  return (\n    <Fragment>\n      <DialogTrigger\n        type=\"popover\"\n        isOpen={selectorIsOpen}\n        onClose={() => {\n          setSelectorIsOpen(false);\n        }}\n      >\n        <ButtonBase\n          onClick={() => {\n            setSelectorIsOpen(!selectorIsOpen);\n          }}\n          className={clsx(\n            'flex items-center gap-10 hover:bg-hover rounded ring-inset focus-visible:ring-2',\n            className\n          )}\n        >\n          <span className=\"block flex-auto mr-auto text-left overflow-hidden\">\n            <span className=\"block text-sm text-main font-medium overflow-hidden overflow-ellipsis\">\n              {activeWorkspace.default ? (\n                <Trans message={activeWorkspace.name} />\n              ) : (\n                activeWorkspace.name\n              )}\n            </span>\n            <span className=\"block text-muted text-xs\">\n              {activeWorkspace.default ? (\n                <Trans message=\"Personal workspace\" />\n              ) : (\n                <Trans\n                  message=\":count members\"\n                  values={{count: activeWorkspace.members_count}}\n                />\n              )}\n            </span>\n          </span>\n          <UnfoldMoreIcon className=\"icon-md shrink-0\" />\n        </ButtonBase>\n        <Dialog size=\"min-w-320\">\n          <DialogBody padding=\"p-10\">\n            <div className=\"mb-16 pb-10 border-b\">\n              {data!.map(workspace => (\n                <WorkspaceItem\n                  key={workspace.id}\n                  workspace={workspace}\n                  setDialog={setDialog}\n                  setSelectorIsOpen={setSelectorIsOpen}\n                  onChange={onChange}\n                />\n              ))}\n            </div>\n            <div className=\"text-center mb-4 px-4\">\n              <Button\n                onClick={e => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  setDialog({name: 'newWorkspace'});\n                  setSelectorIsOpen(false);\n                }}\n                variant=\"outline\"\n                startIcon={<AddIcon />}\n                color=\"primary\"\n                className=\"w-full h-40\"\n              >\n                <Trans message=\"Create new workspace\" />\n              </Button>\n            </div>\n          </DialogBody>\n        </Dialog>\n      </DialogTrigger>\n      <DialogContainer\n        dialog={dialog}\n        setDialog={setDialog}\n        onChange={onChange}\n      />\n    </Fragment>\n  );\n}\n\ninterface WorkspaceItemProps {\n  workspace: Workspace;\n  onChange: WorkspaceSelectorProps['onChange'];\n  setSelectorIsOpen: (value: boolean) => void;\n  setDialog: (value: ActiveDialog) => void;\n}\nfunction WorkspaceItem({\n  workspace,\n  onChange,\n  setSelectorIsOpen,\n  setDialog,\n}: WorkspaceItemProps) {\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\n  const isActive = workspaceId === workspace.id;\n\n  return (\n    <div\n      onClick={() => {\n        setWorkspaceId(workspace.id);\n        onChange(workspace.id);\n        setSelectorIsOpen(false);\n      }}\n      className={clsx(\n        'p-10 mb-4 text-left flex items-center gap-12 rounded-lg cursor-pointer',\n        isActive && 'bg-primary/5',\n        !isActive && 'hover:bg-hover'\n      )}\n    >\n      <CheckIcon\n        size=\"sm\"\n        className={clsx('flex-shrink-0 text-primary', !isActive && 'invisible')}\n      />\n      <div className=\"flex-auto\">\n        <div className={clsx('text-sm', isActive && 'font-semibold')}>\n          {workspace.name}\n        </div>\n        <div className=\"text-muted text-sm\">\n          <Trans\n            message=\":count members\"\n            values={{count: workspace.members_count}}\n          />\n        </div>\n      </div>\n      {workspace.id !== 0 && (\n        <ManageButton\n          setSelectorIsOpen={setSelectorIsOpen}\n          workspace={workspace}\n          setDialog={setDialog}\n        />\n      )}\n    </div>\n  );\n}\n\ninterface DialogContainerProps {\n  dialog: ActiveDialog;\n  setDialog: (value: ActiveDialog) => void;\n  onChange?: WorkspaceSelectorProps['onChange'];\n}\nfunction DialogContainer({dialog, setDialog, onChange}: DialogContainerProps) {\n  const deleteWorkspace = useDeleteWorkspace();\n  const removeMember = useRemoveMember();\n  const {user} = useAuth();\n  const {setWorkspaceId} = useActiveWorkspaceId();\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      isOpen={!!dialog?.name}\n      onClose={value => {\n        if (dialog?.name === 'deleteWorkspace' && value) {\n          deleteWorkspace.mutate({id: dialog.workspace.id});\n        }\n        if (dialog?.name === 'leaveWorkspace' && value && user?.id) {\n          removeMember.mutate({\n            workspaceId: dialog.workspace.id,\n            memberId: user.id,\n            memberType: 'member',\n          });\n        }\n        if (dialog?.name === 'newWorkspace' && value) {\n          setWorkspaceId(value);\n          onChange?.(value);\n        }\n        setDialog(null);\n      }}\n    >\n      {dialog?.name === 'newWorkspace' && <NewWorkspaceDialog />}\n      {dialog?.name === 'updateWorkspace' && (\n        <RenameWorkspaceDialog workspace={dialog.workspace} />\n      )}\n      {dialog?.name === 'workspaceMembers' && (\n        <WorkspaceMembersDialog workspace={dialog.workspace} />\n      )}\n      {dialog?.name === 'deleteWorkspace' && (\n        <DeleteWorkspaceConfirmation workspace={dialog.workspace} />\n      )}\n      {dialog?.name === 'leaveWorkspace' && <LeaveWorkspaceConfirmation />}\n    </DialogTrigger>\n  );\n}\n\ninterface DeleteWorkspaceConfirmationProps {\n  workspace: Workspace;\n}\nfunction DeleteWorkspaceConfirmation({\n  workspace,\n}: DeleteWorkspaceConfirmationProps) {\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Delete workspace\" />}\n      body={\n        <Trans\n          message=\"Are you sure you want to delete “:name“?\"\n          values={{name: workspace.name}}\n        />\n      }\n      confirm={<Trans message=\"Delete\" />}\n    />\n  );\n}\n\ninterface ManageButtonProps {\n  setSelectorIsOpen: (value: boolean) => void;\n  setDialog: (dialog: ActiveDialog) => void;\n  workspace: Workspace;\n}\nfunction ManageButton({\n  setSelectorIsOpen,\n  setDialog,\n  workspace,\n}: ManageButtonProps) {\n  const {user} = useAuth();\n\n  return (\n    <MenuTrigger\n      onItemSelected={value => {\n        setSelectorIsOpen(false);\n        setDialog({name: value as ActiveDialogName, workspace});\n      }}\n    >\n      <Button\n        onClick={e => {\n          e.preventDefault();\n          e.stopPropagation();\n        }}\n        color=\"primary\"\n        size=\"xs\"\n        variant=\"outline\"\n        endIcon={<KeyboardArrowDownIcon />}\n      >\n        <Trans message=\"Manage\" />\n      </Button>\n      <Menu>\n        <MenuItem\n          onClick={e => e.stopPropagation()}\n          value=\"workspaceMembers\"\n          startIcon={<PersonAddIcon />}\n        >\n          <Trans message=\"Members\" />\n        </MenuItem>\n        {workspace.owner_id === user?.id && (\n          <MenuItem\n            onClick={e => e.stopPropagation()}\n            value=\"updateWorkspace\"\n            startIcon={<EditIcon />}\n          >\n            <Trans message=\"Rename\" />\n          </MenuItem>\n        )}\n        {workspace.owner_id !== user?.id && (\n          <MenuItem\n            onClick={e => e.stopPropagation()}\n            value=\"leaveWorkspace\"\n            startIcon={<ExitToAppIcon />}\n          >\n            <Trans message=\"Leave\" />\n          </MenuItem>\n        )}\n        {workspace.owner_id === user?.id && (\n          <MenuItem\n            onClick={e => e.stopPropagation()}\n            value=\"deleteWorkspace\"\n            startIcon={<DeleteIcon />}\n          >\n            <Trans message=\"Delete\" />\n          </MenuItem>\n        )}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","export default \"__VITE_ASSET__107c40dd__\"","export default \"__VITE_ASSET__5219b76e__\"","export default \"__VITE_ASSET__49556098__\"","export default \"__VITE_ASSET__389510cc__\"","export default \"__VITE_ASSET__585c130e__\"","import type {DriveFolder} from '../files/drive-entry';\nimport {message} from '../../common/i18n/message';\nimport {MessageDescriptor} from '../../common/i18n/message-descriptor';\nimport addFilesSvg from './add-files.svg';\nimport timeManagement from './time-management.svg';\nimport fileSearching from './file-searching.svg';\nimport throwAwaySvg from './throw-away.svg';\nimport lovingItSvg from './loving-it.svg';\nimport shareSvg from './../shareable-link/shareable-link-page/folder-preview/share.svg';\nimport {DriveSortDescriptor} from '../drive-store';\nimport {BootstrapData} from '../../common/core/bootstrap-data/bootstrap-data';\nimport {getBootstrapData} from '../../common/core/bootstrap-data/use-backend-bootstrap-data';\n\ninterface NoContentMessage {\n  title: MessageDescriptor;\n  description: MessageDescriptor;\n  image: string;\n}\n\nexport interface DrivePage {\n  id: string;\n  label: MessageDescriptor | string;\n  path: string;\n  hasActions?: boolean;\n  canUpload?: boolean;\n  disableSort?: boolean;\n  sortDescriptor: DriveSortDescriptor;\n  queryParams?: Record<string, string | number | boolean>;\n  folder?: DriveFolder;\n  isFolderPage?: boolean;\n  noContentMessage: (isSearchingOrFiltering: boolean) => NoContentMessage;\n}\n\nconst defaultSortDescriptor: DriveSortDescriptor = {\n  orderBy: 'updated_at',\n  orderDir: 'desc',\n};\n\nexport function makeFolderPage(folder: DriveFolder): DrivePage {\n  return {\n    ...makePartialFolderPage(folder.hash),\n    canUpload: folder.permissions['files.update'],\n    label: folder.name,\n    folder,\n  };\n}\n\nexport function makePartialFolderPage(hash: string): DrivePage {\n  return {\n    id: hash,\n    label: '',\n    path: getPathForFolder(hash),\n    hasActions: true,\n    canUpload: false,\n    sortDescriptor: defaultSortDescriptor,\n    isFolderPage: true,\n    noContentMessage: () => ({\n      title: message('Drop files or folders here'),\n      description: message('Or use the \"Upload\" button'),\n      image: addFilesSvg,\n    }),\n  };\n}\n\nexport function getPathForFolder(hash: string): string {\n  if (hash === '0') {\n    return '/drive';\n  }\n  return `/drive/folders/${hash}`;\n}\n\n// bootstrap data will always be available at this point\ninterface BootstrapDataWithRootFolder extends BootstrapData {\n  rootFolder: DriveFolder;\n}\nconst rootFolder = (getBootstrapData() as BootstrapDataWithRootFolder)\n  .rootFolder;\nexport const RootFolderPage = makeFolderPage(rootFolder) as Required<DrivePage>;\n\nexport const RecentPage: DrivePage = {\n  id: 'recent',\n  label: message('Recent'),\n  path: '/drive/recent',\n  disableSort: true,\n  sortDescriptor: {\n    orderBy: 'created_at',\n    orderDir: 'desc',\n  },\n  queryParams: {\n    recentOnly: true,\n  },\n  noContentMessage: () => ({\n    title: message('No recent entries'),\n    description: message('You have not uploaded any files or folders yet'),\n    image: timeManagement,\n  }),\n};\n\nexport const SearchPage: DrivePage = {\n  id: 'search',\n  label: message('Search results'),\n  path: '/drive/search',\n  sortDescriptor: defaultSortDescriptor,\n  noContentMessage: isSearchingOrFiltering => {\n    if (isSearchingOrFiltering) {\n      return {\n        title: message('No matching results'),\n        description: message('Try changing your search query or filters'),\n        image: fileSearching,\n      };\n    }\n    return {\n      title: message('Begin typing or select a filter to search'),\n      description: message('Search for files, folders and other content'),\n      image: fileSearching,\n    };\n  },\n};\n\nexport const SharesPage: DrivePage = {\n  id: 'shares',\n  label: message('Shared'),\n  path: '/drive/shares',\n  sortDescriptor: defaultSortDescriptor,\n  queryParams: {\n    sharedOnly: true,\n  },\n  noContentMessage: () => ({\n    title: message('Shared with me'),\n    description: message('Files and folders other people have shared with you'),\n    image: shareSvg,\n  }),\n};\n\nexport const TrashPage: DrivePage = {\n  id: 'trash',\n  label: message('Trash'),\n  path: '/drive/trash',\n  sortDescriptor: defaultSortDescriptor,\n  hasActions: true,\n  queryParams: {\n    deletedOnly: true,\n  },\n  noContentMessage: () => ({\n    title: message('Trash is empty'),\n    description: message(\n      'There are no files or folders in your trash currently'\n    ),\n    image: throwAwaySvg,\n  }),\n};\n\nexport const StarredPage: DrivePage = {\n  id: 'starred',\n  label: message('Starred'),\n  path: '/drive/starred',\n  sortDescriptor: defaultSortDescriptor,\n  queryParams: {\n    starredOnly: true,\n  },\n  noContentMessage: () => ({\n    title: message('Nothing is starred'),\n    description: message(\n      'Add stars to files and folders that you want to easily find later'\n    ),\n    image: lovingItSvg,\n  }),\n};\n\nexport const DRIVE_PAGES = [\n  RootFolderPage,\n  RecentPage,\n  SearchPage,\n  SharesPage,\n  TrashPage,\n  StarredPage,\n];\n","export enum MenuPositions {\n  DriveSidebar = 'drive-sidebar',\n}\n","\"use strict\";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var r,t=1,n=arguments.length;t<n;t++)for(var o in r=arguments[t])Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o]);return e}).apply(this,arguments)},defaultConfig=(Object.defineProperty(exports,\"__esModule\",{value:!0}),{id:\"id\",parentId:\"parentId\",dataField:\"data\",childrenField:\"children\",throwIfOrphans:!1,rootParentIds:{\"\":!(exports.countNodes=exports.arrayToTree=void 0)},nestedIds:!0,assign:!1});function arrayToTree(c,e){void 0===e&&(e={});for(var r,t=__assign(__assign({},defaultConfig),e),n=[],o={},a=t.throwIfOrphans?new Set:null,s=0,h=c;s<h.length;s++){var i=h[s],d=t.nestedIds?getNestedProperty(i,t.id):i[t.id],l=t.nestedIds?getNestedProperty(i,t.parentId):i[t.parentId];if(t.rootParentIds[d])throw new Error(\"The item array contains a node whose parentId both exists in another node and is in \"+'`rootParentIds` (`itemId`: \"'.concat(d,'\", `rootParentIds`: ').concat(Object.keys(t.rootParentIds).map(function(e){return'\"'.concat(e,'\"')}).join(\", \"),\").\"));Object.prototype.hasOwnProperty.call(o,d)||(o[d]=((r={})[t.childrenField]=[],r)),a&&a.delete(d),t.dataField?o[d][t.dataField]=i:t.assign?o[d]=Object.assign(i,((r={})[t.childrenField]=o[d][t.childrenField],r)):o[d]=__assign(__assign({},i),((i={})[t.childrenField]=o[d][t.childrenField],i));i=o[d];null==l||t.rootParentIds[l]?n.push(i):(Object.prototype.hasOwnProperty.call(o,l)||(o[l]=((d={})[t.childrenField]=[],d),a&&a.add(l)),o[l][t.childrenField].push(i))}if(null!=a&&a.size)throw new Error(\"The items array contains orphans that point to the following parentIds: \"+\"[\".concat(Array.from(a),\"]. These parentIds do not exist in the items array. Hint: prevent orphans to result \")+\"in an error by passing the following option: { throwIfOrphans: false }\");if(t.throwIfOrphans&&countNodes(n,t.childrenField)<Object.keys(o).length)throw new Error(\"The items array contains nodes with a circular parent/child relationship.\");return n}function countNodes(e,t){return e.reduce(function(e,r){return e+1+(r[t]&&countNodes(r[t],t))},0)}function getNestedProperty(e,r){return r.split(\".\").reduce(function(e,r){return e&&e[r]},e)}exports.arrayToTree=arrayToTree,exports.countNodes=countNodes;","import {useQuery} from '@tanstack/react-query';\nimport {DriveFolder} from '../drive-entry';\nimport {useAuth} from '../../../common/auth/use-auth';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {\n  BackendResponse\n} from '../../../common/http/backend-response/backend-response';\nimport {apiClient} from '../../../common/http/query-client';\nimport {\n  useActiveWorkspaceId\n} from '../../../common/workspace/active-workspace-id-context';\n\nexport interface UserFoldersApiParams {\n  userId: number;\n  workspaceId: number;\n}\n\ninterface UserFoldersResponse extends BackendResponse {\n  folders: DriveFolder[];\n  rootFolder: DriveFolder;\n}\n\nfunction fetchUserFolders(\n  params: UserFoldersApiParams\n): Promise<UserFoldersResponse> {\n  return apiClient\n    .get(`users/${params.userId}/folders`, {params})\n    .then(response => response.data);\n}\n\nexport function useFolders() {\n  const {user} = useAuth();\n  const {workspaceId} = useActiveWorkspaceId();\n  const params: UserFoldersApiParams = {\n    userId: user!.id,\n    workspaceId,\n  };\n  return useQuery(\n    DriveQueryKeys.fetchUserFolders(params),\n    () => fetchUserFolders(params),\n    {enabled: !!user}\n  );\n}\n","import {enableMapSet} from 'immer';\nimport create from 'zustand';\nimport {immer} from 'zustand/middleware/immer';\nimport type {DrivePage} from './drive-page/drive-page';\nimport {Key} from 'react';\nimport {DriveEntry} from './files/drive-entry';\nimport {SortColumn, SortDirection} from './layout/sorting/available-sorts';\nimport {\n  getFromLocalStorage,\n  setInLocalStorage,\n} from '../common/utils/hooks/local-storage';\nimport {getBootstrapData} from '../common/core/bootstrap-data/use-backend-bootstrap-data';\n\nconst stableArray: DriveEntry[] = [];\nenableMapSet();\n\nexport type DriveDialog =\n  | 'rename'\n  | 'newFolder'\n  | 'preview'\n  | 'share'\n  | 'getLink'\n  | 'moveTo';\n\nexport interface ActiveActionDialog {\n  name: DriveDialog;\n  entries: DriveEntry[];\n}\n\nexport interface DriveSortDescriptor {\n  orderBy?: SortColumn;\n  orderDir?: SortDirection;\n}\n\ninterface State {\n  uploadQueueIsOpen: boolean;\n  selectedEntries: Set<number>;\n  sidebarExpandedKeys: Key[];\n  activePage?: DrivePage;\n  activeActionDialog?: {\n    name: DriveDialog;\n    entries: DriveEntry[];\n  } | null;\n  entriesBeingDragged: number[];\n  viewMode: 'grid' | 'list';\n  sortDescriptor: DriveSortDescriptor;\n  contextMenuData: {x: number; y: number; entry?: DriveEntry} | null;\n}\n\ninterface Actions {\n  setUploadQueueIsOpen: (isOpen: boolean) => void;\n  setSidebarExpandedKeys: (keys: Key[]) => void;\n  expandSidebarItem: (key: Key) => void;\n  collapseSidebarItem: (key: Key) => void;\n  toggleSidebarItem: (key: Key) => void;\n  setActivePage: (page: DrivePage) => void;\n  setActiveActionDialog: (\n    name: DriveDialog | null,\n    entries?: DriveEntry[]\n  ) => void;\n  setViewMode: (mode: 'grid' | 'list') => void;\n  setSortDescriptor: (value: DriveSortDescriptor) => void;\n  setContextMenuData: (\n    position: {x: number; y: number; entry?: DriveEntry} | null\n  ) => void;\n  setEntriesBeingDragged: (value: number[]) => void;\n  selectEntries: (\n    entries: (number | undefined | null)[],\n    merge?: boolean\n  ) => void;\n  deselectEntries: (entries: number[] | 'all') => void;\n  reset: () => void;\n}\n\nconst initialState: State = {\n  uploadQueueIsOpen: false,\n  contextMenuData: null,\n  selectedEntries: new Set(),\n  entriesBeingDragged: [],\n  activeActionDialog: null,\n  sidebarExpandedKeys: [],\n  viewMode: getFromLocalStorage<'list' | 'grid'>(\n    'drive.viewMode',\n    getBootstrapData().settings?.drive?.default_view || 'grid'\n  ),\n  sortDescriptor: {\n    orderBy: 'updated_at',\n    orderDir: 'desc',\n  },\n};\n\nexport const useDriveStore = create<State & Actions>()(\n  immer((set, get) => ({\n    ...initialState,\n    setUploadQueueIsOpen: isOpen => {\n      set(state => {\n        state.uploadQueueIsOpen = isOpen;\n      });\n    },\n    setContextMenuData: data => {\n      set(state => {\n        state.contextMenuData = data;\n      });\n    },\n    setSortDescriptor: value => {\n      set(state => {\n        state.sortDescriptor = value;\n      });\n    },\n    setActivePage: value => {\n      set(state => {\n        state.activePage = value;\n        state.sortDescriptor = value.sortDescriptor;\n      });\n    },\n    setEntriesBeingDragged: value => {\n      set(state => {\n        state.entriesBeingDragged = value;\n      });\n    },\n    setActiveActionDialog: (name, entries = stableArray) => {\n      set(state => {\n        const current = get().activeActionDialog;\n        // prevent creating a new object, if neither name nor entries changed\n        if (current?.name !== name || current.entries !== entries) {\n          state.activeActionDialog = name ? {name, entries} : null;\n        }\n      });\n    },\n    setViewMode: mode => {\n      set(state => {\n        state.viewMode = mode;\n        setInLocalStorage('drive.viewMode', mode);\n      });\n    },\n    setSidebarExpandedKeys: value =>\n      set(state => {\n        state.sidebarExpandedKeys = value;\n      }),\n    expandSidebarItem: key =>\n      set(state => {\n        if (!state.sidebarExpandedKeys.includes(key)) {\n          state.sidebarExpandedKeys.push(key);\n        }\n      }),\n    collapseSidebarItem: key =>\n      set(state => {\n        const index = state.sidebarExpandedKeys.indexOf(key);\n        if (index > -1) {\n          state.sidebarExpandedKeys.splice(index, 1);\n        }\n      }),\n    toggleSidebarItem: key =>\n      set(state => {\n        if (state.sidebarExpandedKeys.includes(key)) {\n          state.expandSidebarItem(key);\n        } else {\n          state.collapseSidebarItem(key);\n        }\n      }),\n    selectEntries: (entries, merge) => {\n      set(state => {\n        if (!merge) {\n          state.selectedEntries.clear();\n        }\n        entries.forEach(e => e && state.selectedEntries.add(e));\n      });\n    },\n    deselectEntries: entries => {\n      set(state => {\n        if (!state.selectedEntries.size) return;\n        if (entries === 'all') {\n          state.selectedEntries = new Set();\n        } else {\n          entries.forEach(e => state.selectedEntries.delete(e));\n        }\n      });\n    },\n    reset: () => {\n      set(initialState);\n    },\n  }))\n);\n\nexport function driveState() {\n  return useDriveStore.getState();\n}\n\nexport function useActiveDialogEntry() {\n  const dialog = useDriveStore(s => s.activeActionDialog);\n  // this will only be used inside dialog, so entry will always be set in that case\n  return dialog?.entries[0]!;\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '../../../common/http/query-client';\nimport {BackendResponse} from '../../../common/http/backend-response/backend-response';\nimport {DriveEntry} from '../drive-entry';\nimport {toast} from '../../../common/ui/toast/toast';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '../../../common/i18n/message';\nimport {FileEntry} from '../../../common/uploads/file-entry';\nimport {RootFolderPage} from '../../drive-page/drive-page';\nimport {showHttpErrorToast} from '../../../common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  entries: DriveEntry[];\n  destination: FileEntry | null;\n}\n\ninterface Payload {\n  entryIds: number[];\n  destinationId?: number | null;\n}\n\nexport function useMoveEntries() {\n  return useMutation((payload: Payload) => moveEntries(payload), {\n    onSuccess: (r, p) => {\n      invalidateEntryQueries();\n      toast(\n        message('Moved [one 1 item|other :count items] to \":destination\"', {\n          values: {\n            count: p.entryIds.length,\n            destination: (r.destination || RootFolderPage.folder).name,\n          },\n        })\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not move items')),\n  });\n}\n\nfunction moveEntries(payload: Payload): Promise<Response> {\n  // backend expects null for root folder, it might be zero or empty string on frontend\n  payload.destinationId = !payload.destinationId ? null : payload.destinationId;\n  return apiClient\n    .post('file-entries/move', payload)\n    .then(response => response.data);\n}\n","import {useFileUploadStore} from '../../common/uploads/uploader/file-upload-provider';\nimport {useCallback} from 'react';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {UploadedFile} from '../../common/uploads/uploaded-file';\nimport {UploadStrategyConfig} from '../../common/uploads/uploader/strategy/upload-strategy';\nimport {queryClient} from '../../common/http/query-client';\nimport {DriveQueryKeys, invalidateEntryQueries} from '../drive-query-keys';\nimport {useActiveWorkspaceId} from '../../common/workspace/active-workspace-id-context';\nimport {useStorageSummary} from '../layout/sidebar/storage-summary/storage-summary';\nimport {toast} from '../../common/ui/toast/toast';\nimport {message} from '../../common/i18n/message';\nimport {useSettings} from '../../common/core/settings/use-settings';\n\nexport type UploadFilesFn = (\n  files: (File | UploadedFile)[] | FileList,\n  options?: UploadStrategyConfig\n) => void;\n\nconst EightMB = 8388608;\n\nexport function useDriveUploadQueue() {\n  const uploadMultiple = useFileUploadStore(s => s.uploadMultiple);\n  const activePage = useDriveStore(s => s.activePage);\n  const {data: usage} = useStorageSummary();\n  const {workspaceId} = useActiveWorkspaceId();\n  const parentId = activePage?.folder?.id || null;\n\n  const {uploads} = useSettings();\n\n  const maxFileSize = uploads.max_size || EightMB;\n  const allowedFileTypes = uploads.allowed_extensions;\n  const blockedFileTypes = uploads.blocked_extensions;\n\n  const uploadFiles: UploadFilesFn = useCallback(\n    (files, options = {}) => {\n      if (!options.metadata) {\n        options.metadata = {};\n      }\n      options.metadata.workspaceId = workspaceId;\n      if (!options.metadata.parentId) {\n        options.metadata.parentId = parentId;\n      }\n\n      files = [...files].map(file => {\n        return file instanceof UploadedFile ? file : new UploadedFile(file);\n      });\n\n      // check if this upload will not put user over their allowed storage space\n      if (usage) {\n        const sizeOfFiles = files.reduce((sum, file) => sum + file.size, 0);\n        const currentlyUsing = usage.used;\n        const availableSpace = usage.available;\n\n        if (sizeOfFiles + currentlyUsing > availableSpace) {\n          toast.danger(\n            message(\n              'You have exhausted your allowed space of :space. Delete some files or upgrade your plan.',\n              {values: {space: usage.availableFormatted}}\n            ),\n            {action: {action: '/pricing', label: message('Upgrade')}}\n          );\n          return;\n        }\n      }\n\n      uploadMultiple(files, {\n        ...options,\n        restrictions: {\n          maxFileSize,\n          allowedFileTypes,\n          blockedFileTypes,\n        },\n        onSuccess: entry => {\n          options?.onSuccess?.(entry);\n          invalidateEntryQueries();\n          queryClient.invalidateQueries(DriveQueryKeys.fetchStorageSummary);\n        },\n      });\n      driveState().setUploadQueueIsOpen(true);\n    },\n    [\n      uploadMultiple,\n      parentId,\n      workspaceId,\n      allowedFileTypes,\n      blockedFileTypes,\n      maxFileSize,\n      usage,\n    ]\n  );\n  return {uploadFiles};\n}\n","import {FileEntry} from '../../../common/uploads/file-entry';\n\nexport interface PartialFolder {\n  id: number;\n  name: string;\n  path: string;\n  parent_id: number | null;\n  type: string;\n}\n\nexport function canMoveEntriesInto(\n  targets: FileEntry[],\n  destination: PartialFolder\n) {\n  if (destination.type !== 'folder') return false;\n\n  // should not be able to move folder into its\n  // own child or folder it's already in\n  return targets.every(target => {\n    if (!target) return false;\n    // entry is already in this folder\n    if (\n      destination.id === target.parent_id ||\n      // root folder check\n      (!target.parent_id && destination.id === 0)\n    ) {\n      return false;\n    }\n\n    return !destinationIsInTarget(destination, target);\n  });\n}\n\nfunction destinationIsInTarget(destination: PartialFolder, target: FileEntry) {\n  const destinationPath = (destination.path || '').split('/');\n  const targetPath = (target.path || '').split('/');\n  return targetPath.every((part, index) => {\n    return destinationPath[index] === part;\n  });\n}\n","import {FileEntry} from '../../common/uploads/file-entry';\nimport {useMoveEntries} from './queries/use-move-entries';\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\nimport {canMoveEntriesInto} from './utils/can-move-entries-into';\nimport {\n  ConnectedDraggable,\n  MixedDraggable,\n} from '../../common/ui/interactions/dnd/use-draggable';\nimport {NativeFileDraggable} from '../../common/ui/interactions/dnd/use-droppable';\n\nexport function useFolderDropAction(folder: FileEntry) {\n  const moveEntries = useMoveEntries();\n  const {uploadFiles} = useDriveUploadQueue();\n\n  const onDrop = async (target: ConnectedDraggable | NativeFileDraggable) => {\n    if (folder.type !== 'folder') return;\n    if (target.type === 'nativeFile') {\n      uploadFiles(await target.getData(), {\n        metadata: {parentId: folder.id},\n      });\n    } else if (target.type === 'fileEntry') {\n      const entries = target.getData() as FileEntry[];\n      if (entries?.length && canMoveEntriesInto(entries, folder)) {\n        moveEntries.mutate({\n          destinationId: folder.id,\n          entryIds: entries.map(e => e.id),\n        });\n      }\n    }\n  };\n\n  return {onDrop};\n}\n\nexport function folderAcceptsDrop(target: MixedDraggable, entry: FileEntry) {\n  if (target.type === 'fileEntry') {\n    const entries = target.getData() as FileEntry[];\n    return canMoveEntriesInto(entries, entry);\n  }\n  return true;\n}\n","import {FileEntry} from '../../../common/uploads/file-entry';\n\nexport function makeFolderTreeDragId(entry: FileEntry) {\n  return `${entry.id}-tree`;\n}\n\nexport function isFolderTreeDragId(id: string | number): boolean {\n  return `${id}`.endsWith('-tree');\n}\n","import {useDroppable} from '../../../common/ui/interactions/dnd/use-droppable';\nimport {driveState} from '../../drive-store';\nimport {RefObject, useState} from 'react';\nimport {\n  folderAcceptsDrop,\n  useFolderDropAction,\n} from '../../files/use-folder-drop-action';\nimport {DriveFolder} from '../../files/drive-entry';\nimport {makeFolderTreeDragId} from './folder-tree-drag-id';\n\ninterface Props {\n  folder: DriveFolder;\n  ref: RefObject<HTMLDivElement>;\n}\nexport function useSidebarTreeDropTarget({folder, ref}: Props) {\n  const [isDragOver, setIsDragOver] = useState(false);\n  const {onDrop} = useFolderDropAction(folder);\n\n  const dropProps = useDroppable({\n    id: makeFolderTreeDragId(folder),\n    ref,\n    types: ['fileEntry', 'nativeFile'],\n    acceptsDrop: draggable => folderAcceptsDrop(draggable, folder),\n    onDragEnter: draggable => {\n      if (folderAcceptsDrop(draggable, folder)) {\n        setIsDragOver(true);\n      }\n    },\n    onDragLeave: () => {\n      setIsDragOver(false);\n    },\n    onDropActivate: () => {\n      if (!driveState().sidebarExpandedKeys.includes(folder.id)) {\n        driveState().setSidebarExpandedKeys([\n          ...driveState().sidebarExpandedKeys,\n          folder.id,\n        ]);\n      }\n    },\n    onDrop,\n  });\n\n  return {...dropProps, isDragOver};\n}\n","import {createContext, Key} from 'react';\n\nexport interface TreeContextValue {\n  expandedKeys: Key[];\n  setExpandedKeys: (value: Key[]) => void;\n  selectedKeys: Key[];\n  setSelectedKeys: (value: Key[]) => void;\n  focusedNode?: Key;\n  setFocusedNode: (node?: Key) => void;\n}\n\nexport const TreeContext = createContext<TreeContextValue>(null!);\n","import {TreeItemRenderer} from './tree-item';\nimport {cloneElement} from 'react';\nimport {TreeNode} from './tree';\n\ninterface RenderTreeProps<T extends TreeNode> {\n  nodes: T[];\n  parentNode?: T;\n  itemRenderer: TreeItemRenderer<T>;\n  level?: number;\n}\nexport function renderTree<T extends TreeNode>({\n  nodes,\n  itemRenderer,\n  parentNode,\n  level,\n}: RenderTreeProps<T>) {\n  return nodes.map((node, index) => {\n    return cloneElement(itemRenderer(node), {\n      level: level == undefined ? 0 : level + 1,\n      index,\n      node,\n      parentNode,\n      key: node.id,\n      itemRenderer,\n    });\n  });\n}\n","import React, {\n  forwardRef,\n  MouseEventHandler,\n  ReactNode,\n  useContext,\n} from 'react';\nimport {TreeContext} from './tree-context';\nimport clsx from 'clsx';\nimport {ArrowRightIcon} from '../../icons/material/ArrowRight';\n\ninterface TreeLabelProps {\n  level?: number;\n  node: any;\n  icon?: ReactNode;\n  label?: ReactNode;\n  className?: string;\n}\nexport const TreeLabel = forwardRef<HTMLDivElement, TreeLabelProps>(\n  ({icon, label, level = 0, node, className, ...domProps}, ref) => {\n    const {expandedKeys, setExpandedKeys, selectedKeys, setSelectedKeys} =\n      useContext(TreeContext);\n    const isExpanded = expandedKeys.includes(node.id);\n    const isSelected = selectedKeys.includes(node.id);\n\n    const handleExpandIconClick: MouseEventHandler = e => {\n      e.stopPropagation();\n      const index = expandedKeys.indexOf(node.id);\n      const newExpandedKeys = [...expandedKeys];\n      if (index > -1) {\n        newExpandedKeys.splice(index, 1);\n      } else {\n        newExpandedKeys.push(node.id);\n      }\n      setExpandedKeys(newExpandedKeys);\n    };\n\n    return (\n      <div\n        {...domProps}\n        ref={ref}\n        onClick={e => {\n          e.stopPropagation();\n          setSelectedKeys([node.id]);\n        }}\n        className={clsx(\n          'flex flex-nowrap whitespace-nowrap items-center gap-4 py-6 rounded header cursor-pointer overflow-hidden text-ellipsis tree-label',\n          className,\n          isSelected && 'bg-primary/selected text-primary font-bold',\n          !isSelected && 'hover:bg-hover'\n        )}\n      >\n        {level > 0 && (\n          <div className=\"flex\">\n            {Array.from({length: level}).map((_, i) => {\n              return <div key={i} className=\"w-24 h-24\" />;\n            })}\n          </div>\n        )}\n        <div onClick={handleExpandIconClick}>\n          <ArrowRightIcon\n            className={clsx(\n              'icon-sm cursor-default transition-transform',\n              isExpanded && 'rotate-90'\n            )}\n          />\n        </div>\n        {icon}\n        <div className=\"overflow-hidden text-ellipsis pr-6\">{label}</div>\n      </div>\n    );\n  }\n);\nTreeLabel.displayName = 'TreeLabel';\n","import React, {HTMLAttributes, ReactElement, ReactNode, Ref, useContext, useEffect} from 'react';\nimport {useFocusManager} from '@react-aria/focus';\nimport {TreeContext} from './tree-context';\nimport {createEventHandler} from '../../utils/dom/create-event-handler';\nimport clsx from 'clsx';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {TreeNode} from './tree';\nimport {renderTree} from './render-tree';\nimport {TreeLabel} from './tree-label';\n\nexport type TreeItemRenderer<T extends TreeNode> = (\n  node: any\n) => ReactElement<TreeItemProps<T>>;\n\nexport interface TreeItemProps<T extends TreeNode>\n  extends HTMLAttributes<HTMLElement> {\n  label: ReactNode;\n  icon: ReactNode;\n  node?: T;\n  parentNode?: T;\n  level?: number;\n  index?: number;\n  itemRenderer?: TreeItemRenderer<T>;\n  labelRef?: Ref<HTMLDivElement>;\n  labelClassName?: string;\n  className?: string;\n}\nexport function TreeItem<T extends TreeNode>({\n  label,\n  icon,\n  node,\n  level,\n  index,\n  itemRenderer,\n  labelRef,\n  labelClassName,\n  className,\n  parentNode,\n  ...domProps\n}: TreeItemProps<T>) {\n  const focusManager = useFocusManager();\n  const {\n    expandedKeys,\n    selectedKeys,\n    focusedNode,\n    setFocusedNode,\n    setExpandedKeys,\n    setSelectedKeys,\n  } = useContext(TreeContext);\n\n  // clear focused node on unmount\n  useEffect(() => {\n    return () => {\n      if (focusedNode === node?.id) {\n        setFocusedNode(undefined);\n      }\n    };\n  }, [focusedNode, node?.id, setFocusedNode]);\n\n  if (!node || !itemRenderer) return null;\n\n  const hasChildren = node.children.length;\n  const isExpanded = hasChildren && expandedKeys.includes(node.id);\n  const isSelected = selectedKeys.includes(node.id);\n  const isFirstNode = level === 0 && index === 0;\n  const isFocused =\n    focusedNode == undefined ? isFirstNode : focusedNode === node.id;\n\n  const onKeyDown = (e: React.KeyboardEvent<HTMLUListElement>) => {\n    if (focusedNode == null) return;\n    switch (e.key) {\n      // select the node\n      case 'Enter':\n      case ' ':\n        e.stopPropagation();\n        e.preventDefault();\n        setSelectedKeys([focusedNode]);\n        break;\n\n      // expand node, or move focus to first (and only first) child\n      case 'ArrowRight':\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (!hasChildren) return;\n\n        if (!isExpanded) {\n          setExpandedKeys([...expandedKeys, focusedNode]);\n        } else {\n          focusManager.focusNext();\n        }\n        break;\n\n      // collapse node, or move focus to parent node\n      case 'ArrowLeft':\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (isExpanded) {\n          const index = expandedKeys.indexOf(focusedNode);\n          const newKeys = [...expandedKeys];\n          newKeys.splice(index, 1);\n          setExpandedKeys(newKeys);\n        } else if (parentNode) {\n          const parentEl =\n            document.activeElement?.parentElement?.closest('[tabindex]');\n          if (parentEl) {\n            (parentEl as HTMLElement).focus();\n          }\n        }\n        break;\n\n      // focus next visible node, recursively\n      case 'ArrowDown':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager.focusNext();\n        break;\n\n      // focus previous visible node, recursively\n      case 'ArrowUp':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager.focusPrevious();\n        break;\n\n      // focus first visible node\n      case 'Home':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager.focusFirst();\n        break;\n\n      // focus last visible node\n      case 'End':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager.focusLast();\n        break;\n\n      // expand all sibling nodes\n      case '*':\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (parentNode?.children) {\n          const newKeys = [...expandedKeys];\n          parentNode.children.forEach(childNode => {\n            if (\n              childNode.children.length &&\n              !expandedKeys.includes(childNode.id)\n            ) {\n              newKeys.push(childNode.id);\n            }\n          });\n          if (newKeys.length !== expandedKeys.length) {\n            setExpandedKeys(newKeys);\n          }\n        }\n        break;\n    }\n  };\n\n  return (\n    <li\n      role=\"treeitem\"\n      aria-expanded={isExpanded ? 'true' : 'false'}\n      aria-selected={isSelected}\n      tabIndex={isFocused ? 0 : -1}\n      onKeyDown={createEventHandler(onKeyDown)}\n      onFocus={e => {\n        e.stopPropagation();\n        setFocusedNode(node.id);\n      }}\n      onBlur={e => {\n        e.stopPropagation();\n        // only clear focus state when focus moves outside the tree\n        if (!e.currentTarget.contains(e.relatedTarget)) {\n          setFocusedNode(undefined);\n        }\n      }}\n      className={clsx(\n        'outline-none',\n        // focus direct .tree-label child when this element has :focus-visible\n        '[&>.tree-label]:focus-visible:ring [&>.tree-label]:focus-visible:ring-2 [&>.tree-label]:focus-visible:ring-inset',\n        className\n      )}\n    >\n      <TreeLabel\n        ref={labelRef}\n        className={labelClassName}\n        node={node}\n        level={level}\n        label={label}\n        icon={icon}\n        {...domProps}\n      />\n      <AnimatePresence initial={false}>\n        {isExpanded ? (\n          <m.ul\n            key={`${node.id}-group`}\n            role=\"group\"\n            initial=\"closed\"\n            animate=\"open\"\n            exit=\"closed\"\n            variants={{\n              open: {opacity: 1, height: 'auto'},\n              closed: {opacity: 0, height: 0, overflow: 'hidden'},\n            }}\n          >\n            {renderTree({\n              nodes: node.children,\n              parentNode: node,\n              itemRenderer,\n              level,\n            })}\n          </m.ul>\n        ) : null}\n      </AnimatePresence>\n    </li>\n  );\n}\n","import React, {Key, useState} from 'react';\nimport {useControlledState} from '@react-stately/utils';\nimport {FocusScope} from '@react-aria/focus';\nimport {TreeContext, TreeContextValue} from './tree-context';\nimport {TreeItemRenderer} from './tree-item';\nimport {renderTree} from './render-tree';\n\nexport interface TreeNode {\n  id: number | string;\n  children: TreeNode[];\n}\n\ninterface TreeProps<T extends TreeNode> {\n  children: TreeItemRenderer<T>;\n  nodes: T[];\n  selectedKeys?: Key[];\n  expandedKeys?: Key[];\n  defaultExpandedKeys?: Key[];\n  onExpandedKeysChange?: (value: Key[]) => void;\n  defaultSelectedKeys?: Key[];\n  onSelectedKeysChange?: (value: Key[]) => void;\n}\nexport function Tree<T extends TreeNode>({\n  children,\n  nodes,\n  ...props\n}: TreeProps<T>) {\n  const [expandedKeys, setExpandedKeys] = useControlledState(\n    props.expandedKeys,\n    props.defaultSelectedKeys,\n    props.onExpandedKeysChange\n  );\n  const [selectedKeys, setSelectedKeys] = useControlledState(\n    props.selectedKeys,\n    props.defaultSelectedKeys,\n    props.onSelectedKeysChange\n  );\n  const [focusedNode, setFocusedNode] = useState<Key | undefined>();\n\n  const value: TreeContextValue = {\n    expandedKeys,\n    setExpandedKeys,\n    selectedKeys,\n    setSelectedKeys,\n    focusedNode,\n    setFocusedNode,\n  };\n\n  return (\n    <TreeContext.Provider value={value}>\n      <FocusScope>\n        <TreeRoot nodes={nodes} itemRenderer={children} />\n      </FocusScope>\n    </TreeContext.Provider>\n  );\n}\n\ninterface TreeRootProps<T extends TreeNode> {\n  nodes: TreeNode[];\n  itemRenderer: TreeItemRenderer<T>;\n}\nfunction TreeRoot<T extends TreeNode>(props: TreeRootProps<T>) {\n  return (\n    <ul className=\"overflow-hidden text-sm\" role=\"tree\">\n      {renderTree(props)}\n    </ul>\n  );\n}\n","import React, {useMemo, useRef} from 'react';\nimport {arrayToTree} from 'performant-array-to-tree';\nimport {useFolders} from '../../files/queries/use-folders';\nimport {DriveFolder} from '../../files/drive-entry';\nimport {driveState, useDriveStore} from '../../drive-store';\nimport {FolderIcon} from '../../../common/icons/material/Folder';\nimport {getPathForFolder, RootFolderPage} from '../../drive-page/drive-page';\nimport {mergeProps} from '@react-aria/utils';\nimport {\n  ConnectedDraggable,\n  useDraggable,\n} from '../../../common/ui/interactions/dnd/use-draggable';\nimport {useSidebarTreeDropTarget} from './use-sidebar-tree-drop-target';\nimport {makeFolderTreeDragId} from './folder-tree-drag-id';\nimport {FileEntry} from '../../../common/uploads/file-entry';\nimport clsx from 'clsx';\nimport {BackupIcon} from '../../../common/icons/material/Backup';\nimport {TreeItem, TreeItemProps} from '../../../common/ui/tree/tree-item';\nimport {Tree} from '../../../common/ui/tree/tree';\nimport {useNavigate} from '../../../common/utils/hooks/use-navigate';\n\ninterface TreeFolder extends DriveFolder {\n  children: TreeFolder[];\n}\n\nexport function FolderTree() {\n  const navigate = useNavigate();\n  const {data} = useFolders();\n  const expandedKeys = useDriveStore(s => s.sidebarExpandedKeys);\n\n  const activePage = useDriveStore(s => s.activePage);\n  let selectedKeys: number[] = [];\n  if (activePage?.isFolderPage) {\n    selectedKeys = activePage.folder ? [activePage.folder.id] : [];\n  }\n\n  const tree = useMemo(() => {\n    const folders = arrayToTree(data?.folders || [], {\n      parentId: 'parent_id',\n      dataField: null,\n    }) as TreeFolder[];\n    const rootFolder = {\n      ...RootFolderPage.folder,\n      children: folders,\n    };\n    return [rootFolder];\n  }, [data?.folders]);\n\n  return (\n    <Tree\n      nodes={tree}\n      expandedKeys={expandedKeys}\n      onExpandedKeysChange={keys => {\n        driveState().setSidebarExpandedKeys(keys);\n      }}\n      selectedKeys={selectedKeys}\n      onSelectedKeysChange={([id]) => {\n        const entryHash = findHash(id as number, tree);\n        if (entryHash) {\n          navigate(getPathForFolder(entryHash));\n        } else {\n          navigate(RootFolderPage.path);\n        }\n      }}\n    >\n      {() => <FolderTreeItem />}\n    </Tree>\n  );\n}\n\n// props will be passed by tree via cloneElement\nfunction FolderTreeItem(props: Partial<TreeItemProps<TreeFolder>>) {\n  const {node} = props as Required<TreeItemProps<TreeFolder>>;\n  const labelRef = useRef<HTMLDivElement>(null);\n  const isRootFolder = node.id === 0;\n  const isDragging = useDriveStore(s =>\n    s.entriesBeingDragged.includes(node.id)\n  );\n\n  const {draggableProps} = useDraggable({\n    type: 'fileEntry',\n    id: makeFolderTreeDragId(node),\n    ref: labelRef,\n    disabled: isRootFolder,\n    hidePreview: true,\n    onDragStart: (e, draggable) => {\n      const d = draggable as ConnectedDraggable<FileEntry[]>;\n      driveState().setEntriesBeingDragged(d.getData().map(e => e.id));\n      driveState().selectEntries([]);\n    },\n    onDragEnd: () => {\n      driveState().setEntriesBeingDragged([]);\n    },\n    getData: () => [node],\n  });\n\n  const {droppableProps, isDragOver} = useSidebarTreeDropTarget({\n    folder: node,\n    ref: labelRef,\n  });\n\n  return (\n    <TreeItem\n      {...mergeProps(draggableProps, droppableProps, props)}\n      onContextMenu={e => {\n        e.preventDefault();\n        e.stopPropagation();\n        driveState().deselectEntries('all');\n        driveState().setContextMenuData({\n          x: e.clientX,\n          y: e.clientY,\n          entry: node,\n        });\n      }}\n      labelRef={labelRef}\n      className={isRootFolder ? 'focus-visible:ring-2' : undefined}\n      labelClassName={clsx(\n        isDragOver && 'bg-primary/selected ring ring-2 ring-inset ring-primary',\n        isDragging && 'opacity-30',\n        isRootFolder && 'h-40'\n      )}\n      icon={\n        isRootFolder ? (\n          <BackupIcon size=\"md\" className=\"mr-6\" />\n        ) : (\n          <FolderIcon size=\"sm\" className=\"mr-4\" />\n        )\n      }\n      label={node.name}\n    />\n  );\n}\n\nconst findHash = (id: number, nodes: FileEntry[]): string | undefined => {\n  for (const item of nodes) {\n    if (item.id === id) {\n      return item.hash;\n    } else if (item.children) {\n      const hash = findHash(id, item.children);\n      if (hash) {\n        return hash;\n      }\n    }\n  }\n};\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '../../../common/http/query-client';\nimport {BackendResponse} from '../../../common/http/backend-response/backend-response';\nimport {toast} from '../../../common/ui/toast/toast';\nimport {DriveQueryKeys, invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '../../../common/i18n/message';\nimport {getAxiosErrorMessage} from '../../../common/utils/http/get-axios-error-message';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  entryIds: number[];\n  emptyTrash?: boolean;\n  deleteForever?: boolean;\n}\n\nfunction deleteEntries(payload: Payload): Promise<Response> {\n  return apiClient\n    .post('file-entries/delete', payload)\n    .then(response => response.data);\n}\n\nexport function useDeleteEntries() {\n  return useMutation((payload: Payload) => deleteEntries(payload), {\n    onSuccess: (r, {entryIds, emptyTrash}) => {\n      invalidateEntryQueries();\n      queryClient.invalidateQueries(DriveQueryKeys.fetchStorageSummary);\n      if (emptyTrash) {\n        toast(message('Emptied trash'));\n      } else {\n        toast(\n          message('Deleted [one 1 item|other :count items]', {\n            values: {count: entryIds.length},\n          })\n        );\n      }\n    },\n    onError: (err, {emptyTrash}) => {\n      const backendError = getAxiosErrorMessage(err);\n      if (backendError) {\n        toast.danger(backendError);\n      } else if (emptyTrash) {\n        toast.danger('could not empty trash');\n      } else {\n        toast.danger('Could not delete items');\n      }\n    },\n  });\n}\n","import {CustomMenu, CustomMenuItem} from '../../../common/menus/custom-menu';\nimport {MenuPositions} from '../../menu-positions';\nimport React, {\n  ComponentPropsWithoutRef,\n  forwardRef,\n  useRef,\n  useState,\n} from 'react';\nimport {MenuItemConfig} from '../../../common/core/settings/settings';\nimport clsx from 'clsx';\nimport {useDroppable} from '../../../common/ui/interactions/dnd/use-droppable';\nimport {FileEntry} from '../../../common/uploads/file-entry';\nimport {FolderTree} from './folder-tree';\nimport {useDeleteEntries} from '../../files/queries/use-delete-entries';\nimport {useActiveWorkspaceId} from '../../../common/workspace/active-workspace-id-context';\n\nexport function SidebarMenu() {\n  const {workspaceId} = useActiveWorkspaceId();\n  return (\n    <div className=\"text-muted mt-26 px-12\">\n      <FolderTree />\n      <CustomMenu\n        menu={MenuPositions.DriveSidebar}\n        orientation=\"vertical\"\n        gap=\"gap-0\"\n      >\n        {item => {\n          if (item.action === '/drive/trash') {\n            return <TrashMenuItem key={item.id} item={item} />;\n          }\n          return <MenuItem key={item.id} item={item} />;\n        }}\n      </CustomMenu>\n    </div>\n  );\n}\n\ninterface MenuItemProps extends ComponentPropsWithoutRef<'a'> {\n  item: MenuItemConfig;\n  className?: string;\n}\nexport const MenuItem = forwardRef<HTMLAnchorElement, MenuItemProps>(\n  ({item, className, ...domProps}, ref) => {\n    return (\n      <CustomMenuItem\n        className={({isActive}) =>\n          clsx(\n            className,\n            'h-40 w-full my-4 px-24 rounded',\n            isActive\n              ? 'text-primary font-bold bg-primary/selected cursor-default'\n              : 'hover:bg-hover'\n          )\n        }\n        item={item}\n        ref={ref}\n        {...domProps}\n      />\n    );\n  }\n);\n\ninterface TrashMenuItemProps {\n  item: MenuItemConfig;\n}\nfunction TrashMenuItem({item}: TrashMenuItemProps) {\n  const deleteEntries = useDeleteEntries();\n  const [isDragOver, setIsDragOver] = useState(false);\n  const ref = useRef<HTMLAnchorElement>(null);\n\n  const {droppableProps} = useDroppable({\n    id: 'trash',\n    types: ['fileEntry'],\n    ref,\n    onDragEnter: () => {\n      setIsDragOver(true);\n    },\n    onDragLeave: () => {\n      setIsDragOver(false);\n    },\n    onDrop: draggable => {\n      const entryIds = (draggable.getData() as FileEntry[]).map(e => e.id);\n      deleteEntries.mutate({entryIds, deleteForever: false});\n    },\n  });\n  return (\n    <MenuItem\n      className={clsx(isDragOver && 'bg-primary/selected')}\n      ref={ref}\n      {...droppableProps}\n      item={item}\n    />\n  );\n}\n","import {driveState, useDriveStore} from '../drive-store';\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\nimport {\n  Menu,\n  MenuItem,\n  MenuTrigger,\n} from '../../common/ui/navigation/menu/menu-trigger';\nimport {openUploadWindow} from '../../common/uploads/utils/open-upload-window';\nimport {Button} from '../../common/ui/buttons/button';\nimport {FileUploadIcon} from '../../common/icons/material/FileUpload';\nimport {Trans} from '../../common/i18n/trans';\nimport {CreateNewFolderIcon} from '../../common/icons/material/CreateNewFolder';\nimport {UploadFileIcon} from '../../common/icons/material/UploadFile';\nimport {DriveFolderUploadIcon} from '../../common/icons/material/DriveFolderUpload';\nimport React from 'react';\nimport {IconButton} from '../../common/ui/buttons/icon-button';\nimport {AddIcon} from '../../common/icons/material/Add';\n\ninterface CreateNewButtonProps {\n  isCompact?: boolean;\n  className?: string;\n}\nexport function CreateNewButton({isCompact, className}: CreateNewButtonProps) {\n  const activePage = useDriveStore(s => s.activePage);\n  const {uploadFiles} = useDriveUploadQueue();\n\n  const button = isCompact ? (\n    <IconButton size=\"md\">\n      <AddIcon />\n    </IconButton>\n  ) : (\n    <Button\n      className=\"min-w-160\"\n      color=\"primary\"\n      variant=\"flat\"\n      size=\"sm\"\n      startIcon={<FileUploadIcon />}\n      disabled={!activePage?.canUpload}\n    >\n      <Trans message=\"Upload\" />\n    </Button>\n  );\n\n  return (\n    <div className={className}>\n      <MenuTrigger\n        onItemSelected={async value => {\n          if (value === 'uploadFiles') {\n            uploadFiles(await openUploadWindow({multiple: true}));\n          } else if (value === 'uploadFolder') {\n            uploadFiles(await openUploadWindow({directory: true}));\n          } else if (value === 'newFolder') {\n            const activeFolder = driveState().activePage?.folder;\n            driveState().setActiveActionDialog(\n              'newFolder',\n              activeFolder ? [activeFolder] : []\n            );\n          }\n        }}\n      >\n        {button}\n        <Menu>\n          <MenuItem value=\"uploadFiles\" startIcon={<UploadFileIcon />}>\n            <Trans message=\"Upload files\" />\n          </MenuItem>\n          <MenuItem value=\"uploadFolder\" startIcon={<DriveFolderUploadIcon />}>\n            <Trans message=\"Upload folder\" />\n          </MenuItem>\n          <MenuItem value=\"newFolder\" startIcon={<CreateNewFolderIcon />}>\n            <Trans message=\"Create folder\" />\n          </MenuItem>\n        </Menu>\n      </MenuTrigger>\n    </div>\n  );\n}\n","import React from 'react';\nimport {StorageMeter} from './storage-summary/storage-meter';\nimport {WorkspaceSelector} from '../../../common/workspace/workspace-selector';\nimport {RootFolderPage} from '../../drive-page/drive-page';\nimport {SidebarMenu} from './sidebar-menu';\nimport {useNavigate} from '../../../common/utils/hooks/use-navigate';\nimport {CreateNewButton} from '../create-new-button';\nimport {Button} from '../../../common/ui/buttons/button';\nimport {Link} from 'react-router-dom';\nimport {Trans} from '../../../common/i18n/trans';\nimport {useAuth} from '../../../common/auth/use-auth';\nimport clsx from 'clsx';\nimport {useSettings} from '../../../common/core/settings/use-settings';\n\ninterface SidebarProps {\n  className?: string;\n}\nexport function Sidebar({className}: SidebarProps) {\n  const {isSubscribed} = useAuth();\n  const {billing} = useSettings();\n  return (\n    <div\n      className={clsx(\n        className,\n        'text-sm text-muted font-medium bg-alt border-r flex flex-col gap-20'\n      )}\n    >\n      <div className=\"flex-auto\">\n        <CreateNewButton className=\"text-center px-12 pt-28\" />\n        <SidebarMenu />\n        <StorageMeter />\n        {billing.enable && (\n          <div className=\"pl-60 mt-14\">\n            <Button\n              elementType={Link}\n              to={isSubscribed ? '/billing/change-plan' : '/pricing'}\n              variant=\"outline\"\n              color=\"primary\"\n              size=\"xs\"\n            >\n              <Trans message=\"Upgrade\" />\n            </Button>\n          </div>\n        )}\n      </div>\n      <WorkspaceSwitcher />\n    </div>\n  );\n}\n\nfunction WorkspaceSwitcher() {\n  const navigate = useNavigate();\n  return (\n    <WorkspaceSelector\n      onChange={() => {\n        navigate(RootFolderPage.path);\n      }}\n      className=\"w-full px-24 py-18 border-t flex-shrink-0 mt-auto\"\n    />\n  );\n}\n","import {InfiniteData, useInfiniteQuery} from '@tanstack/react-query';\nimport {useSearchParams} from 'react-router-dom';\nimport {PaginationResponse} from '../../../common/http/backend-response/pagination-response';\nimport {DriveEntry, DriveFolder} from '../drive-entry';\nimport {driveState, useDriveStore} from '../../drive-store';\nimport {apiClient, queryClient} from '../../../common/http/query-client';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {SortColumn, SortDirection} from '../../layout/sorting/available-sorts';\nimport {useActiveWorkspaceId} from '../../../common/workspace/active-workspace-id-context';\nimport {\n  makeFolderPage,\n  RootFolderPage,\n  SearchPage,\n} from '../../drive-page/drive-page';\nimport {useEffect} from 'react';\n\nexport interface DriveApiIndexParams {\n  orderBy?: SortColumn;\n  orderDir?: SortDirection;\n  folderId?: string | number | null;\n  userId?: number;\n  query?: string;\n  filters?: string;\n  deletedOnly?: boolean;\n  starredOnly?: boolean;\n  sharedOnly?: boolean;\n  perPage?: number;\n  page?: number;\n  recentOnly?: boolean;\n  workspaceId?: number;\n  pageId?: number | string;\n}\n\ninterface EntriesPaginationResponse extends PaginationResponse<DriveEntry> {\n  folder?: DriveFolder;\n}\n\nfunction fetchEntries(\n  params: DriveApiIndexParams\n): Promise<EntriesPaginationResponse> {\n  return apiClient\n    .get('drive/file-entries', {\n      params,\n    })\n    .then(response => response.data);\n}\n\nconst setActiveFolder = (response: InfiniteData<EntriesPaginationResponse>) => {\n  const firstPage = response.pages[0];\n  const newFolder = firstPage.folder;\n  const currentPage = driveState().activePage;\n  // make sure we only update folder page once to set the label as name, this function will be called often\n  if (\n    newFolder &&\n    currentPage &&\n    currentPage.id === newFolder.hash &&\n    currentPage.label !== newFolder.name\n  ) {\n    driveState().setActivePage(\n      newFolder.id === 0 ? RootFolderPage : makeFolderPage(newFolder)\n    );\n  }\n  return response;\n};\n\nexport function usePaginatedEntries() {\n  const page = useDriveStore(s => s.activePage);\n  const sortDescriptor = useDriveStore(s => s.sortDescriptor);\n  const [searchParams] = useSearchParams();\n  const {workspaceId} = useActiveWorkspaceId();\n  const params: DriveApiIndexParams = {\n    pageId: page?.id,\n    ...page?.queryParams,\n    ...Object.fromEntries(searchParams),\n    folderId: page?.isFolderPage ? page.id : null,\n    workspaceId,\n    ...sortDescriptor,\n  };\n\n  // if we have no search query, there's no need to call the API, show no results message instead\n  const isDisabledInSearch =\n    page === SearchPage && !params.query && !params.filters;\n\n  const query = useInfiniteQuery(\n    DriveQueryKeys.fetchEntries(params),\n    ({pageParam = 1}) => {\n      return fetchEntries({...params, page: pageParam});\n    },\n    {\n      getNextPageParam: lastResponse => {\n        const currentPage = lastResponse.current_page;\n        const lastPage = lastResponse.last_page;\n        if (currentPage >= lastPage) {\n          return undefined;\n        }\n        return currentPage + 1;\n      },\n      enabled: page != null && !isDisabledInSearch,\n    }\n  );\n\n  // need to do this in effect, to avoid react errors about\n  // multiple components re-rendering at the same time\n  useEffect(() => {\n    if (query.data) {\n      setActiveFolder(query.data);\n    }\n  }, [query.data]);\n\n  return query;\n}\n\nexport function getAllEntries() {\n  const caches = queryClient.getQueriesData<\n    InfiniteData<EntriesPaginationResponse>\n  >(DriveQueryKeys.fetchEntries());\n  return caches.reduce<DriveEntry[]>((all, cache) => {\n    const current = cache[1] ? cache[1].pages.flatMap(p => p.data) : [];\n    return [...all, ...current];\n  }, []);\n}\n","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '../../common/datatable/filters/backend-filter';\nimport {FILE_ENTRY_TYPE_FILTER} from '../../common/admin/file-entry/file-entry-index-filters';\nimport {\n  CreatedAtFilter,\n  UpdatedAtFilter,\n} from '../../common/datatable/filters/timestamp-filters';\nimport {message} from '../../common/i18n/message';\n\nexport const driveSearchFilters: BackendFilter[] = [\n  FILE_ENTRY_TYPE_FILTER,\n  new BackendFilter({\n    type: FilterControlType.Select,\n    key: 'owner_id',\n    label: message('Owner'),\n    description: message('User file was uploaded by'),\n    defaultValue: '02',\n    options: [\n      {\n        key: '01',\n        label: message('anyone'),\n        value: {value: null, operator: '!='},\n      },\n      {\n        key: '02',\n        label: message('me'),\n        value: '{authId}',\n      },\n      {\n        key: '03',\n        label: message('not me'),\n        value: {value: '{authId}', operator: '!='},\n      },\n    ],\n  }),\n  new CreatedAtFilter({\n    description: message('Date file was uploaded'),\n  }),\n  new UpdatedAtFilter({\n    description: message('Date file was last changed'),\n  }),\n  new BackendFilter({\n    type: FilterControlType.BooleanToggle,\n    key: 'deleted_at',\n    label: message('In trash'),\n    description: message('Only show files that are in the trash'),\n    defaultOperator: FilterOperator.ne,\n    defaultValue: null,\n  }),\n  new BackendFilter({\n    type: FilterControlType.BooleanToggle,\n    key: 'shareableLink',\n    label: message('Has shareable link'),\n    description: message('Only show files that have a shareable link'),\n    defaultValue: '*',\n    defaultOperator: FilterOperator.has,\n  }),\n  new BackendFilter({\n    type: FilterControlType.BooleanToggle,\n    key: 'sharedByMe',\n    label: message('Shared by me'),\n    description: message('Only show files that are shared with someone'),\n    defaultValue: true,\n  }),\n];\n","import React, {useContext} from 'react';\nimport {driveSearchFilters} from './drive-search-filters';\nimport {useDriveStore} from '../drive-store';\nimport {SearchPage} from '../drive-page/drive-page';\nimport {TextField} from '../../common/ui/forms/input-field/text-field/text-field';\nimport {SearchIcon} from '../../common/icons/material/Search';\nimport {DashboardLayoutContext} from '../../common/ui/layout/dashboard-layout-context';\nimport {FilterList} from '../../common/datatable/filters/filter-list/filter-list';\n\nconst alwaysShownFilters = driveSearchFilters.map(f => f.key);\n\nexport function SearchFilterList() {\n  const activePage = useDriveStore(s => s.activePage);\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n\n  if (activePage !== SearchPage) {\n    return null;\n  }\n\n  return (\n    <div className=\"mt-10 mb-30 px-10 md:px-26\">\n      {isMobileMode && (\n        <TextField\n          autoFocus\n          className=\"mb-20\"\n          startAdornment={<SearchIcon />}\n          placeholder=\"Type to search\"\n        />\n      )}\n      <FilterList\n        filters={driveSearchFilters}\n        pinnedFilters={alwaysShownFilters}\n      />\n    </div>\n  );\n}\n","import {InteractableRect} from '../interactable-event';\n\nexport function restrictResizableWithinBoundary(\n  rect: InteractableRect,\n  boundaryRect: InteractableRect\n) {\n  const boundedRect = {...rect};\n\n  // restrict to left edge of boundary\n  boundedRect.left = Math.max(0, boundedRect.left);\n  // compensate width when left is bounded\n  const leftRestriction = boundedRect.left - rect.left;\n  if (leftRestriction > 0) {\n    boundedRect.width -= leftRestriction;\n  }\n\n  // restrict to top edge of boundary\n  boundedRect.top = Math.max(0, boundedRect.top);\n  // compensate height when top is bounded\n  const topRestriction = boundedRect.top - rect.top;\n  if (topRestriction > 0) {\n    boundedRect.height -= topRestriction;\n  }\n\n  // restrict to right edge of boundary\n  boundedRect.width = Math.min(\n    boundedRect.width,\n    boundaryRect.width - boundedRect.left\n  );\n\n  // restrict to bottom edge of boundary\n  boundedRect.height = Math.min(\n    boundedRect.height,\n    boundaryRect.height - boundedRect.top\n  );\n\n  return boundedRect;\n}\n","import {RefObject, useLayoutEffect, useRef} from 'react';\nimport {droppables} from '../drag-state';\nimport {InteractableRect} from '../../interactable-event';\nimport {DraggableId} from '../use-draggable';\n\nexport interface ConnectedMouseSelectable {\n  id: DraggableId;\n  onSelected?: () => void;\n  onDeselected?: () => void;\n  ref: RefObject<HTMLElement>;\n  rect?: InteractableRect;\n}\n\nexport const mouseSelectables = new Map<\n  DraggableId,\n  ConnectedMouseSelectable\n>();\n\nexport function useMouseSelectable(options: ConnectedMouseSelectable) {\n  const {id, ref} = options;\n  const optionsRef = useRef(options);\n  optionsRef.current = options;\n\n  useLayoutEffect(() => {\n    if (!ref.current) return;\n    // register droppable regardless if it's enabled or not, it might be used by mouse selection box\n    mouseSelectables.set(id, {\n      ...mouseSelectables.get(id),\n      id,\n      ref,\n      // avoid stale closures\n      onSelected: () => {\n        optionsRef.current.onSelected?.();\n      },\n      onDeselected: () => optionsRef.current.onDeselected?.(),\n    });\n    return () => {\n      droppables.delete(id);\n    };\n  }, [id, optionsRef, ref]);\n}\n","import {InteractableRect} from '../interactable-event';\n\nexport function rectsIntersect(\n  rectA?: InteractableRect,\n  rectB?: InteractableRect\n) {\n  if (!rectA || !rectB) return false;\n  return (\n    rectA.left <= rectB.left + rectB.width &&\n    rectA.left + rectA.width >= rectB.left &&\n    rectA.top <= rectB.top + rectB.height &&\n    rectA.top + rectA.height >= rectB.top\n  );\n}\n","import React, {RefObject, useRef} from 'react';\nimport {usePointerEvents} from '../../use-pointer-events';\nimport {InteractableRect} from '../../interactable-event';\nimport {restrictResizableWithinBoundary} from '../../utils/restrict-resizable-within-boundary';\nimport {activeInteraction} from '../../active-interaction';\nimport {updateRects} from '../update-rects';\nimport {mouseSelectables} from './use-mouse-selectable';\nimport {rectsIntersect} from '../../utils/rects-intersect';\nimport {DraggableId} from '../use-draggable';\n\ninterface SelectionState {\n  startPoint?: {x: number; y: number; scrollTop: number};\n  endPoint?: {x: number; y: number};\n  boundaryRect?: InteractableRect & {heightWithoutScroll: number};\n  scrollListener?: EventListener;\n  rafId?: number;\n  selectedIds?: Set<DraggableId>;\n}\n\ninterface Props {\n  onPointerDown?: (e: React.PointerEvent) => void;\n  containerRef?: RefObject<HTMLDivElement>;\n}\nexport function useMouseSelectionBox({onPointerDown, ...props}: Props = {}) {\n  const defaultRef = useRef<HTMLDivElement>(null);\n  const containerRef = props.containerRef || defaultRef;\n  const boxRef = useRef<HTMLDivElement>(null);\n\n  let state = useRef<SelectionState>({}).current;\n\n  const drawSelectionBox = () => {\n    if (state.rafId) {\n      cancelAnimationFrame(state.rafId);\n    }\n\n    if (!state.startPoint || !state.endPoint || !state.boundaryRect) return;\n\n    const startPoint = state.startPoint;\n    const endPoint = state.endPoint;\n    const initialScrollTop = startPoint.scrollTop || 0;\n    const currentScrollTop = containerRef.current?.scrollTop || 0;\n\n    const newRect = {\n      left: Math.min(startPoint.x, endPoint.x),\n      top: Math.min(startPoint.y, endPoint.y),\n      width: Math.abs(startPoint.x - endPoint.x),\n      height: Math.abs(startPoint.y - endPoint.y),\n    };\n\n    // convert box coords to be relative to container and not viewport\n    newRect.left -= state.boundaryRect.left;\n    newRect.top -= state.boundaryRect.top;\n\n    // take initial scroll of container into account\n    newRect.top += initialScrollTop;\n\n    // scroll diff between drag start and now (auto scroll or mouse wheel)\n    const scrollDiff = currentScrollTop - initialScrollTop;\n    const scrollValue = Math.abs(scrollDiff);\n\n    // top needs to be changed only if scroll direction is top\n    if (scrollDiff < 0) {\n      newRect.top -= scrollValue;\n    }\n\n    // height needs to be changed regardless of direction and method\n    newRect.height += scrollValue;\n\n    const boundedRect = state.boundaryRect\n      ? restrictResizableWithinBoundary(newRect, state.boundaryRect)\n      : {...newRect};\n\n    if (boxRef.current) {\n      state.rafId = requestAnimationFrame(() => {\n        if (boxRef.current) {\n          boxRef.current.style.display = `block`;\n          boxRef.current.style.transform = `translate(${boundedRect.left}px, ${boundedRect.top}px)`;\n          boxRef.current.style.width = `${boundedRect.width}px`;\n          boxRef.current.style.height = `${boundedRect.height}px`;\n        }\n        state.rafId = undefined;\n      });\n    }\n\n    // convert rect back to absolute for intersection testing\n    const absoluteRect = {\n      ...boundedRect,\n      left: boundedRect.left + state.boundaryRect.left,\n      top: boundedRect.top + state.boundaryRect.top - currentScrollTop,\n    };\n\n    for (const [, selectable] of mouseSelectables) {\n      const intersect = rectsIntersect(selectable.rect, absoluteRect);\n      if (intersect && !state.selectedIds?.has(selectable.id)) {\n        state.selectedIds?.add(selectable.id);\n        selectable.onSelected?.();\n      } else if (!intersect && state.selectedIds?.has(selectable.id)) {\n        state.selectedIds?.delete(selectable.id);\n        selectable.onDeselected?.();\n      }\n    }\n  };\n\n  const pointerEvents = usePointerEvents({\n    minimumMovement: 4,\n    onPointerDown,\n    onMoveStart: e => {\n      if (activeInteraction) {\n        return false;\n      }\n      updateRects(mouseSelectables);\n      state = {\n        selectedIds: new Set(),\n      };\n      const el = containerRef.current;\n      state.startPoint = {\n        x: e.clientX,\n        y: e.clientY,\n        scrollTop: el?.scrollTop || 0,\n      };\n\n      state.scrollListener = e => {\n        if (!state.startPoint) return;\n        // update rects on scroll, because we are using relative position\n        updateRects(mouseSelectables);\n        if (state.boundaryRect?.height) {\n          state.boundaryRect.height = (e.target as HTMLElement).scrollHeight;\n        }\n        // draw selection box (for autoscroll and mousewheel)\n        drawSelectionBox();\n      };\n\n      if (el) {\n        const rect = el.getBoundingClientRect();\n        el.addEventListener('scroll', state.scrollListener);\n        state.boundaryRect = {\n          top: rect.top,\n          left: rect.left,\n          height: el.scrollHeight,\n          heightWithoutScroll: rect.height,\n          width: el.scrollWidth,\n        };\n      }\n    },\n    onMove: e => {\n      state.endPoint = {x: e.clientX, y: e.clientY};\n\n      if (state.boundaryRect && containerRef.current) {\n        const reachedBottomEdge =\n          e.clientY + 20 >\n          state.boundaryRect.heightWithoutScroll + state.boundaryRect.top;\n        const reachedTopEdge = e.clientY - 20 < state.boundaryRect.top;\n\n        if (reachedBottomEdge) {\n          containerRef.current.scrollBy({top: 10});\n        } else if (reachedTopEdge) {\n          containerRef.current.scrollBy({top: -10});\n        }\n      }\n\n      drawSelectionBox();\n    },\n    onMoveEnd: () => {\n      if (state.rafId) {\n        cancelAnimationFrame(state.rafId);\n      }\n      if (containerRef.current && state.scrollListener) {\n        containerRef.current.removeEventListener(\n          'scroll',\n          state.scrollListener\n        );\n      }\n      if (boxRef.current) {\n        boxRef.current.style.display = `none`;\n        boxRef.current.style.transform = '';\n        boxRef.current.style.width = '';\n        boxRef.current.style.height = '';\n      }\n      state = {};\n    },\n  });\n\n  return {\n    containerProps: {\n      ...pointerEvents.domProps,\n      ref: containerRef,\n    },\n    boxProps: {ref: boxRef},\n  };\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '../../../common/http/query-client';\nimport {FetchShareableLinkResponse} from './use-entry-shareable-link';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {message} from '../../../common/i18n/message';\nimport {showHttpErrorToast} from '../../../common/utils/http/show-http-error-toast';\n\nfunction createShareableLink(\n  entryId?: number | null\n): Promise<FetchShareableLinkResponse> {\n  if (!entryId) {\n    return Promise.reject(new Error('Invalid entry id'));\n  }\n  return apiClient\n    .post(`file-entries/${entryId}/shareable-link`)\n    .then(response => response.data);\n}\n\ninterface Payload {\n  entryId: number;\n}\nexport function useCreateShareableLink() {\n  return useMutation(({entryId}: Payload) => createShareableLink(entryId), {\n    onSuccess: (data, {entryId}) => {\n      queryClient.setQueryData<FetchShareableLinkResponse>(\n        DriveQueryKeys.fetchEntryShareableLink(entryId),\n        data\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not create link')),\n  });\n}\n","import {apiClient} from '../../../common/http/query-client';\nimport {BackendResponse} from '../../../common/http/backend-response/backend-response';\nimport {toast} from '../../../common/ui/toast/toast';\nimport {Tag} from '../../../common/tags/tag';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '../../../common/i18n/message';\nimport {useMutation} from '@tanstack/react-query';\nimport {showHttpErrorToast} from '../../../common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  tag: Tag;\n}\n\ninterface Payload {\n  entryIds: number[];\n}\n\nfunction addStarToEntries({entryIds}: Payload): Promise<Response> {\n  return apiClient\n    .post('file-entries/star', {entryIds})\n    .then(response => response.data);\n}\n\nexport function useAddStarToEntries() {\n  return useMutation((payload: Payload) => addStarToEntries(payload), {\n    onSuccess: (data, {entryIds}) => {\n      invalidateEntryQueries();\n      toast(\n        message('Starred [one 1 item|other :count items]', {\n          values: {count: entryIds.length},\n        })\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not star items')),\n  });\n}\n","import {apiClient} from '../../../common/http/query-client';\nimport {BackendResponse} from '../../../common/http/backend-response/backend-response';\nimport {toast} from '../../../common/ui/toast/toast';\nimport {Tag} from '../../../common/tags/tag';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '../../../common/i18n/message';\nimport {useMutation} from '@tanstack/react-query';\nimport {showHttpErrorToast} from '../../../common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  tag: Tag;\n}\n\ninterface Payload {\n  entryIds: number[];\n}\n\nfunction removeStarFromEntries({entryIds}: Payload): Promise<Response> {\n  return apiClient\n    .post('file-entries/unstar', {entryIds})\n    .then(response => response.data);\n}\n\nexport function useRemoveStarFromEntries() {\n  return useMutation((payload: Payload) => removeStarFromEntries(payload), {\n    onSuccess: (data, {entryIds}) => {\n      invalidateEntryQueries();\n      toast(\n        message('Removed star from [one 1 item|other :count items]', {\n          values: {count: entryIds.length},\n        })\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not remove star')),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '../../../common/http/query-client';\nimport {BackendResponse} from '../../../common/http/backend-response/backend-response';\nimport {DriveEntry} from '../drive-entry';\nimport {toast} from '../../../common/ui/toast/toast';\nimport {DriveQueryKeys, invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '../../../common/i18n/message';\nimport {showHttpErrorToast} from '../../../common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  entries: DriveEntry[];\n}\n\ninterface Payload {\n  entryIds: number[];\n  destinationId?: number;\n}\n\nfunction duplicateEntries(payload: Payload): Promise<Response> {\n  return apiClient\n    .post('file-entries/duplicate', payload)\n    .then(response => response.data);\n}\n\nexport function useDuplicateEntries() {\n  return useMutation((payload: Payload) => duplicateEntries(payload), {\n    onSuccess: (r, p) => {\n      invalidateEntryQueries();\n      queryClient.invalidateQueries(DriveQueryKeys.fetchStorageSummary);\n      toast(\n        message('Duplicated [one 1 item|other :count items]', {\n          values: {count: p.entryIds.length},\n        })\n      );\n    },\n    onError: err =>\n      showHttpErrorToast(err, message('Could not duplicate items')),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../../common/http/backend-response/backend-response';\nimport {DriveEntryUser} from '../../files/drive-entry';\nimport {apiClient} from '../../../common/http/query-client';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\n\ninterface Response extends BackendResponse {\n  users: DriveEntryUser[];\n}\n\ninterface Payload {\n  userId: number | 'me';\n  entryIds: number[];\n}\n\nexport function useUnshareEntries() {\n  return useMutation((payload: Payload) => unshareEntries(payload), {\n    onSuccess: () => {\n      invalidateEntryQueries();\n    },\n  });\n}\n\nfunction unshareEntries({entryIds, ...payload}: Payload): Promise<Response> {\n  return apiClient\n    .post(`file-entries/${entryIds.join(',')}/unshare`, payload)\n    .then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '../../../common/http/query-client';\nimport {BackendResponse} from '../../../common/http/backend-response/backend-response';\nimport {toast} from '../../../common/ui/toast/toast';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '../../../common/i18n/message';\nimport {showHttpErrorToast} from '../../../common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  entryIds: number[];\n}\n\nexport function useRestoreEntries() {\n  return useMutation((payload: Payload) => restoreEntries(payload), {\n    onSuccess: (r, p) => {\n      invalidateEntryQueries();\n      toast(\n        message('Restored [one 1 item|other :count items]', {\n          values: {count: p.entryIds.length},\n        })\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not restore items')),\n  });\n}\n\nfunction restoreEntries(payload: Payload): Promise<Response> {\n  return apiClient\n    .post('file-entries/restore', payload)\n    .then(response => response.data);\n}\n","import {message} from '../../common/i18n/message';\nimport {PersonAddIcon} from '../../common/icons/material/PersonAdd';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {EntryAction} from './entry-action';\nimport {DriveEntry} from '../files/drive-entry';\nimport {RemoveRedEyeIcon} from '../../common/icons/material/RemoveRedEye';\nimport {LinkIcon} from '../../common/icons/material/Link';\nimport {useCreateShareableLink} from '../shareable-link/queries/create-shareable-link';\nimport {StarIcon} from '../../common/icons/material/Star';\nimport {useAddStarToEntries} from '../files/queries/use-add-star-to-entries';\nimport {StarOutlineIcon} from '../../common/icons/material/StarOutline';\nimport {useRemoveStarFromEntries} from '../files/queries/use-remove-star-from-entries';\nimport {DriveFileMoveIcon} from '../../common/icons/material/DriveFileMove';\nimport {DriveFileRenameOutlineIcon} from '../../common/icons/material/DriveFileRenameOutline';\nimport {ContentCopyIcon} from '../../common/icons/material/ContentCopy';\nimport {useDuplicateEntries} from '../files/queries/use-duplicate-entries';\nimport {FileDownloadIcon} from '../../common/icons/material/FileDownload';\nimport {DeleteIcon} from '../../common/icons/material/Delete';\nimport {SharesPage, TrashPage} from '../drive-page/drive-page';\nimport {useDeleteEntries} from '../files/queries/use-delete-entries';\nimport {useUnshareEntries} from '../share-dialog/queries/use-unshare-entries';\nimport {toast} from '../../common/ui/toast/toast';\nimport {showHttpErrorToast} from '../../common/utils/http/show-http-error-toast';\nimport {useFileEntryUrls} from '../../common/uploads/hooks/file-entry-urls';\nimport {downloadFileFromUrl} from '../../common/uploads/utils/download-file-from-url';\nimport {useRestoreEntries} from '../files/queries/use-restore-entries';\nimport {RestoreIcon} from '../../common/icons/material/Restore';\n\nexport function useEntryActions(entries: DriveEntry[]): EntryAction[] {\n  const preview = usePreviewAction(entries);\n  const share = useShareAction(entries);\n  const getLink = useGetLinkAction(entries);\n  const addStar = useAddToStarredAction(entries);\n  const removeStar = useRemoveFromStarred(entries);\n  const moveTo = useMoveToAction(entries);\n  const rename = useRenameAction(entries);\n  const makeCopy = useMakeCopyAction(entries);\n  const download = useDownloadEntriesAction(entries);\n  const deleteAction = useDeleteEntriesAction(entries);\n  const removeSharedEntries = useRemoveSharedEntriesAction(entries);\n  const restoreEntries = useRestoreEntriesAction(entries);\n\n  return [\n    preview,\n    share,\n    getLink,\n    addStar,\n    removeStar,\n    moveTo,\n    rename,\n    makeCopy,\n    download,\n    deleteAction,\n    removeSharedEntries,\n    restoreEntries,\n  ].filter(action => !!action) as EntryAction[];\n}\n\nexport function usePreviewAction(\n  entries: DriveEntry[]\n): EntryAction | undefined {\n  if (!entries.some(e => e.type !== 'folder')) return;\n  return {\n    label: message('Preview'),\n    icon: RemoveRedEyeIcon,\n    key: 'preview',\n    execute: () => {\n      driveState().setActiveActionDialog('preview', entries);\n    },\n  };\n}\n\nexport function useShareAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  if (\n    entries.length > 1 ||\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === TrashPage\n  )\n    return;\n\n  return {\n    label: message('Share'),\n    icon: PersonAddIcon,\n    key: 'share',\n    execute: () => {\n      driveState().setActiveActionDialog('share', entries);\n    },\n  };\n}\n\nfunction useGetLinkAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  const createLink = useCreateShareableLink();\n  if (\n    entries.length > 1 ||\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === TrashPage\n  ) {\n    return;\n  }\n  return {\n    label: message('Get link'),\n    icon: LinkIcon,\n    key: 'getLink',\n    execute: () => {\n      createLink.mutate({entryId: entries[0].id});\n      driveState().setActiveActionDialog('getLink', entries);\n    },\n  };\n}\n\nfunction useAddToStarredAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  const starEntries = useAddStarToEntries();\n  if (\n    entries.every(e => e.tags?.find(tag => tag.name === 'starred')) ||\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === TrashPage\n  ) {\n    return;\n  }\n  return {\n    label: message('Add to starred'),\n    icon: StarIcon,\n    key: 'addToStarred',\n    execute: () => {\n      starEntries.mutate({entryIds: entries.map(e => e.id)});\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nfunction useRemoveFromStarred(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  const removeStar = useRemoveStarFromEntries();\n  if (\n    !entries.every(e => e.tags?.find(tag => tag.name === 'starred')) ||\n    activePage === TrashPage\n  )\n    return;\n  return {\n    label: message('Remove from starred'),\n    icon: StarOutlineIcon,\n    key: 'removeFromStarred',\n    execute: () => {\n      removeStar.mutate({entryIds: entries.map(e => e.id)});\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nfunction useMoveToAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  if (\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === SharesPage ||\n    activePage === TrashPage\n  ) {\n    return;\n  }\n\n  return {\n    label: message('Move to'),\n    icon: DriveFileMoveIcon,\n    key: 'moveTo',\n    execute: () => {\n      driveState().setActiveActionDialog('moveTo', entries);\n    },\n  };\n}\n\nfunction useRenameAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  if (\n    entries.length > 1 ||\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === TrashPage\n  )\n    return;\n  return {\n    label: message('Rename'),\n    icon: DriveFileRenameOutlineIcon,\n    key: 'rename',\n    execute: () => {\n      driveState().setActiveActionDialog('rename', entries);\n    },\n  };\n}\n\nfunction useMakeCopyAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  const duplicateEntries = useDuplicateEntries();\n  if (\n    entries.length > 1 ||\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === TrashPage\n  )\n    return;\n  return {\n    label: message('Make a copy'),\n    icon: ContentCopyIcon,\n    key: 'makeCopy',\n    execute: () => {\n      duplicateEntries.mutate({entryIds: entries.map(e => e.id)});\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nfunction useDownloadEntriesAction(\n  entries: DriveEntry[]\n): EntryAction | undefined {\n  const {downloadUrl} = useFileEntryUrls(entries[0], {\n    downloadHashes: entries.map(e => e.hash),\n  });\n  if (!entries.every(e => e.permissions['files.download'])) return;\n  return {\n    label: message('Download'),\n    icon: FileDownloadIcon,\n    key: 'download',\n    execute: () => {\n      if (downloadUrl) {\n        downloadFileFromUrl(downloadUrl);\n      }\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nexport function useDeleteEntriesAction(\n  entries: DriveEntry[]\n): EntryAction | undefined {\n  const deleteEntries = useDeleteEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (\n    activePage === SharesPage ||\n    !entries.every(e => e.permissions['files.delete'])\n  )\n    return;\n  return {\n    label:\n      activePage === TrashPage ? message('Delete forever') : message('Delete'),\n    icon: DeleteIcon,\n    key: 'delete',\n    execute: () => {\n      deleteEntries.mutate({\n        entryIds: entries.map(e => e.id),\n        deleteForever: activePage === TrashPage,\n      });\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nexport function useRestoreEntriesAction(\n  entries: DriveEntry[]\n): EntryAction | undefined {\n  const restoreEntries = useRestoreEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (\n    activePage !== TrashPage ||\n    !entries.every(e => e.permissions['files.delete'])\n  )\n    return;\n  return {\n    label: message('Restore'),\n    icon: RestoreIcon,\n    key: 'restore',\n    execute: () => {\n      restoreEntries.mutate({\n        entryIds: entries.map(e => e.id),\n      });\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nexport function useRemoveSharedEntriesAction(\n  entries: DriveEntry[]\n): EntryAction | undefined {\n  const unshareEntries = useUnshareEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (activePage !== SharesPage) return;\n  return {\n    label: message('Remove'),\n    icon: DeleteIcon,\n    key: 'removeSharedEntry',\n    execute: () => {\n      unshareEntries.mutate(\n        {entryIds: entries.map(e => e.id), userId: 'me'},\n        {\n          onSuccess: (r, p) => {\n            toast(\n              message('Removed [one 1 item|other {count} items]', {\n                values: {count: p.entryIds.length},\n              })\n            );\n          },\n          onError: err =>\n            showHttpErrorToast(err, message('Could not remove items')),\n        }\n      );\n      driveState().selectEntries([]);\n    },\n  };\n}\n","import {EntryAction} from './entry-action';\nimport {message} from '../../common/i18n/message';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {DrivePage, TrashPage} from '../drive-page/drive-page';\nimport {CreateNewFolderIcon} from '../../common/icons/material/CreateNewFolder';\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\nimport {openUploadWindow} from '../../common/uploads/utils/open-upload-window';\nimport {FileUploadIcon} from '../../common/icons/material/FileUpload';\nimport {DriveFolderUploadIcon} from '../../common/icons/material/DriveFolderUpload';\nimport {useDeleteEntries} from '../files/queries/use-delete-entries';\nimport {DeleteForeverIcon} from '../../common/icons/material/DeleteForever';\n\nexport function useDrivePageActions(page: DrivePage): EntryAction[] {\n  const newFolder = useNewFolderAction(page);\n  const uploadFiles = useUploadFilesAction(page);\n  const uploadFolder = useUploadFolderAction(page);\n  const emptyTrash = useEmptyTrashAction(page);\n  return [newFolder, uploadFiles, uploadFolder, emptyTrash].filter(\n    action => !!action\n  ) as EntryAction[];\n}\n\nfunction useNewFolderAction(page: DrivePage): EntryAction | undefined {\n  if (!page.folder || !page.folder.permissions['files.update']) return;\n  return {\n    label: message('New folder'),\n    icon: CreateNewFolderIcon,\n    key: 'newFolder',\n    execute: () => {\n      if (page.folder) {\n        driveState().setActiveActionDialog('newFolder', [page.folder]);\n      }\n    },\n  };\n}\n\nfunction useUploadFilesAction(page: DrivePage): EntryAction | undefined {\n  const {uploadFiles} = useDriveUploadQueue();\n  if (!page.folder || !page.folder.permissions['files.update']) return;\n  return {\n    label: message('Upload files'),\n    icon: FileUploadIcon,\n    key: 'uploadFiles',\n    execute: async () => {\n      uploadFiles(await openUploadWindow({multiple: true}));\n    },\n  };\n}\n\nfunction useUploadFolderAction(page: DrivePage): EntryAction | undefined {\n  const {uploadFiles} = useDriveUploadQueue();\n  if (!page.folder || !page.folder.permissions['files.update']) return;\n  return {\n    label: message('Upload folder'),\n    icon: DriveFolderUploadIcon,\n    key: 'uploadFolder',\n    execute: async () => {\n      uploadFiles(await openUploadWindow({directory: true}));\n    },\n  };\n}\n\nfunction useEmptyTrashAction(page: DrivePage): EntryAction | undefined {\n  const deleteEntries = useDeleteEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (activePage !== TrashPage) return;\n  return {\n    label: message('Empty trash'),\n    icon: DeleteForeverIcon,\n    key: 'emptyTrash',\n    execute: () => {\n      deleteEntries.mutate({entryIds: [], emptyTrash: true});\n      driveState().selectEntries([]);\n    },\n  };\n}\n","import React, {createElement, ReactElement} from 'react';\nimport {\n  Menu,\n  MenuItem,\n  MenuTrigger,\n} from '../../common/ui/navigation/menu/menu-trigger';\nimport {Trans} from '../../common/i18n/trans';\nimport {DriveEntry} from '../files/drive-entry';\nimport {useEntryActions} from './use-entry-actions';\nimport {EntryAction} from './entry-action';\nimport {DrivePage, RootFolderPage, TrashPage} from '../drive-page/drive-page';\nimport {useDrivePageActions} from './use-drive-page-actions';\n\ninterface Props {\n  children: ReactElement;\n  entries?: DriveEntry[];\n  page?: DrivePage;\n}\nexport function EntryActionMenuTrigger({children, entries, page}: Props) {\n  if (page === RootFolderPage) {\n    return <PageMenu page={RootFolderPage}>{children}</PageMenu>;\n  }\n\n  if (page === TrashPage) {\n    return <PageMenu page={TrashPage}>{children}</PageMenu>;\n  }\n\n  if (page?.folder) {\n    return <EntriesMenu entries={[page.folder]}>{children}</EntriesMenu>;\n  }\n\n  if (entries?.length) {\n    return <EntriesMenu entries={entries}>{children}</EntriesMenu>;\n  }\n\n  return null;\n}\n\ninterface EntriesContextMenuProps extends Omit<BaseMenuProps, 'actions'> {\n  entries: DriveEntry[];\n}\nfunction EntriesMenu({entries, children}: EntriesContextMenuProps) {\n  const actions = useEntryActions(entries);\n  return <BaseMenu actions={actions}>{children}</BaseMenu>;\n}\n\ninterface PageContextMenuProps extends Omit<BaseMenuProps, 'actions'> {\n  page: DrivePage;\n}\nfunction PageMenu({page, children}: PageContextMenuProps) {\n  const actions = useDrivePageActions(page);\n  return <BaseMenu actions={actions}>{children}</BaseMenu>;\n}\n\ninterface BaseMenuProps {\n  actions: EntryAction[];\n  children: ReactElement;\n}\nfunction BaseMenu({actions, children}: BaseMenuProps) {\n  return (\n    <MenuTrigger>\n      {children}\n      <Menu>\n        {actions.map(action => {\n          return (\n            <MenuItem\n              onSelected={() => {\n                action.execute();\n              }}\n              key={action.key}\n              value={action.key}\n              startIcon={createElement(action.icon)}\n            >\n              <Trans {...action.label} />\n            </MenuItem>\n          );\n        })}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {DriveEntry} from '../drive-entry';\nimport {usePaginatedEntries} from './use-paginated-entries';\n\nexport function useEntries(): DriveEntry[] {\n  const query = usePaginatedEntries();\n  if (!query.data) return [];\n  return query.data.pages.flatMap(p => p.data);\n}\n","import {driveState, useDriveStore} from '../drive-store';\nimport {getAllEntries} from './queries/use-paginated-entries';\nimport {DriveEntry, DriveFolder} from './drive-entry';\nimport {useEntries} from './queries/use-entries';\nimport {useFolders} from './queries/use-folders';\n\nexport function useSelectedEntries(): DriveEntry[] {\n  const ids = useDriveStore(s => s.selectedEntries);\n  const entries = useEntries();\n  return Array.from(ids)\n    .map(id => entries.find(entry => entry.id === id))\n    .filter(e => !!e) as DriveEntry[];\n}\n\nexport function useSelectedEntry(): DriveEntry | null {\n  const entries = useSelectedEntries();\n  return entries[0];\n}\n\nexport function useSelectedEntryParent(): DriveFolder | null | undefined {\n  const entry = useSelectedEntry();\n  const {data} = useFolders();\n  if (!entry || !data) return;\n  return data.folders.find(e => e.id === entry.parent_id) as DriveFolder;\n}\n\nexport function getSelectedEntries(): DriveEntry[] {\n  const ids = Array.from(driveState().selectedEntries);\n  const allEntries = getAllEntries();\n  return ids.map(id => {\n    return allEntries.find(entry => entry.id === id)!;\n  });\n}\n","import React, {createElement} from 'react';\nimport {IconButton} from '../../common/ui/buttons/icon-button';\nimport {EntryActionMenuTrigger} from './entry-action-menu-trigger';\nimport {MoreVertIcon} from '../../common/icons/material/MoreVert';\nimport {Tooltip} from '../../common/ui/tooltip/tooltip';\nimport {Trans} from '../../common/i18n/trans';\nimport {useSelectedEntries} from '../files/use-selected-entries';\nimport {\n  useDeleteEntriesAction,\n  usePreviewAction,\n  useRemoveSharedEntriesAction,\n  useShareAction,\n} from './use-entry-actions';\nimport {DriveEntry} from '../files/drive-entry';\nimport {EntryAction} from './entry-action';\n\ninterface EntryActionListProps {\n  className?: string;\n}\nexport function EntryActionList({className}: EntryActionListProps) {\n  const selectedEntries = useSelectedEntries();\n\n  if (!selectedEntries.length) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      <ActionList entries={selectedEntries} />\n    </div>\n  );\n}\n\ninterface ActionListProps {\n  entries: DriveEntry[];\n}\nfunction ActionList({entries}: ActionListProps) {\n  const preview = usePreviewAction(entries);\n  const share = useShareAction(entries);\n  const deleteAction = useDeleteEntriesAction(entries);\n  const removeShared = useRemoveSharedEntriesAction(entries);\n\n  const actions = [preview, share, deleteAction, removeShared].filter(\n    action => !!action\n  ) as EntryAction[];\n\n  return (\n    <div className=\"entry-action-list\">\n      {actions.map(action => (\n        <Tooltip key={action.key} label={<Trans {...action.label} />}>\n          <IconButton\n            size=\"sm\"\n            onClick={() => {\n              action.execute();\n            }}\n          >\n            {createElement(action.icon)}\n          </IconButton>\n        </Tooltip>\n      ))}\n      <EntryActionMenuTrigger entries={entries}>\n        <Tooltip label={<Trans message=\"More actions\" />}>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </Tooltip>\n      </EntryActionMenuTrigger>\n    </div>\n  );\n}\n","import React, {ReactElement, useEffect} from 'react';\nimport {useListbox} from '../../forms/listbox/use-listbox';\nimport {Listbox} from '../../forms/listbox/listbox';\nimport {Menu} from './menu-trigger';\nimport {useListboxKeyboardNavigation} from '../../forms/listbox/use-listbox-keyboard-navigation';\nimport {useTypeSelect} from '../../forms/listbox/use-type-select';\nimport {ListBoxChildren, ListboxProps} from '../../forms/listbox/types';\n\nconst preventContextOnMenu = (e: MouseEvent) => {\n  e.preventDefault();\n};\n\ntype Props = ListboxProps &\n  ListBoxChildren<any> & {\n    position?: {x: number; y: number} | null;\n  };\n\nexport function ContextMenu({position, children, ...props}: Props) {\n  const listbox = useListbox({\n    ...props,\n    isOpen: props.isOpen && !!position,\n    placement: 'right-start',\n    floatingWidth: 'auto',\n    offset: {mainAxis: 5, alignmentAxis: 4},\n    role: 'menu',\n    loopFocus: true,\n    children:\n      (children as ReactElement)?.type === Menu\n        ? (children as ReactElement).props.children\n        : children,\n  });\n  const {\n    reference,\n    refs,\n    state: {isOpen, setIsOpen, activeIndex},\n    focusItem,\n    listContent,\n  } = listbox;\n\n  useEffect(() => {\n    if (refs.floating.current) {\n      refs.floating.current.addEventListener(\n        'contextmenu',\n        preventContextOnMenu\n      );\n      return () => {\n        refs.floating.current?.removeEventListener(\n          'contextmenu',\n          preventContextOnMenu\n        );\n      };\n    }\n  }, [refs.floating]);\n\n  useEffect(() => {\n    if (position) {\n      const {x, y} = position;\n      reference({\n        getBoundingClientRect() {\n          return {\n            x,\n            y,\n            width: 0,\n            height: 0,\n            top: y,\n            right: x,\n            bottom: y,\n            left: x,\n          };\n        },\n      });\n      setIsOpen(true);\n    }\n  }, [position, reference, setIsOpen]);\n\n  const {handleListboxKeyboardNavigation} =\n    useListboxKeyboardNavigation(listbox);\n\n  const {findMatchingItem} = useTypeSelect();\n\n  return (\n    <Listbox\n      listbox={listbox}\n      onKeyDownCapture={e => {\n        if (!isOpen) return;\n        const i = findMatchingItem(e, listContent, activeIndex);\n        if (i) {\n          focusItem('increment', i);\n        }\n      }}\n      onKeyDown={handleListboxKeyboardNavigation}\n    />\n  );\n}\n","import {useSelectedEntries} from './use-selected-entries';\nimport {DriveEntry} from './drive-entry';\nimport {useEntryActions} from '../entry-actions/use-entry-actions';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {ContextMenu} from '../../common/ui/navigation/menu/context-menu';\nimport {MenuItem} from '../../common/ui/navigation/menu/menu-trigger';\nimport React, {createElement} from 'react';\nimport {Trans} from '../../common/i18n/trans';\nimport {EntryAction} from '../entry-actions/entry-action';\nimport {DrivePage, RootFolderPage} from '../drive-page/drive-page';\nimport {useDrivePageActions} from '../entry-actions/use-drive-page-actions';\n\nexport function DriveContextMenu() {\n  const selectedEntries = useSelectedEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  const data = useDriveStore(s => s.contextMenuData);\n  const entries = data?.entry ? [data.entry] : selectedEntries;\n\n  // right-clicked root folder\n  if (data?.entry?.id === 0) {\n    return <PageContextMenu position={data} page={RootFolderPage} />;\n  }\n\n  if (data && entries.length) {\n    return <EntriesContextMenu entries={entries} position={data} />;\n  }\n\n  if (data && activePage) {\n    return <PageContextMenu position={data} page={activePage} />;\n  }\n\n  return null;\n}\n\ninterface EntriesContextMenuProps {\n  position: {x: number; y: number};\n  entries: DriveEntry[];\n}\nfunction EntriesContextMenu({entries, position}: EntriesContextMenuProps) {\n  const actions = useEntryActions(entries);\n  return <BaseContextMenu position={position} actions={actions} />;\n}\n\ninterface PageContextMenuProps {\n  position: {x: number; y: number};\n  page: DrivePage;\n}\nfunction PageContextMenu({page, position}: PageContextMenuProps) {\n  const actions = useDrivePageActions(page);\n  return <BaseContextMenu position={position} actions={actions} />;\n}\n\ninterface BaseContextMenuProps {\n  position: {x: number; y: number};\n  actions: EntryAction[];\n}\nfunction BaseContextMenu({position, actions}: BaseContextMenuProps) {\n  return (\n    <ContextMenu\n      position={position}\n      onOpenChange={isOpen => {\n        if (!isOpen) {\n          driveState().setContextMenuData(null);\n        }\n      }}\n    >\n      {actions.map(action => (\n        <MenuItem\n          value={action.key}\n          key={action.key}\n          onSelected={action.execute}\n          startIcon={createElement(action.icon)}\n        >\n          <Trans {...action.label} />\n        </MenuItem>\n      ))}\n    </ContextMenu>\n  );\n}\n","import {\n  ConnectedDraggable,\n  useDraggable,\n} from '../../common/ui/interactions/dnd/use-draggable';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {getSelectedEntries} from '../files/use-selected-entries';\nimport {useDroppable} from '../../common/ui/interactions/dnd/use-droppable';\nimport {\n  folderAcceptsDrop,\n  useFolderDropAction,\n} from '../files/use-folder-drop-action';\nimport {DriveEntry} from '../files/drive-entry';\nimport {useRef, useState} from 'react';\nimport clsx from 'clsx';\nimport {useIsTouchDevice} from '../../common/utils/hooks/is-touch-device';\nimport {FileEntry} from '../../common/uploads/file-entry';\nimport {useMouseSelectable} from '../../common/ui/interactions/dnd/mouse-selection/use-mouse-selectable';\n\nexport function useFileViewDnd<T extends HTMLElement = HTMLElement>(\n  entry: DriveEntry\n) {\n  const isTouchDevice = useIsTouchDevice();\n  const ref = useRef<T>(null);\n  const {onDrop} = useFolderDropAction(entry);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const isDragging = useDriveStore(s =>\n    s.entriesBeingDragged.includes(entry.id)\n  );\n\n  const {draggableProps} = useDraggable({\n    disabled: !!isTouchDevice,\n    id: entry.id,\n    type: 'fileEntry',\n    ref,\n    hidePreview: true,\n    onDragStart: (e, target: ConnectedDraggable<FileEntry[]>) => {\n      if (!driveState().selectedEntries.has(entry.id)) {\n        driveState().selectEntries([entry.id]);\n      }\n      driveState().setEntriesBeingDragged(target.getData().map(e => e.id));\n    },\n    onDragEnd: () => {\n      driveState().setEntriesBeingDragged([]);\n    },\n    getData: () => getSelectedEntries(),\n  });\n\n  const {droppableProps} = useDroppable<T>({\n    id: entry.id,\n    disabled: isTouchDevice || entry.type !== 'folder',\n    ref,\n    types: ['fileEntry', 'nativeFile'],\n    acceptsDrop: target => folderAcceptsDrop(target, entry),\n    onDragEnter: () => setIsDragOver(true),\n    onDragLeave: () => setIsDragOver(false),\n    onDrop,\n  });\n\n  useMouseSelectable({\n    id: entry.id,\n    ref,\n    onSelected: () => {\n      driveState().selectEntries([entry.id], true);\n    },\n    onDeselected: () => {\n      driveState().deselectEntries([entry.id]);\n    },\n  });\n\n  const itemClassName = clsx(\n    isDragging && 'opacity-20',\n    isDragOver && 'ring ring-offset-4 ring-primary bg-primary-light/10 rounded'\n  );\n\n  return {\n    draggableProps,\n    droppableProps,\n    isDragOver,\n    isDragging,\n    itemClassName,\n    ref,\n  };\n}\n","import {DriveEntry} from '../../files/drive-entry';\nimport {RowElementProps} from '../../../common/ui/tables/table-row';\nimport {mergeProps} from '@react-aria/utils';\nimport {useFileViewDnd} from '../use-file-view-dnd';\nimport clsx from 'clsx';\nimport React, {useContext} from 'react';\nimport {DashboardLayoutContext} from '../../../common/ui/layout/dashboard-layout-context';\nimport {driveState} from '../../drive-store';\n\nexport function FileTableRow({\n  item,\n  children,\n  className,\n  ...domProps\n}: RowElementProps<DriveEntry>) {\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n  const {draggableProps, droppableProps, itemClassName, ref} =\n    useFileViewDnd<HTMLTableRowElement>(item);\n\n  return (\n    <tr\n      className={clsx(className, itemClassName, isMobileMode ? 'h-64' : null)}\n      ref={ref}\n      {...mergeProps(draggableProps, droppableProps, domProps, {\n        onContextMenu: (e: React.MouseEvent) => {\n          e.preventDefault();\n          e.stopPropagation();\n          if (!isMobileMode) {\n            if (!driveState().selectedEntries.has(item.id)) {\n              driveState().selectEntries([item.id]);\n            }\n            driveState().setContextMenuData({x: e.clientX, y: e.clientY});\n          }\n        },\n      })}\n    >\n      {children}\n    </tr>\n  );\n}\n","import {useCallback} from 'react';\nimport {getPathForFolder} from '../drive-page/drive-page';\nimport {driveState} from '../drive-store';\nimport {DriveEntry} from '../files/drive-entry';\nimport {getSelectedEntries} from '../files/use-selected-entries';\nimport {useNavigate} from '../../common/utils/hooks/use-navigate';\n\nexport function useViewItemActionHandler() {\n  const navigate = useNavigate();\n\n  const performViewItemAction = useCallback(\n    (entry: DriveEntry) => {\n      if (entry && entry.type === 'folder') {\n        navigate(getPathForFolder(entry.hash));\n      } else {\n        const selectedEntries = getSelectedEntries();\n        driveState().setActiveActionDialog(\n          'preview',\n          selectedEntries.length ? selectedEntries : [entry]\n        );\n      }\n    },\n    [navigate]\n  );\n\n  return {performViewItemAction};\n}\n","import {ColumnConfig} from '../../../common/datatable/column-config';\nimport {DriveEntry} from '../../files/drive-entry';\nimport {Trans} from '../../../common/i18n/trans';\nimport {FileThumbnail} from '../../../common/uploads/file-type-icon/file-thumbnail';\nimport {FormattedDate} from '../../../common/i18n/formatted-date';\nimport {prettyBytes} from '../../../common/uploads/utils/pretty-bytes';\nimport {Checkbox} from '../../../common/ui/forms/toggle/checkbox';\nimport {EntryActionMenuTrigger} from '../../entry-actions/entry-action-menu-trigger';\nimport {IconButton} from '../../../common/ui/buttons/icon-button';\nimport {MoreVertIcon} from '../../../common/icons/material/MoreVert';\nimport React from 'react';\nimport memoize from 'nano-memoize';\n\nconst formatFileSize = memoize(bytes => {\n  return prettyBytes(bytes);\n});\n\nexport const fileTableMobileColumns: ColumnConfig<DriveEntry>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    hideHeader: true,\n    header: () => <Trans message=\"User\" />,\n    body: entry => (\n      <div className=\"flex items-center gap-14\">\n        <FileThumbnail\n          className=\"w-30 h-30 rounded\"\n          iconClassName=\"w-28 h-28\"\n          file={entry}\n        />\n        <div>\n          <div>{entry.name}</div>\n          <div className=\"text-muted text-xs flex items-center mt-4\">\n            <FormattedDate date={entry.updated_at} />\n            <div>·</div>\n            <div>{formatFileSize(entry.file_size)}</div>\n          </div>\n        </div>\n      </div>\n    ),\n    width: 'col-w-3',\n  },\n  {\n    key: 'actions',\n    hideHeader: true,\n    header: () => <Trans message=\"Actions\" />,\n    align: 'end',\n    padding: 'pl-12 pr-4',\n    body: (entry, selectedRows) =>\n      selectedRows.length ? (\n        <Checkbox\n          className=\"block mr-8\"\n          checked={selectedRows.includes(entry.id)}\n        />\n      ) : (\n        <EntryActionMenuTrigger entries={[entry]}>\n          <IconButton className=\"text-muted\">\n            <MoreVertIcon />\n          </IconButton>\n        </EntryActionMenuTrigger>\n      ),\n  },\n];\n","import {DriveEntry} from '../../files/drive-entry';\nimport React, {useMemo} from 'react';\nimport {Table} from '../../../common/ui/tables/table';\nimport {\n  DriveSortDescriptor,\n  driveState,\n  useDriveStore,\n} from '../../drive-store';\nimport {FileTableRow} from './file-table-row';\nimport {useViewItemActionHandler} from '../use-view-item-action-handler';\nimport {useIsMobileMediaQuery} from '../../../common/utils/hooks/is-mobile-media-query';\nimport {fileTableColumns} from './file-table-columns';\nimport {fileTableMobileColumns} from './file-table-mobile-columns';\n\ninterface Props {\n  entries: DriveEntry[];\n}\nexport function FileTable({entries}: Props) {\n  const isMobile = useIsMobileMediaQuery();\n  const {performViewItemAction} = useViewItemActionHandler();\n  const selectedEntries = useDriveStore(s => s.selectedEntries);\n  const sortDescriptor = useDriveStore(s => s.sortDescriptor);\n\n  const selectedRows = useMemo(() => {\n    return [...selectedEntries];\n  }, [selectedEntries]);\n\n  return (\n    <Table\n      hideHeaderRow={!!isMobile}\n      columns={isMobile ? fileTableMobileColumns : fileTableColumns}\n      data={entries}\n      sortDescriptor={sortDescriptor}\n      onSortChange={value => {\n        driveState().setSortDescriptor(value as DriveSortDescriptor);\n      }}\n      onAction={performViewItemAction}\n      selectedRows={selectedRows}\n      selectionStyle=\"highlight\"\n      renderRowAs={FileTableRow}\n      onSelectionChange={value => {\n        driveState().selectEntries(value as number[]);\n      }}\n    />\n  );\n}\n","import React, {useContext} from 'react';\nimport {DriveEntry} from '../../files/drive-entry';\nimport {driveState, useDriveStore} from '../../drive-store';\nimport {mergeProps} from '@react-aria/utils';\nimport {useFileViewDnd} from '../use-file-view-dnd';\nimport {useViewItemActionHandler} from '../use-view-item-action-handler';\nimport {usePointerEvents} from '../../../common/ui/interactions/use-pointer-events';\nimport {isCtrlOrShiftPressed} from '../../../common/utils/keybinds/is-ctrl-or-shift-pressed';\nimport {createEventHandler} from '../../../common/utils/dom/create-event-handler';\nimport {DashboardLayoutContext} from '../../../common/ui/layout/dashboard-layout-context';\nimport {BaseFileGridItem} from './base-file-grid-item';\nimport {EntryActionMenuTrigger} from '../../entry-actions/entry-action-menu-trigger';\nimport {IconButton} from '../../../common/ui/buttons/icon-button';\nimport {MoreVertIcon} from '../../../common/icons/material/MoreVert';\nimport {Checkbox} from '../../../common/ui/forms/toggle/checkbox';\n\ninterface FileGridItemProps {\n  entry: DriveEntry;\n}\nexport function FileGridItem({entry}: FileGridItemProps) {\n  const isSelected = useDriveStore(s => s.selectedEntries.has(entry.id));\n  const {performViewItemAction} = useViewItemActionHandler();\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n\n  const {draggableProps, droppableProps, itemClassName, ref} =\n    useFileViewDnd<HTMLDivElement>(entry);\n\n  const toggleEntry = () => {\n    if (isSelected) {\n      driveState().deselectEntries([entry.id]);\n    } else {\n      driveState().selectEntries([entry.id], true);\n    }\n  };\n\n  const pressHandler = (e: PointerEvent, el: HTMLElement) => {\n    if (isMobileMode) {\n      if (driveState().selectedEntries.size) {\n        toggleEntry();\n      } else {\n        performViewItemAction(entry);\n      }\n    } else {\n      driveState().selectEntries([entry.id], isCtrlOrShiftPressed(e));\n    }\n  };\n\n  const {domProps: pressProps} = usePointerEvents({\n    onLongPress: isMobileMode ? () => toggleEntry() : undefined,\n    onPress: pressHandler,\n  });\n\n  const keyboardHandler: React.KeyboardEventHandler = e => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      e.stopPropagation();\n      performViewItemAction(entry);\n    }\n  };\n\n  const contextMenuHandler: React.MouseEventHandler = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!isMobileMode) {\n      if (!driveState().selectedEntries.has(entry.id)) {\n        driveState().selectEntries([entry.id]);\n      }\n      driveState().setContextMenuData({x: e.clientX, y: e.clientY});\n    }\n  };\n\n  return (\n    <BaseFileGridItem\n      {...mergeProps(draggableProps, droppableProps, pressProps, {\n        onKeyDown: createEventHandler(keyboardHandler),\n      })}\n      ref={ref}\n      entry={entry}\n      isSelected={isSelected}\n      isMobileMode={!!isMobileMode}\n      tabIndex={-1}\n      onDoubleClick={e => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!isMobileMode) {\n          performViewItemAction(entry);\n        }\n      }}\n      footerAdornment={\n        isMobileMode && (\n          <FooterAdornment entry={entry} isSelected={isSelected} />\n        )\n      }\n      onContextMenu={createEventHandler(contextMenuHandler)}\n      className={itemClassName}\n    />\n  );\n}\n\ninterface FooterProps {\n  entry: DriveEntry;\n  isSelected?: boolean;\n}\nfunction FooterAdornment({entry, isSelected}: FooterProps) {\n  const anySelected = useDriveStore(s => s.selectedEntries.size);\n\n  if (anySelected) {\n    return <Checkbox className=\"block mr-8\" checked={isSelected} />;\n  }\n\n  return (\n    <EntryActionMenuTrigger entries={[entry]}>\n      <IconButton\n        className=\"text-muted\"\n        onPointerDown={e => {\n          e.stopPropagation();\n        }}\n      >\n        <MoreVertIcon />\n      </IconButton>\n    </EntryActionMenuTrigger>\n  );\n}\n","import {FileGridItem} from './file-grid-item';\nimport React from 'react';\nimport {DriveEntry} from '../../files/drive-entry';\n\ninterface FileGridProps {\n  entries: DriveEntry[];\n}\nexport function FileGrid({entries}: FileGridProps) {\n  return (\n    <div className=\"file-grid-container\">\n      <div className=\"file-grid\">\n        {entries.map(entry => {\n          return <FileGridItem key={entry.id} entry={entry} />;\n        })}\n      </div>\n    </div>\n  );\n}\n","import {driveState, useDriveStore} from '../../drive-store';\nimport {EntriesSortButton} from './entries-sort-button';\nimport React from 'react';\n\ninterface DriveSortButtonProps {\n  isDisabled?: boolean;\n}\nexport function DriveSortButton({isDisabled}: DriveSortButtonProps) {\n  const descriptor = useDriveStore(s => s.sortDescriptor);\n  return (\n    <EntriesSortButton\n      isDisabled={isDisabled}\n      descriptor={descriptor}\n      onChange={value => {\n        driveState().setSortDescriptor(value);\n      }}\n    />\n  );\n}\n","import React, {ReactNode, useContext} from 'react';\nimport {useDriveStore} from './drive-store';\nimport {\n  DrivePage,\n  makeFolderPage,\n  RootFolderPage,\n  SharesPage,\n  TrashPage,\n} from './drive-page/drive-page';\nimport {Breadcrumb} from '../common/ui/breadcrumbs/breadcrumb';\nimport {useAuth} from '../common/auth/use-auth';\nimport {useFolderPath} from './files/queries/use-folder-path';\nimport {EntryActionMenuTrigger} from './entry-actions/entry-action-menu-trigger';\nimport {useActiveWorkspace} from '../common/workspace/active-workspace-id-context';\nimport {ButtonBase} from '../common/ui/buttons/button-base';\nimport {BreadcrumbItem} from '../common/ui/breadcrumbs/breadcrumb-item';\nimport {ArrowDropDownIcon} from '../common/icons/material/ArrowDropDown';\nimport {MessageDescriptor} from '../common/i18n/message-descriptor';\nimport {MixedText} from '../common/i18n/mixed-text';\nimport {useNavigate} from '../common/utils/hooks/use-navigate';\nimport {DashboardLayoutContext} from '../common/ui/layout/dashboard-layout-context';\n\ninterface ItemConfig {\n  page: DrivePage;\n  label: MessageDescriptor | string;\n}\n\ninterface PageBreadcrumbsProps {\n  className?: string;\n}\nexport function PageBreadcrumbs({className}: PageBreadcrumbsProps) {\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n  const navigate = useNavigate();\n  const page = useDriveStore(s => s.activePage);\n  const folder = page?.folder;\n  const query = useFolderPath({\n    hash: folder?.hash,\n    isEnabled: folder?.hash !== RootFolderPage.folder.hash,\n  });\n  const workspace = useActiveWorkspace();\n  const rootItem = useRootItem();\n  // wait until path, folder and workspace load fully\n  const isLoading =\n    !page ||\n    !workspace ||\n    (page.isFolderPage && !folder) ||\n    query.fetchStatus !== 'idle';\n\n  let content: ReactNode;\n\n  if (isLoading) {\n    content = null;\n  } else {\n    const items: ItemConfig[] = rootItem ? [rootItem] : [];\n\n    if (query.data) {\n      query.data.path.forEach(parent => {\n        items.push({\n          page: makeFolderPage(parent),\n          label: parent.name,\n        });\n      });\n    }\n\n    content = (\n      <Breadcrumb\n        className={className}\n        size={isMobileMode ? 'md' : 'lg'}\n        currentIsClickable\n      >\n        {items.map((item, index) => {\n          const isLast = index === items.length - 1;\n          if (!isLast) {\n            return (\n              <BreadcrumbItem\n                key={item.page.id}\n                onSelected={() => {\n                  navigate(item.page.path);\n                }}\n              >\n                <MixedText value={item.label} />\n              </BreadcrumbItem>\n            );\n          }\n\n          return (\n            <BreadcrumbItem key={item.page.id}>\n              {({isMenuItem}) => {\n                if (\n                  isMenuItem ||\n                  (!item.page.folder && item.page !== TrashPage)\n                )\n                  return <MixedText value={item.label} />;\n                return (\n                  <EntryActionMenuTrigger page={item.page}>\n                    <ButtonBase className=\"flex items-center gap-2 rounded focus-visible:ring-offset-4\">\n                      <MixedText value={item.label} />\n                      <ArrowDropDownIcon className=\"icon-md text-muted\" />\n                    </ButtonBase>\n                  </EntryActionMenuTrigger>\n                );\n              }}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    );\n  }\n\n  return content;\n}\n\nfunction useRootItem(): ItemConfig | null {\n  const page = useDriveStore(s => s.activePage);\n  const workspace = useActiveWorkspace();\n  const {user} = useAuth();\n\n  if (!page) return null;\n\n  // in workspace\n  if (workspace && !workspace.default) {\n    if (\n      page?.isFolderPage &&\n      (page === RootFolderPage || page.folder?.workspace_id === workspace.id)\n    ) {\n      return {label: workspace.name, page: RootFolderPage};\n    }\n  }\n\n  if (page?.isFolderPage) {\n    const owner = page.folder?.users.find(u => u.owns_entry);\n    // inside shared folder\n    if (owner?.id !== user?.id) {\n      return {label: SharesPage.label, page: SharesPage};\n    }\n    // if folder is currently active, root item will always be root folder page\n    return {label: RootFolderPage.label, page: RootFolderPage};\n  }\n\n  // if folder page is not active, we are already at the root\n  return {label: page.label, page};\n}\n","import {AnimatePresence, m} from 'framer-motion';\nimport {ProgressCircle} from '../progress/progress-circle';\nimport React, {useEffect, useRef} from 'react';\nimport {opacityAnimation} from '../animation/opacity-animation';\n\ninterface InfiniteScrollSentinelProps {\n  onIntersection: () => void;\n  isFetchingNextPage: boolean;\n  hasNextPage?: boolean;\n}\nexport function InfiniteScrollSentinel({\n  onIntersection,\n  isFetchingNextPage,\n  hasNextPage,\n}: InfiniteScrollSentinelProps) {\n  const sentinelRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const sentinelEl = sentinelRef.current;\n    if (!sentinelEl) return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting && hasNextPage) {\n        onIntersection();\n      }\n    });\n    observer.observe(sentinelEl);\n    return () => {\n      observer.unobserve(sentinelEl);\n    };\n  }, [onIntersection, hasNextPage]);\n\n  return (\n    <>\n      <span ref={sentinelRef} aria-hidden />\n      <AnimatePresence>\n        {isFetchingNextPage && (\n          <m.div\n            className=\"flex justify-center mt-24 w-full\"\n            {...opacityAnimation}\n          >\n            <ProgressCircle isIndeterminate aria-label=\"loading\" />\n          </m.div>\n        )}\n      </AnimatePresence>\n    </>\n  );\n}\n","import {AnimatePresence, m} from 'framer-motion';\nimport {Trans} from '../common/i18n/trans';\nimport React from 'react';\nimport {opacityAnimation} from '../common/ui/animation/opacity-animation';\n\ninterface DropTargetMaskProps {\n  isVisible: boolean;\n}\nexport function DropTargetMask({isVisible}: DropTargetMaskProps) {\n  const mask = (\n    <m.div\n      key=\"dragTargetMask\"\n      {...opacityAnimation}\n      transition={{duration: 0.3}}\n      className=\"absolute inset-0 w-full min-h-full bg-primary-light/30 border-2 border-dashed border-primary pointer-events-none\"\n    >\n      <m.div\n        initial={{y: '100%', opacity: 0}}\n        animate={{y: '-10px', opacity: 1}}\n        exit={{y: '100%', opacity: 0}}\n        className=\"p-10 bg-primary text-on-primary fixed bottom-0 left-0 right-0 max-w-max mx-auto rounded\"\n      >\n        <Trans message=\"Drop files to upload them to this folder.\" />\n      </m.div>\n    </m.div>\n  );\n  return <AnimatePresence>{isVisible ? mask : null}</AnimatePresence>;\n}\n","import React, {\n  MouseEventHandler,\n  ReactNode,\n  useContext,\n  useRef,\n  useState,\n} from 'react';\nimport {usePaginatedEntries} from '../files/queries/use-paginated-entries';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {IllustratedMessage} from '../../common/ui/images/illustrated-message';\nimport {SvgImage} from '../../common/ui/images/svg-image/svg-image';\nimport {SearchFilterList} from '../search/search-filter-list';\nimport {Trans} from '../../common/i18n/trans';\nimport {useMouseSelectionBox} from '../../common/ui/interactions/dnd/mouse-selection/use-mouse-selection-box';\nimport {useDroppable} from '../../common/ui/interactions/dnd/use-droppable';\nimport {mergeProps} from '@react-aria/utils';\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\nimport {EntryActionList} from '../entry-actions/entry-action-list';\nimport {DriveContextMenu} from '../files/drive-context-menu';\nimport {FileTable} from './file-table/file-table';\nimport {FileGrid} from './file-grid/file-grid';\nimport {DriveSortButton} from '../layout/sorting/drive-sort-button';\nimport {DashboardLayoutContext} from '../../common/ui/layout/dashboard-layout-context';\nimport {PageBreadcrumbs} from '../page-breadcrumbs';\nimport {InfiniteScrollSentinel} from '../../common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {useEntries} from '../files/queries/use-entries';\nimport {AdHost} from '../../common/admin/ads/ad-host';\nimport {DropTargetMask} from '../drop-target-mask';\nimport {useSearchParams} from 'react-router-dom';\nimport clsx from 'clsx';\nimport {MixedDraggable} from '../../common/ui/interactions/dnd/use-draggable';\n\ninterface FileViewProps {\n  className?: string;\n}\nexport function FileView({className}: FileViewProps) {\n  const [params] = useSearchParams();\n  const isSearchingOrFiltering =\n    !!params.get('query') || !!params.get('filters');\n  const containerRef = useRef<HTMLDivElement>(null);\n  const {\n    hasNextPage,\n    isFetchingNextPage,\n    fetchNextPage,\n    isLoading,\n    fetchStatus,\n  } = usePaginatedEntries();\n  const entries = useEntries();\n  const {uploadFiles} = useDriveUploadQueue();\n  const activePage = useDriveStore(s => s.activePage);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const viewMode = useDriveStore(s => s.viewMode);\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n\n  const {containerProps, boxProps} = useMouseSelectionBox({\n    containerRef,\n    onPointerDown: e => {\n      if (!(e.target as HTMLElement).closest('.entry-action-list')) {\n        driveState().deselectEntries('all');\n      }\n    },\n  });\n\n  const {droppableProps} = useDroppable({\n    id: 'driveRoot',\n    ref: containerRef,\n    types: ['nativeFile'],\n    onDragEnter: () => {\n      setIsDragOver(true);\n    },\n    onDragLeave: () => {\n      setIsDragOver(false);\n    },\n    onDrop: async (draggable: MixedDraggable) => {\n      if (draggable.type === 'nativeFile') {\n        uploadFiles(await draggable.getData());\n      }\n    },\n  });\n\n  if (!activePage) return null;\n\n  let content: ReactNode;\n  if (!entries.length && (!isLoading || fetchStatus === 'idle')) {\n    const noContentMessage = activePage.noContentMessage(\n      isSearchingOrFiltering\n    );\n    content = (\n      <IllustratedMessage\n        className=\"mt-40\"\n        image={<SvgImage src={noContentMessage.image} />}\n        title={<Trans {...noContentMessage.title} />}\n        description={<Trans {...noContentMessage.description} />}\n      />\n    );\n  } else if (!isLoading) {\n    content =\n      viewMode === 'list' ? (\n        <FileTable entries={entries} />\n      ) : (\n        <FileGrid entries={entries} />\n      );\n  }\n\n  const handleContextMenu: MouseEventHandler = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    driveState().deselectEntries('all');\n    driveState().setContextMenuData({x: e.clientX, y: e.clientY});\n  };\n\n  return (\n    <div\n      className={clsx('relative', className)}\n      {...mergeProps(containerProps, droppableProps)}\n      onContextMenu={handleContextMenu}\n    >\n      <div className=\"flex flex-col relative pt-10 min-h-full\">\n        {isMobileMode ? (\n          <PageBreadcrumbs className=\"px-14 mb-10\" />\n        ) : (\n          <Toolbar />\n        )}\n        <SearchFilterList />\n        <div className=\"px-18 md:px-24 pb-18 flex-auto relative\">\n          <AdHost slot=\"drive\" className=\"mb-24\" />\n          {content}\n          <InfiniteScrollSentinel\n            onIntersection={fetchNextPage}\n            isFetchingNextPage={isFetchingNextPage}\n            hasNextPage={hasNextPage}\n          />\n        </div>\n        <div\n          {...boxProps}\n          className=\"absolute bg-primary-light/20 border border-primary-light z-10 pointer-events-none shadow-md left-0 top-0 hidden\"\n        />\n        <DriveContextMenu />\n        <DropTargetMask isVisible={isDragOver} />\n      </div>\n    </div>\n  );\n}\n\nfunction Toolbar() {\n  const activePage = useDriveStore(s => s.activePage);\n  return (\n    <div className=\"px-10 md:px-18 my-10 flex items-center gap-40 justify-between text-muted min-h-42\">\n      <DriveSortButton isDisabled={activePage?.disableSort} />\n      <EntryActionList className=\"text-muted\" />\n    </div>\n  );\n}\n","import {\n  ComponentPropsWithoutRef,\n  memo,\n  ReactElement,\n  useMemo,\n  useState,\n} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {FileTypeIcon} from '../../common/uploads/file-type-icon/file-type-icon';\nimport {prettyBytes} from '../../common/uploads/utils/pretty-bytes';\nimport {IconButton} from '../../common/ui/buttons/icon-button';\nimport {CloseIcon} from '../../common/icons/material/Close';\nimport {ProgressCircle} from '../../common/ui/progress/progress-circle';\nimport {CheckCircleIcon} from '../../common/icons/material/CheckCircle';\nimport {UploadedFile} from '../../common/uploads/uploaded-file';\nimport {useFileUploadStore} from '../../common/uploads/uploader/file-upload-provider';\nimport {Trans} from '../../common/i18n/trans';\nimport {MixedText} from '../../common/i18n/mixed-text';\nimport {Tooltip} from '../../common/ui/tooltip/tooltip';\nimport {ErrorIcon} from '../../common/icons/material/Error';\nimport {WarningIcon} from '../../common/icons/material/Warning';\nimport {message} from '../../common/i18n/message';\n\ninterface UploadQueueProps {\n  file: UploadedFile;\n}\nexport const UploadQueueItem = memo(({file}: UploadQueueProps) => {\n  return (\n    <div className=\"p-10 flex items-center gap-14\">\n      <div className=\"shrink-0 border rounded p-8\">\n        <FileTypeIcon className=\"w-22 h-22\" mime={file.mime} />\n      </div>\n      <div className=\"flex-auto min-w-0 pr-10\">\n        <div className=\"mb-2 flex items-center min-w-0 gap-10\">\n          <div className=\"flex-auto font-medium whitespace-nowrap min-w-0 overflow-hidden overflow-ellipsis\">\n            {file.name}\n          </div>\n        </div>\n        <SizeInfo file={file} />\n      </div>\n      <div className=\"mr-10\">\n        <FileStatus file={file} />\n      </div>\n    </div>\n  );\n});\n\ninterface SizeInfoProps {\n  file: UploadedFile;\n}\nfunction SizeInfo({file}: SizeInfoProps) {\n  const fileUpload = useFileUploadStore(s => s.fileUploads.get(file.id));\n  const bytesUploaded = fileUpload?.bytesUploaded || 0;\n\n  const totalBytes = useMemo(() => prettyBytes(file.size), [file]);\n  const uploadedBytes = useMemo(\n    () => prettyBytes(bytesUploaded),\n    [bytesUploaded]\n  );\n\n  let statusMessage: ReactElement;\n  if (fileUpload?.status === 'completed') {\n    statusMessage = <Trans message=\"Upload complete\" />;\n  } else if (fileUpload?.status === 'aborted') {\n    statusMessage = <Trans message=\"Upload cancelled\" />;\n  } else if (fileUpload?.status === 'failed') {\n    statusMessage = <Trans message=\"Upload failed\" />;\n  } else {\n    statusMessage = (\n      <Trans\n        message=\":bytesUploaded of :totalBytes\"\n        values={{\n          bytesUploaded: uploadedBytes,\n          totalBytes,\n        }}\n      />\n    );\n  }\n\n  return <div className=\"text-muted text-xs\">{statusMessage}</div>;\n}\n\ninterface FileStatusProps {\n  file: UploadedFile;\n}\nfunction FileStatus({file}: FileStatusProps) {\n  const fileUpload = useFileUploadStore(s => s.fileUploads.get(file.id));\n  const abortUpload = useFileUploadStore(s => s.abortUpload);\n  const percentage = fileUpload?.percentage || 0;\n  const status = fileUpload?.status;\n  const errorMessage = fileUpload?.errorMessage;\n  const [isHovered, setIsHovered] = useState(false);\n\n  const abortButton = (\n    <IconButton\n      size=\"sm\"\n      onClick={() => {\n        abortUpload(file.id);\n      }}\n    >\n      <CloseIcon />\n    </IconButton>\n  );\n\n  const progressButton = (\n    <ProgressCircle aria-label=\"Upload progress\" size=\"sm\" value={percentage} />\n  );\n\n  let statusButton: ReactElement;\n  if (status === 'failed') {\n    const errMessage =\n      errorMessage || message('This file could not be uploaded');\n    statusButton = (\n      <AnimatedStatus>\n        <Tooltip variant=\"danger\" label={<MixedText value={errMessage} />}>\n          <ErrorIcon className=\"text-danger\" size=\"md\" />\n        </Tooltip>\n      </AnimatedStatus>\n    );\n  } else if (status === 'aborted') {\n    statusButton = (\n      <AnimatedStatus>\n        <WarningIcon className=\"text-warning\" size=\"md\" />\n      </AnimatedStatus>\n    );\n  } else if (status === 'completed') {\n    statusButton = (\n      <AnimatedStatus>\n        <CheckCircleIcon size=\"md\" className=\"text-positive\" />\n      </AnimatedStatus>\n    );\n  } else {\n    statusButton = (\n      <AnimatedStatus\n        onPointerEnter={e => {\n          if (e.pointerType === 'mouse') {\n            setIsHovered(true);\n          }\n        }}\n        onPointerLeave={e => {\n          if (e.pointerType === 'mouse') {\n            setIsHovered(false);\n          }\n        }}\n      >\n        {isHovered ? abortButton : progressButton}\n      </AnimatedStatus>\n    );\n  }\n\n  return <AnimatePresence>{statusButton}</AnimatePresence>;\n}\n\ninterface AnimatedStatusProps\n  extends Omit<\n    ComponentPropsWithoutRef<'div'>,\n    'onAnimationStart' | 'onDragStart' | 'onDragEnd' | 'onDrag'\n  > {\n  children: ReactElement;\n}\nfunction AnimatedStatus({children, ...domProps}: AnimatedStatusProps) {\n  return (\n    <m.div\n      {...domProps}\n      initial={{scale: 0, opacity: 0}}\n      animate={{scale: 1, opacity: 1}}\n      exit={{scale: 0, opacity: 0}}\n    >\n      {children}\n    </m.div>\n  );\n}\n","import {ReactElement} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {IconButton} from '../../common/ui/buttons/icon-button';\nimport {CloseIcon} from '../../common/icons/material/Close';\nimport {useFileUploadStore} from '../../common/uploads/uploader/file-upload-provider';\nimport {Trans} from '../../common/i18n/trans';\nimport {UploadQueueItem} from './upload-queue-item';\n\nexport function UploadQueue() {\n  const isOpen = useDriveStore(s => s.uploadQueueIsOpen);\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <m.div\n          key=\"upload-queue\"\n          className=\"shadow-xl rounded fixed bottom-16 right-16 bg z-modal border w-375 text-sm\"\n          initial={{y: '100%', opacity: 0}}\n          animate={{y: 0, opacity: 1}}\n          exit={{y: '100%', opacity: 0}}\n        >\n          <Header />\n          <div className=\"max-h-320 overflow-y-auto\">\n            <UploadList />\n          </div>\n        </m.div>\n      )}\n    </AnimatePresence>\n  );\n}\n\nexport function Header() {\n  const inProgressUploadsCount = useFileUploadStore(\n    s => s.inProgressUploadsCount\n  );\n  const completedUploadsCount = useFileUploadStore(\n    s => s.completedUploadsCount\n  );\n  const clearInactive = useFileUploadStore(s => s.clearInactive);\n\n  let message: ReactElement;\n  if (inProgressUploadsCount) {\n    message = (\n      <Trans\n        message=\"Uploading :count files\"\n        values={{count: inProgressUploadsCount}}\n      />\n    );\n  } else if (completedUploadsCount) {\n    message = (\n      <Trans\n        message=\"Uploaded :count files\"\n        values={{count: completedUploadsCount}}\n      />\n    );\n  } else {\n    message = <Trans message=\"No active uploads\" />;\n  }\n\n  // only allow closing upload queue if there are no active uploads\n  return (\n    <div className=\"px-10 py-4 bg-alt flex items-center gap-10 justify-between border-b min-h-[45px]\">\n      {message}\n      {inProgressUploadsCount === 0 ? (\n        <IconButton\n          size=\"sm\"\n          onClick={() => {\n            driveState().setUploadQueueIsOpen(false);\n            // wait for upload queue panel animation to complete, then clear inactive uploads\n            setTimeout(() => {\n              clearInactive();\n            }, 200);\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : undefined}\n    </div>\n  );\n}\n\nfunction UploadList() {\n  const uploads = useFileUploadStore(s => s.fileUploads);\n  return (\n    <>\n      {[...uploads.values()].map(upload => {\n        return <UploadQueueItem key={upload.file.id} file={upload.file} />;\n      })}\n    </>\n  );\n}\n","export default \"__VITE_ASSET__33c85772__\"","import React, {ReactNode, useContext, useMemo} from 'react';\nimport {driveState} from '../drive-store';\nimport {\n  useSelectedEntry,\n  useSelectedEntryParent,\n} from '../files/use-selected-entries';\nimport {DriveEntry} from '../files/drive-entry';\nimport {FileTypeIcon} from '../../common/uploads/file-type-icon/file-type-icon';\nimport {IconButton} from '../../common/ui/buttons/icon-button';\nimport {CloseIcon} from '../../common/icons/material/Close';\nimport {FileThumbnail} from '../../common/uploads/file-type-icon/file-thumbnail';\nimport {IllustratedMessage} from '../../common/ui/images/illustrated-message';\nimport {SvgImage} from '../../common/ui/images/svg-image/svg-image';\nimport {Button} from '../../common/ui/buttons/button';\nimport {prettyBytes} from '../../common/uploads/utils/pretty-bytes';\nimport {FolderIcon} from '../../common/icons/material/Folder';\nimport {getPathForFolder, RootFolderPage} from '../drive-page/drive-page';\nimport {GroupsIcon} from '../../common/icons/material/Groups';\nimport {Avatar} from '../../common/ui/images/avatar';\nimport {Tooltip} from '../../common/ui/tooltip/tooltip';\nimport {FormattedDate} from '../../common/i18n/formatted-date';\nimport {Trans} from '../../common/i18n/trans';\nimport {DashboardLayoutContext} from '../../common/ui/layout/dashboard-layout-context';\nimport {useNavigate} from '../../common/utils/hooks/use-navigate';\nimport detailedExamination from './detailed-examination.svg';\nimport clsx from 'clsx';\n\ninterface DetailsSidebarProps {\n  className?: string;\n}\nexport function DetailsSidebar({className}: DetailsSidebarProps) {\n  const selectedEntry = useSelectedEntry();\n  return (\n    <div\n      className={clsx(\n        className,\n        'bg p-24 text-sm text-muted border-l h-full overflow-y-auto'\n      )}\n    >\n      {selectedEntry ? (\n        <EntryProperties entry={selectedEntry} />\n      ) : (\n        <NothingSelected />\n      )}\n    </div>\n  );\n}\n\ninterface HeaderProps {\n  entryType: string;\n  entryName: ReactNode;\n}\nfunction Header({entryType, entryName}: HeaderProps) {\n  const {setRightSidenavStatus} = useContext(DashboardLayoutContext);\n  return (\n    <div className=\"flex items-center gap-16 text-text-main mb-38\">\n      <FileTypeIcon className=\"w-24 h-24\" type={entryType} />\n      <div className=\"text-xl font-normal text-ellipsis flex-auto mr-auto min-w-0 break-words\">\n        {entryName}\n      </div>\n      <IconButton\n        size=\"md\"\n        className=\"flex-shrink-0\"\n        onClick={() => {\n          setRightSidenavStatus('closed');\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </div>\n  );\n}\n\ninterface EntryPropertiesProps {\n  entry: DriveEntry;\n}\nfunction EntryProperties({entry}: EntryPropertiesProps) {\n  return (\n    <div>\n      <Header entryType={entry.type} entryName={entry.name} />\n      {entry.type === 'image' && (\n        <FileThumbnail className=\"mb-20\" file={entry} />\n      )}\n      <div>\n        <SectionHeader>\n          <Trans message=\"Who has access\" />\n        </SectionHeader>\n        <div className=\"flex items-center gap-14\">\n          {entry.workspace_id ? (\n            <div className=\"rounded-full border w-32 h-32 flex items-center justify-center\">\n              <GroupsIcon className=\"icon-md\" />\n            </div>\n          ) : null}\n          {entry.users.map(user => (\n            <Tooltip label={user.display_name} key={user.id}>\n              <Avatar src={user.avatar} size=\"md\" circle />\n            </Tooltip>\n          ))}\n        </div>\n        {entry.permissions['files.update'] && (\n          <Button\n            className=\"block mt-20\"\n            variant=\"link\"\n            color=\"primary\"\n            onClick={() => {\n              driveState().setActiveActionDialog('share', [entry]);\n            }}\n          >\n            <Trans message=\"Manage Access\" />\n          </Button>\n        )}\n      </div>\n      <PropertiesPanel entry={entry} />\n    </div>\n  );\n}\n\ninterface SectionHeaderProps {\n  children: ReactNode;\n}\nfunction SectionHeader({children}: SectionHeaderProps) {\n  return <div className=\"text-base text-main mb-20\">{children}</div>;\n}\n\nfunction PropertiesPanel({entry}: EntryPropertiesProps) {\n  const parent = useSelectedEntryParent();\n  const navigate = useNavigate();\n  const owner = entry.users.find(user => user.owns_entry);\n  const prettySize = useMemo(\n    () => prettyBytes(entry.file_size),\n    [entry.file_size]\n  );\n\n  return (\n    <div className=\"mt-20 border-t pt-20\">\n      <SectionHeader>\n        <Trans message=\"Properties\" />\n      </SectionHeader>\n      <PropertyItem\n        label={<Trans message=\"Type\" />}\n        value={\n          <span className=\"capitalize\">\n            <Trans message={entry.type} />\n          </span>\n        }\n      />\n      <PropertyItem\n        label={<Trans message=\"Size\" />}\n        value={entry.file_size ? prettySize : '-'}\n      />\n      <PropertyItem\n        label={<Trans message=\"Location\" />}\n        value={\n          <Button\n            variant=\"link\"\n            startIcon={<FolderIcon />}\n            onClick={() => {\n              navigate(\n                parent ? getPathForFolder(parent.hash) : RootFolderPage.path\n              );\n            }}\n          >\n            {parent ? parent.name : <Trans message=\"Root\" />}\n          </Button>\n        }\n      />\n      {owner && (\n        <PropertyItem\n          label={<Trans message=\"Owner\" />}\n          value={owner.display_name}\n        />\n      )}\n      <PropertyItem\n        label={<Trans message=\"Modified\" />}\n        value={<FormattedDate date={entry.updated_at} />}\n      />\n      <PropertyItem\n        label={<Trans message=\"Created\" />}\n        value={<FormattedDate date={entry.updated_at} />}\n      />\n    </div>\n  );\n}\n\ninterface PropertyItemProps {\n  label: ReactNode;\n  value: ReactNode;\n}\nfunction PropertyItem({label, value}: PropertyItemProps) {\n  return (\n    <div className=\"flex items-center mb-14\">\n      <div className=\"w-1/3 text-sm text-muted\">{label}</div>\n      <div className=\"w-2/3 text-sm text-main\">{value}</div>\n    </div>\n  );\n}\n\nfunction NothingSelected() {\n  return (\n    <>\n      <Header entryType=\"folder\" entryName={<Trans message=\"All files\" />} />\n      <IllustratedMessage\n        image={<SvgImage src={detailedExamination} />}\n        description={\n          <Trans message=\"Select file or folder to see details here\" />\n        }\n      />\n    </>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {toast} from '../../../common/ui/toast/toast';\nimport {message} from '../../../common/i18n/message';\nimport {BackendResponse} from '../../../common/http/backend-response/backend-response';\nimport {FileEntry} from '../../../common/uploads/file-entry';\nimport {apiClient} from '../../../common/http/query-client';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {onFormQueryError} from '../../../common/errors/on-form-query-error';\n\ninterface Response extends BackendResponse {\n  fileEntry: FileEntry;\n}\n\ninterface Payload {\n  entryId: number;\n  name: string;\n  initialName: string;\n}\n\nexport function useRenameEntry(form: UseFormReturn<any>) {\n  return useMutation((payload: Payload) => renameEntry(payload), {\n    onSuccess: (r, p) => {\n      invalidateEntryQueries();\n      toast(\n        message(':oldName renamed to :newName', {\n          values: {oldName: p.initialName, newName: r.fileEntry.name},\n        })\n      );\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction renameEntry({entryId, ...payload}: Payload): Promise<Response> {\n  return apiClient\n    .put(`file-entries/${entryId}`, payload)\n    .then(response => response.data);\n}\n","import React from 'react';\nimport {useForm} from 'react-hook-form';\nimport {useRenameEntry} from '../queries/use-rename-entry';\nimport {FormTextField} from '../../../common/ui/forms/input-field/text-field/text-field';\nimport {Button} from '../../../common/ui/buttons/button';\nimport {Form} from '../../../common/ui/forms/form';\nimport {DialogFooter} from '../../../common/ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '../../../common/ui/overlays/dialog/dialog-context';\nimport {Dialog} from '../../../common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../../../common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../../../common/ui/overlays/dialog/dialog-body';\nimport {Trans} from '../../../common/i18n/trans';\nimport {DriveEntry} from '../drive-entry';\n\ninterface FormValue {\n  name?: string;\n}\n\ninterface RenameEntryDialogProps {\n  entries: DriveEntry[];\n}\nexport function RenameEntryDialog({entries}: RenameEntryDialogProps) {\n  const {close, formId} = useDialogContext();\n  const initialName = entries[0]?.name;\n  const form = useForm({defaultValues: {name: initialName}});\n  const renameEntry = useRenameEntry(form);\n\n  const onSubmit = (e: Required<FormValue>) => {\n    renameEntry.mutate(\n      {\n        entryId: entries[0].id,\n        name: e.name,\n        initialName,\n      },\n      {onSuccess: close}\n    );\n  };\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Rename\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form onSubmit={onSubmit} form={form} id={formId}>\n          <FormTextField\n            placeholder=\"Enter a name...\"\n            aria-label=\"Entry name\"\n            autoFocus\n            name=\"name\"\n            required\n            minLength={3}\n            maxLength={200}\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"flat\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          type=\"submit\"\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={renameEntry.isLoading || !form.formState.isDirty}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {apiClient} from '../../../common/http/query-client';\nimport {onFormQueryError} from '../../../common/errors/on-form-query-error';\nimport {BackendResponse} from '../../../common/http/backend-response/backend-response';\nimport {DriveFolder} from '../drive-entry';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\n\ninterface Response extends BackendResponse {\n  folder: DriveFolder;\n}\n\ninterface CreateFolderProps {\n  name: string;\n  parentId?: number | null;\n}\n\nfunction createFolder({name, parentId}: CreateFolderProps): Promise<Response> {\n  return apiClient\n    .post('folders', {\n      name,\n      parentId: parentId === 0 ? null : parentId,\n    })\n    .then(response => response.data);\n}\n\nexport function useCreateFolder(form: UseFormReturn<any>) {\n  return useMutation(\n    ({name, parentId}: CreateFolderProps) => {\n      return createFolder({name, parentId});\n    },\n    {\n      onSuccess: () => invalidateEntryQueries(),\n      onError: r => onFormQueryError(r, form),\n    }\n  );\n}\n","import React from 'react';\nimport {useForm} from 'react-hook-form';\nimport {FormTextField} from '../../../common/ui/forms/input-field/text-field/text-field';\nimport {Button} from '../../../common/ui/buttons/button';\nimport {toast} from '../../../common/ui/toast/toast';\nimport {Form} from '../../../common/ui/forms/form';\nimport {useCreateFolder} from '../queries/create-folder';\nimport {DialogFooter} from '../../../common/ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '../../../common/ui/overlays/dialog/dialog-context';\nimport {Dialog} from '../../../common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../../../common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../../../common/ui/overlays/dialog/dialog-body';\nimport {Trans} from '../../../common/i18n/trans';\nimport {message} from '../../../common/i18n/message';\nimport {useTrans} from '../../../common/i18n/use-trans';\n\ninterface FormValue {\n  name?: string;\n}\n\ninterface NewFolderDialogProps {\n  parentId: number;\n}\nexport function NewFolderDialog({parentId}: NewFolderDialogProps) {\n  const {close, formId} = useDialogContext();\n  const {trans} = useTrans();\n  const form = useForm({\n    defaultValues: {\n      name: trans({message: 'Untitled Folder'}),\n    },\n  });\n  const createFolder = useCreateFolder(form);\n\n  const onSubmit = (value: Required<FormValue>) => {\n    createFolder.mutate(\n      {...value, parentId},\n      {\n        onSuccess: response => {\n          close(response.folder);\n          toast(message('Folder created'));\n        },\n      }\n    );\n  };\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"New Folder\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form onSubmit={onSubmit} form={form} id={formId}>\n          <FormTextField\n            placeholder={trans({\n              message: 'Enter a name...',\n            })}\n            aria-label=\"Entry name\"\n            autoFocus\n            autoSelectText\n            name=\"name\"\n            required\n            minLength={3}\n            maxLength={200}\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"flat\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          type=\"submit\"\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={createFolder.isLoading}\n        >\n          <Trans message=\"Create\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {FilePreviewDialog} from '../../../common/uploads/preview/file-preview-dialog';\nimport {DriveEntry} from '../drive-entry';\nimport {createElement, useState} from 'react';\nimport {useShareAction} from '../../entry-actions/use-entry-actions';\nimport {Button} from '../../../common/ui/buttons/button';\nimport {Trans} from '../../../common/i18n/trans';\nimport {useIsMobileMediaQuery} from '../../../common/utils/hooks/is-mobile-media-query';\nimport {IconButton} from '../../../common/ui/buttons/icon-button';\nimport {useEntries} from '../queries/use-entries';\n\ninterface EntryPreviewDialogProps {\n  selectedEntry: DriveEntry;\n}\nexport function EntryPreviewDialog({selectedEntry}: EntryPreviewDialogProps) {\n  const files = useEntries().filter(entry => entry.type !== 'folder');\n  const defaultActiveIndex = files.findIndex(\n    file => file.id === selectedEntry?.id\n  );\n  const [activeIndex, setActiveIndex] = useState(defaultActiveIndex);\n  return (\n    <FilePreviewDialog\n      allowDownload={selectedEntry.permissions['files.download']}\n      headerActionsLeft={\n        <DriveActions activeIndex={activeIndex} entries={files} />\n      }\n      activeIndex={activeIndex}\n      onActiveIndexChange={setActiveIndex}\n      entries={files}\n    />\n  );\n}\n\ninterface DriveActionsProps {\n  activeIndex: number;\n  entries: DriveEntry[];\n}\nfunction DriveActions({activeIndex, entries}: DriveActionsProps) {\n  const selectedEntry = entries[activeIndex];\n  const share = useShareAction([selectedEntry]);\n  const isMobile = useIsMobileMediaQuery();\n  if (!selectedEntry || !share) return null;\n\n  if (isMobile) {\n    return (\n      <IconButton\n        onClick={() => {\n          share.execute();\n        }}\n      >\n        {createElement(share.icon)}\n      </IconButton>\n    );\n  }\n\n  return (\n    <Button\n      variant=\"text\"\n      startIcon={createElement(share.icon)}\n      onClick={() => {\n        share.execute();\n      }}\n    >\n      <Trans {...share.label} />\n    </Button>\n  );\n}\n","import axios from 'axios';\nimport {useMutation} from '@tanstack/react-query';\nimport {DriveEntryPermissions} from '../../files/drive-entry';\nimport {apiClient} from '../../../common/http/query-client';\nimport {toast} from '../../../common/ui/toast/toast';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {BackendResponse} from '../../../common/http/backend-response/backend-response';\nimport {BackendErrorResponse} from '../../../common/errors/backend-error-response';\nimport {showHttpErrorToast} from '../../../common/utils/http/show-http-error-toast';\n\nexport interface ShareEntryPayload {\n  emails: string[];\n  permissions: DriveEntryPermissions;\n  entryId: number;\n}\n\nfunction shareEntry({\n  entryId,\n  ...payload\n}: ShareEntryPayload): Promise<BackendResponse> {\n  return apiClient\n    .post(`file-entries/${entryId}/share`, payload)\n    .then(response => response.data);\n}\n\nexport function useShareEntry() {\n  return useMutation((payload: ShareEntryPayload) => shareEntry(payload), {\n    onSuccess: () => {\n      invalidateEntryQueries();\n    },\n    onError: err => {\n      if (axios.isAxiosError(err) && err.response) {\n        const response = err.response.data as BackendErrorResponse;\n        if (response.errors?.emails) {\n          toast.danger(response.errors?.emails[0]);\n        } else {\n          showHttpErrorToast(err);\n        }\n      }\n    },\n  });\n}\n","import {FileEntry} from '../../common/uploads/file-entry';\n\nexport interface DriveEntry extends FileEntry {\n  users: DriveEntryUser[];\n  workspace_id?: number;\n  permissions: {\n    'files.update': boolean;\n    'files.delete': boolean;\n    'files.download': boolean;\n  };\n}\n\nexport interface DriveFolder extends DriveEntry {\n  type: 'folder';\n  model_type?: string;\n}\n\nexport interface DriveEntryUser {\n  id: number;\n  email: string;\n  display_name: string;\n  avatar?: string;\n  owns_entry: boolean;\n  entry_permissions: DriveEntryPermissions;\n}\n\nexport interface DriveEntryPermissions {\n  edit?: boolean;\n  view?: boolean;\n  download?: boolean;\n}\n\nexport const DRIVE_ENTRY_FULL_PERMISSIONS = {\n  edit: true,\n  view: true,\n  download: true,\n};\n","import {Button} from '../../common/ui/buttons/button';\nimport {ArrowDropDownIcon} from '../../common/icons/material/ArrowDropDown';\nimport {\n  DRIVE_ENTRY_FULL_PERMISSIONS,\n  DriveEntryPermissions,\n  DriveEntryUser,\n} from '../files/drive-entry';\nimport {\n  Menu,\n  MenuItem,\n  MenuTrigger,\n} from '../../common/ui/navigation/menu/menu-trigger';\nimport {message} from '../../common/i18n/message';\nimport {Trans} from '../../common/i18n/trans';\nimport {MessageDescriptor} from '../../common/i18n/message-descriptor';\n\nexport interface PermissionSelectorItem {\n  key: keyof DriveEntryPermissions;\n  value: DriveEntryPermissions;\n  label: MessageDescriptor;\n}\n\nexport const PermissionSelectorItems: PermissionSelectorItem[] = [\n  {\n    key: 'view',\n    value: {view: true},\n    label: message('Can view'),\n  },\n  {\n    key: 'download',\n    value: {view: true, download: true},\n    label: message('Can Download'),\n  },\n  {\n    key: 'edit',\n    value: DRIVE_ENTRY_FULL_PERMISSIONS,\n    label: message('Can edit'),\n  },\n];\n\ninterface Props {\n  onChange: (value: PermissionSelectorItem) => void;\n  value: PermissionSelectorItem;\n}\nexport function PermissionSelector({value, onChange}: Props) {\n  return (\n    <MenuTrigger\n      selectedValue={value.key}\n      selectionMode=\"single\"\n      onSelectionChange={key => {\n        if (key !== value.key) {\n          onChange(PermissionSelectorItems.find(p => p.key === key)!);\n        }\n      }}\n    >\n      <Button\n        variant=\"flat\"\n        color=\"chip\"\n        size=\"xs\"\n        endIcon={<ArrowDropDownIcon />}\n      >\n        <Trans {...value.label} />\n      </Button>\n      <Menu>\n        {PermissionSelectorItems.map(item => {\n          return (\n            <MenuItem key={item.key} value={item.key}>\n              <Trans {...item.label} />\n            </MenuItem>\n          );\n        })}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n\nexport function getPermissionItemForUser(\n  user: DriveEntryUser\n): PermissionSelectorItem {\n  const {download, edit} = user.entry_permissions;\n  if (edit) {\n    return PermissionSelectorItems.find(item => item.key === 'edit')!;\n  }\n  if (download) {\n    return PermissionSelectorItems.find(item => item.key === 'download')!;\n  }\n  return PermissionSelectorItems.find(item => item.key === 'view')!;\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {DriveEntryPermissions} from '../../files/drive-entry';\nimport {apiClient} from '../../../common/http/query-client';\nimport {toast} from '../../../common/ui/toast/toast';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '../../../common/i18n/message';\nimport {BackendResponse} from '../../../common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '../../../common/utils/http/show-http-error-toast';\n\nexport interface ChangePermissionsPayload {\n  userId: number;\n  permissions: DriveEntryPermissions;\n  entryId: number;\n}\n\nexport function useChangePermission() {\n  return useMutation(\n    (payload: ChangePermissionsPayload) => changePermission(payload),\n    {\n      onSuccess: () => {\n        invalidateEntryQueries();\n        toast(message('Updated user permissions'));\n      },\n      onError: err =>\n        showHttpErrorToast(err, message('Could not update permissions')),\n    }\n  );\n}\n\nfunction changePermission({\n  entryId,\n  ...payload\n}: ChangePermissionsPayload): Promise<BackendResponse> {\n  return apiClient\n    .put(`file-entries/${entryId}/change-permissions`, payload)\n    .then(response => response.data);\n}\n","import {useState} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport clsx from 'clsx';\nimport {DriveEntry, DriveEntryUser} from '../files/drive-entry';\nimport {\n  getPermissionItemForUser,\n  PermissionSelector,\n  PermissionSelectorItem,\n} from './permission-selector';\nimport {IconButton} from '../../common/ui/buttons/icon-button';\nimport {CloseIcon} from '../../common/icons/material/Close';\nimport {useChangePermission} from './queries/use-change-permission';\nimport {useUnshareEntries} from './queries/use-unshare-entries';\nimport {Trans} from '../../common/i18n/trans';\nimport {toast} from '../../common/ui/toast/toast';\nimport {message} from '../../common/i18n/message';\nimport {showHttpErrorToast} from '../../common/utils/http/show-http-error-toast';\n\ninterface MemberListProps {\n  className?: string;\n  entry: DriveEntry;\n}\n\nexport function MemberList({className, entry}: MemberListProps) {\n  if (!entry) return null;\n\n  const users = entry.users;\n\n  return (\n    <div className={clsx(className, 'overflow-hidden')}>\n      <div className=\"mb-14 text-sm\">\n        <Trans message=\"Who has access\" />\n      </div>\n      <AnimatePresence initial={false}>\n        {users.map(user => {\n          return <MemberListItem key={user.id} user={user} entry={entry} />;\n        })}\n      </AnimatePresence>\n    </div>\n  );\n}\n\ninterface MemberListItemProps {\n  user: DriveEntryUser;\n  entry: DriveEntry;\n}\nfunction MemberListItem({user, entry}: MemberListItemProps) {\n  return (\n    <m.div\n      initial={{x: '-100%', opacity: 0}}\n      animate={{x: 0, opacity: 1}}\n      exit={{x: '100%', opacity: 0}}\n      transition={{type: 'tween', duration: 0.125}}\n      className=\"flex items-center text-sm gap-14 mb-20\"\n      key={user.id}\n    >\n      <img\n        src={user.avatar}\n        className=\"rounded-full w-44 h-44 flex-shrink-0\"\n        alt=\"\"\n      />\n      <div>\n        <div>{user.display_name}</div>\n        <div className=\"text-muted\">{user.email}</div>\n      </div>\n      <div className=\"ml-auto\">\n        {user.owns_entry ? (\n          <span className=\"text-muted\">\n            <Trans message=\"Owner\" />\n          </span>\n        ) : (\n          <ActionButtons user={user} entry={entry} />\n        )}\n      </div>\n    </m.div>\n  );\n}\n\ninterface ActionButtonsProps {\n  user: DriveEntryUser;\n  entry: DriveEntry;\n}\nfunction ActionButtons({user, entry}: ActionButtonsProps) {\n  const changePermissions = useChangePermission();\n  const unshareEntry = useUnshareEntries();\n  const [activePermission, setActivePermission] =\n    useState<PermissionSelectorItem>(() => {\n      return getPermissionItemForUser(user);\n    });\n\n  return (\n    <div className=\"flex items-center gap-10\">\n      <PermissionSelector\n        onChange={item => {\n          changePermissions.mutate({\n            userId: user.id,\n            permissions: item.value,\n            entryId: entry.id,\n          });\n          setActivePermission(item);\n        }}\n        value={activePermission}\n      />\n      <IconButton\n        onClick={() => {\n          unshareEntry.mutate(\n            {userId: user.id, entryIds: [entry.id]},\n            {\n              onSuccess: () => {\n                toast(message('Member removed'));\n              },\n              onError: err =>\n                showHttpErrorToast(err, message('Could not remove member')),\n            }\n          );\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </div>\n  );\n}\n","import {useState} from 'react';\nimport {Button} from '../../common/ui/buttons/button';\nimport {useShareEntry} from './queries/use-share-entry';\nimport {\n  PermissionSelector,\n  PermissionSelectorItem,\n  PermissionSelectorItems,\n} from './permission-selector';\nimport {MemberList} from './member-list';\nimport {\n  ChipField,\n  ChipValue,\n} from '../../common/ui/forms/input-field/chip-field/chip-field';\nimport {Avatar} from '../../common/ui/images/avatar';\nimport {useTrans} from '../../common/i18n/use-trans';\nimport {Trans} from '../../common/i18n/trans';\nimport {DriveEntry} from '../files/drive-entry';\nimport {Item} from '../../common/ui/forms/listbox/item';\nimport {isEmail} from '../../common/utils/string/is-email';\nimport {USER_MODEL} from '../../common/auth/user';\nimport {useNormalizedModels} from '../../common/users/queries/use-normalized-models';\nimport {useSettings} from '../../common/core/settings/use-settings';\n\ninterface SharePanelProps {\n  className?: string;\n  entry: DriveEntry;\n}\nexport function SharePanel({className, entry}: SharePanelProps) {\n  const {trans} = useTrans();\n  const {share} = useSettings();\n  const shareEntry = useShareEntry();\n  const [chips, setChips] = useState<ChipValue[]>([]);\n  const [isSharing, setIsSharing] = useState(false);\n  const [selectedPermission, setSelectedPermission] =\n    useState<PermissionSelectorItem>(PermissionSelectorItems[0]);\n  const allEmailsValid = chips.every(chip => !chip.invalid);\n  const [inputValue, setInputValue] = useState('');\n  const query = useNormalizedModels(\n    USER_MODEL,\n    {perPage: 7, query: inputValue},\n    {enabled: share.suggest_emails}\n  );\n\n  // show user's email, instead of name in the chip\n  const displayWith = (chip: ChipValue) => chip.description || chip.name;\n\n  return (\n    <div className={className}>\n      <ChipField\n        value={chips}\n        onChange={setChips}\n        isAsync\n        isLoading={query.fetchStatus === 'fetching'}\n        inputValue={inputValue}\n        onInputValueChange={setInputValue}\n        suggestions={query.data?.results}\n        displayWith={displayWith}\n        validateWith={chip => {\n          const invalid = !isEmail(chip.description);\n          return {\n            ...chip,\n            invalid,\n            errorMessage: invalid\n              ? trans({message: 'Not a valid email'})\n              : undefined,\n          };\n        }}\n        placeholder={trans({message: 'Enter email addresses'})}\n        label={<Trans message=\"Invite people\" />}\n      >\n        {user => (\n          <Item\n            value={user.id}\n            startIcon={<Avatar circle src={user.image} alt=\"\" />}\n            description={user.description}\n          >\n            {user.name}\n          </Item>\n        )}\n      </ChipField>\n      <div className=\"flex items-center gap-14 justify-between mt-14\">\n        <PermissionSelector\n          onChange={setSelectedPermission}\n          value={selectedPermission}\n        />\n        {chips.length ? (\n          <Button\n            variant=\"flat\"\n            color=\"primary\"\n            size=\"sm\"\n            disabled={isSharing || !allEmailsValid}\n            onClick={() => {\n              setIsSharing(true);\n              shareEntry.mutate(\n                {\n                  emails: chips.map(c => displayWith(c)),\n                  permissions: selectedPermission.value,\n                  entryId: entry.id,\n                },\n                {\n                  onSuccess: () => {\n                    setChips([]);\n                  },\n                  onSettled: () => {\n                    setIsSharing(false);\n                  },\n                }\n              );\n            }}\n          >\n            <Trans message=\"Share\" />\n          </Button>\n        ) : null}\n      </div>\n      <MemberList className=\"mt-30\" entry={entry} />\n    </div>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {ShareableLink} from '../shareable-link';\nimport {BackendResponse} from '../../../common/http/backend-response/backend-response';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {apiClient} from '../../../common/http/query-client';\n\nexport interface FetchShareableLinkResponse extends BackendResponse {\n  link: ShareableLink | null;\n}\n\nexport function useEntryShareableLink(entryId: number) {\n  return useQuery(\n    DriveQueryKeys.fetchEntryShareableLink(entryId!),\n    () => fetchLinkByEntryId(entryId!),\n    {enabled: !!entryId}\n  );\n}\n\nfunction fetchLinkByEntryId(\n  entryId: number\n): Promise<FetchShareableLinkResponse> {\n  return apiClient\n    .get(`file-entries/${entryId}/shareable-link`)\n    .then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '../../../common/http/query-client';\nimport {FetchShareableLinkResponse} from './use-entry-shareable-link';\nimport {BackendResponse} from '../../../common/http/backend-response/backend-response';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {message} from '../../../common/i18n/message';\nimport {showHttpErrorToast} from '../../../common/utils/http/show-http-error-toast';\n\ninterface DeleteLinkParams {\n  entryId: number;\n}\n\nfunction deleteShareableLink({\n  entryId,\n}: DeleteLinkParams): Promise<BackendResponse> {\n  return apiClient\n    .delete(`file-entries/${entryId}/shareable-link`)\n    .then(r => r.data);\n}\n\ninterface Payload {\n  entryId: number;\n}\nexport function useDeleteShareableLink() {\n  return useMutation(({entryId}: Payload) => deleteShareableLink({entryId}), {\n    onSuccess: (response, {entryId}) => {\n      queryClient.setQueryData<FetchShareableLinkResponse>(\n        DriveQueryKeys.fetchEntryShareableLink(entryId),\n        {...response, link: null}\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not delete link')),\n  });\n}\n","import useClipboard from 'react-use-clipboard';\nimport {useEntryShareableLink} from '../../shareable-link/queries/use-entry-shareable-link';\nimport {useCreateShareableLink} from '../../shareable-link/queries/create-shareable-link';\nimport {useDeleteShareableLink} from '../../shareable-link/queries/use-delete-shareable-link';\nimport {Button} from '../../../common/ui/buttons/button';\nimport {ShareableLink} from '../../shareable-link/shareable-link';\nimport {TextField} from '../../../common/ui/forms/input-field/text-field/text-field';\nimport type {ShareDialogActivePanel} from '../share-dialog';\nimport {Switch} from '../../../common/ui/forms/toggle/switch';\nimport {randomString} from '../../../common/utils/string/random-string';\nimport {Trans} from '../../../common/i18n/trans';\nimport {useTrans} from '../../../common/i18n/use-trans';\nimport {useActiveDialogEntry} from '../../drive-store';\nimport {DriveEntry} from '../../files/drive-entry';\nimport {useSettings} from '../../../common/core/settings/use-settings';\n\ninterface ShareableLinkPanelProps {\n  setActivePanel: (name: ShareDialogActivePanel) => void;\n  entry: DriveEntry;\n  focusInput?: boolean;\n}\nexport function ShareableLinkPanel({\n  setActivePanel,\n  entry,\n  focusInput,\n}: ShareableLinkPanelProps) {\n  const query = useEntryShareableLink(entry.id);\n  const linkExists = !!query.data?.link;\n  const createLink = useCreateShareableLink();\n  const deleteLink = useDeleteShareableLink();\n  const isLoading =\n    query.isLoading || createLink.isLoading || deleteLink.isLoading;\n  return (\n    <div>\n      <div className=\"mb-10\">\n        <Trans message=\"Share link\" />\n      </div>\n      <div className=\"flex items-center gap-14 justify-between pb-4 px-2\">\n        <Switch\n          checked={linkExists}\n          disabled={isLoading}\n          onChange={() => {\n            if (linkExists) {\n              deleteLink.mutate({entryId: entry.id});\n            } else {\n              createLink.mutate({entryId: entry.id});\n            }\n          }}\n        >\n          {linkExists ? (\n            <Trans message=\"Shareable link is created\" />\n          ) : (\n            <Trans message=\"Create shareable link\" />\n          )}\n        </Switch>\n        {linkExists && (\n          <Button\n            variant=\"link\"\n            color=\"primary\"\n            onClick={() => {\n              setActivePanel('linkSettings');\n            }}\n          >\n            <Trans message=\"Link settings\" />\n          </Button>\n        )}\n      </div>\n      <ShareableLinkInput autoFocus={focusInput} link={query.data?.link} />\n    </div>\n  );\n}\n\ninterface ShareableLinkInputProps {\n  link?: ShareableLink | null;\n  autoFocus?: boolean;\n}\nfunction ShareableLinkInput({link, autoFocus}: ShareableLinkInputProps) {\n  const {base_url} = useSettings();\n  const {trans} = useTrans();\n  const entry = useActiveDialogEntry();\n  const hash = link?.hash || entry?.hash || randomString();\n  const linkUrl = `${base_url}/drive/s/${hash}`;\n  const [isCopied, setCopied] = useClipboard(linkUrl, {\n    successDuration: 1000,\n  });\n  return (\n    <TextField\n      autoFocus={autoFocus}\n      disabled={!link}\n      className=\"mt-10\"\n      readOnly\n      value={linkUrl}\n      aria-label={trans({message: 'Shareable link'})}\n      onFocus={e => {\n        (e.target as HTMLInputElement).select();\n      }}\n      endAppend={\n        <Button\n          className=\"min-w-100\"\n          variant=\"flat\"\n          color=\"primary\"\n          onClick={setCopied}\n        >\n          {isCopied ? <Trans message=\"Copied!\" /> : <Trans message=\"Copy\" />}\n        </Button>\n      }\n    />\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {apiClient, queryClient} from '../../../common/http/query-client';\nimport {FetchShareableLinkResponse} from './use-entry-shareable-link';\nimport {onFormQueryError} from '../../../common/errors/on-form-query-error';\nimport {DriveQueryKeys} from '../../drive-query-keys';\n\nexport interface UpdateShareableLinkPayload {\n  allowEdit: boolean;\n  allowDownload: boolean;\n  expiresAt: string;\n  password: string;\n  entryId: number;\n}\n\nfunction updateShareableLink({\n  entryId,\n  ...payload\n}: UpdateShareableLinkPayload): Promise<FetchShareableLinkResponse> {\n  return apiClient\n    .put(`file-entries/${entryId}/shareable-link`, payload)\n    .then(response => response.data);\n}\n\nexport function useUpdateShareableLink(\n  form: UseFormReturn<UpdateShareableLinkPayload>\n) {\n  return useMutation(\n    (payload: UpdateShareableLinkPayload) => updateShareableLink(payload),\n    {\n      onSuccess: (data, {entryId}) => {\n        queryClient.setQueryData<FetchShareableLinkResponse>(\n          DriveQueryKeys.fetchEntryShareableLink(entryId),\n          data\n        );\n      },\n      onError: r => onFormQueryError(r, form),\n    }\n  );\n}\n","import {useForm} from 'react-hook-form';\nimport {Fragment, ReactElement, useState} from 'react';\nimport clsx from 'clsx';\nimport {m} from 'framer-motion';\nimport {getLocalTimeZone, now} from '@internationalized/date';\nimport {Button} from '../../../common/ui/buttons/button';\nimport {FormTextField} from '../../../common/ui/forms/input-field/text-field/text-field';\nimport {DialogFooter} from '../../../common/ui/overlays/dialog/dialog-footer';\nimport type {ShareDialogActivePanel} from '../share-dialog';\nimport {useEntryShareableLink} from '../../shareable-link/queries/use-entry-shareable-link';\nimport {Form} from '../../../common/ui/forms/form';\nimport {\n  UpdateShareableLinkPayload,\n  useUpdateShareableLink,\n} from '../../shareable-link/queries/use-update-shareable-link';\nimport {FormSwitch, Switch} from '../../../common/ui/forms/toggle/switch';\nimport {toast} from '../../../common/ui/toast/toast';\nimport {useDialogContext} from '../../../common/ui/overlays/dialog/dialog-context';\nimport {DialogHeader} from '../../../common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../../../common/ui/overlays/dialog/dialog-body';\nimport {FormDatePicker} from '../../../common/ui/forms/input-field/date/date-picker/date-picker';\nimport {useTrans} from '../../../common/i18n/use-trans';\nimport {Trans} from '../../../common/i18n/trans';\nimport {message} from '../../../common/i18n/message';\nimport {FileEntry} from '../../../common/uploads/file-entry';\n\ninterface LinkSettingsDialogProps {\n  className?: string;\n  setActivePanel: (name: ShareDialogActivePanel) => void;\n  entry: FileEntry;\n}\nexport function LinkSettingsDialog({\n  className,\n  setActivePanel,\n  entry,\n}: LinkSettingsDialogProps) {\n  const {formId} = useDialogContext();\n  const {data} = useEntryShareableLink(entry.id);\n  const link = data?.link;\n  const form = useForm<UpdateShareableLinkPayload>({\n    defaultValues: {\n      allowDownload: link?.allow_download,\n      allowEdit: link?.allow_edit,\n      expiresAt: link?.expires_at,\n      entryId: entry.id,\n    },\n  });\n  const updateLink = useUpdateShareableLink(form);\n\n  return (\n    <Fragment>\n      <DialogHeader\n        onDismiss={() => {\n          setActivePanel('main');\n        }}\n      >\n        <Trans message=\"Shareable Link Settings\" />\n      </DialogHeader>\n      <DialogBody>\n        <m.div\n          key=\"link-settings-content\"\n          className=\"min-h-[335px]\"\n          animate={{opacity: 1, y: 0}}\n          initial={{opacity: 0, y: 20}}\n          exit={{opacity: 0, y: -20}}\n          transition={{duration: 0.1}}\n        >\n          <Form\n            id={formId}\n            className={className}\n            form={form}\n            onSubmit={value => {\n              updateLink.mutate(value, {\n                onSuccess: () => {\n                  setActivePanel('main');\n                  toast(message('Link settings saved'));\n                },\n              });\n            }}\n          >\n            <LinkExpirationOption showField={!!link?.expires_at} />\n            <LinkPasswordOption showField={!!link?.password} />\n            <LinkOption>\n              <Trans message=\"Allow download\" />\n              <FormSwitch name=\"allowDownload\">\n                <Trans message=\"Users with link can download this item\" />\n              </FormSwitch>\n            </LinkOption>\n            <LinkOption showBorder={false}>\n              <Trans message=\"Allow import\" />\n              <FormSwitch name=\"allowEdit\">\n                <Trans message=\"Users with link can import this item into their own drive\" />\n              </FormSwitch>\n            </LinkOption>\n          </Form>\n        </m.div>\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          type=\"button\"\n          onClick={() => {\n            setActivePanel('main');\n          }}\n        >\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          type=\"submit\"\n          form={formId}\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={updateLink.isLoading}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Fragment>\n  );\n}\n\nconst minDate = now(getLocalTimeZone());\n\ninterface LinkExpirationOptionProps {\n  showField: boolean;\n}\nfunction LinkExpirationOption({\n  showField: showFieldDefault,\n}: LinkExpirationOptionProps) {\n  const {trans} = useTrans();\n  const [showField, setShowField] = useState(showFieldDefault);\n  return (\n    <LinkOption>\n      <Trans message=\"Link expiration\" />\n      <div>\n        <Switch\n          checked={showField}\n          onChange={e => {\n            setShowField(e.target.checked);\n          }}\n        >\n          <Trans message=\"Link is valid until\" />\n        </Switch>\n        {showField && (\n          <FormDatePicker\n            min={minDate}\n            name=\"expiresAt\"\n            granularity=\"minute\"\n            className=\"mt-20\"\n            aria-label={trans({\n              message: 'Link expiration date and time',\n            })}\n          />\n        )}\n      </div>\n    </LinkOption>\n  );\n}\n\ninterface LinkPasswordOptionProps {\n  showField: boolean;\n}\nfunction LinkPasswordOption({\n  showField: showFieldDefault,\n}: LinkPasswordOptionProps) {\n  const {trans} = useTrans();\n  const [showField, setShowField] = useState(showFieldDefault);\n  return (\n    <LinkOption>\n      <Trans message=\"Password protect\" />\n      <div>\n        <Switch\n          checked={showField}\n          onChange={e => {\n            setShowField(e.target.checked);\n          }}\n        >\n          <Trans message=\"Users will need to enter password in order to view this link\" />\n        </Switch>\n        {showField && (\n          <FormTextField\n            type=\"password\"\n            autoFocus\n            name=\"password\"\n            className=\"mt-20\"\n            aria-label={trans({message: 'Link password'})}\n            placeholder={trans({\n              message: 'Enter new password...',\n            })}\n          />\n        )}\n      </div>\n    </LinkOption>\n  );\n}\n\ninterface LinkOptionProps {\n  children: [ReactElement, ReactElement];\n  showBorder?: boolean;\n}\nfunction LinkOption({children, showBorder = true}: LinkOptionProps) {\n  const [title, content] = children;\n  return (\n    <div className={clsx(showBorder && 'border-b mb-20 pb-20')}>\n      <div className=\"text-sm font-medium mb-8\">{title}</div>\n      {content}\n    </div>\n  );\n}\n","import {Fragment, useState} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {SharePanel} from './share-panel';\nimport {ShareableLinkPanel} from './link-panel/shareable-link-panel';\nimport {LinkSettingsDialog} from './link-panel/link-settings-dialog';\nimport {Dialog} from '../../common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../../common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../../common/ui/overlays/dialog/dialog-body';\nimport {Trans} from '../../common/i18n/trans';\nimport {DriveEntry} from '../files/drive-entry';\nimport {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '../../common/http/query-client';\nimport {DriveQueryKeys} from '../drive-query-keys';\n\nexport type ShareDialogActivePanel = 'main' | 'linkSettings';\n\ninterface ShareDialogProps {\n  entry: DriveEntry;\n  focusLinkInput?: boolean;\n}\nexport function ShareDialog({\n  entry: initialEntry,\n  focusLinkInput,\n}: ShareDialogProps) {\n  const {\n    data: {fileEntry},\n  } = useQuery(\n    DriveQueryKeys.fetchFileEntry(initialEntry.id),\n    () => {\n      return apiClient\n        .get(`drive/file-entries/${initialEntry.id}/model`)\n        .then(response => response.data as {fileEntry: DriveEntry});\n    },\n    {\n      initialData: {fileEntry: initialEntry},\n    }\n  );\n\n  const [activePanel, setActivePanel] =\n    useState<ShareDialogActivePanel>('main');\n\n  return (\n    <Dialog size=\"lg\">\n      <AnimatePresence initial={false} mode=\"wait\">\n        {activePanel === 'linkSettings' ? (\n          <LinkSettingsDialog\n            key=\"one\"\n            setActivePanel={setActivePanel}\n            entry={fileEntry}\n          />\n        ) : (\n          <MainDialog\n            key=\"two\"\n            setActivePanel={setActivePanel}\n            entry={fileEntry}\n            focusLinkInput={focusLinkInput}\n          />\n        )}\n      </AnimatePresence>\n    </Dialog>\n  );\n}\n\ninterface MainDialogProps {\n  setActivePanel: (name: ShareDialogActivePanel) => void;\n  entry: DriveEntry;\n  focusLinkInput?: boolean;\n}\nfunction MainDialog({setActivePanel, entry, focusLinkInput}: MainDialogProps) {\n  return (\n    <Fragment>\n      <DialogHeader>\n        <Trans message=\"Share ‘:name’\" values={{name: entry.name}} />\n      </DialogHeader>\n      <DialogBody className=\"relative\">\n        <m.div\n          key=\"share-content\"\n          animate={{opacity: 1, y: 0}}\n          initial={{opacity: 0, y: 20}}\n          exit={{opacity: 0, y: -20}}\n          transition={{duration: 0.1}}\n        >\n          <SharePanel className=\"border-b pb-30 mb-30\" entry={entry} />\n          <ShareableLinkPanel\n            setActivePanel={setActivePanel}\n            entry={entry}\n            focusInput={!!focusLinkInput}\n          />\n        </m.div>\n      </DialogBody>\n    </Fragment>\n  );\n}\n","import React from 'react';\nimport {SearchIcon} from '../../../../common/icons/material/Search';\nimport {ComboBox} from '../../../../common/ui/forms/combobox/combobox';\nimport {Item} from '../../../../common/ui/forms/listbox/item';\nimport {useTrans} from '../../../../common/i18n/use-trans';\nimport {PartialFolder} from '../../utils/can-move-entries-into';\n\ninterface SearchComboBoxProps {\n  allFolders: PartialFolder[];\n  onFolderSelected: (folder: PartialFolder) => void;\n}\nexport function MoveEntriesDialogSearch({\n  allFolders,\n  onFolderSelected,\n}: SearchComboBoxProps) {\n  const {trans} = useTrans();\n  const searchLabel = trans({message: 'Search folders'});\n  return (\n    <ComboBox\n      size=\"sm\"\n      maxItems={10}\n      placeholder={searchLabel}\n      aria-label={searchLabel}\n      className=\"pt-20\"\n      endAdornmentIcon={<SearchIcon />}\n      items={allFolders}\n      clearInputOnItemSelection\n      onItemSelected={value => {\n        const folderId = parseInt(value as string);\n        const folder = allFolders.find(f => f.id === folderId);\n        if (folder) {\n          onFolderSelected(folder);\n        }\n      }}\n    >\n      {item => (\n        <Item key={item.id} value={item.id}>\n          {item.name}\n        </Item>\n      )}\n    </ComboBox>\n  );\n}\n","import React from 'react';\nimport {IconButton} from '../../../../common/ui/buttons/icon-button';\nimport {ArrowBackIcon} from '../../../../common/icons/material/ArrowBack';\nimport {Breadcrumb} from '../../../../common/ui/breadcrumbs/breadcrumb';\nimport {FolderIcon} from '../../../../common/icons/material/Folder';\nimport {\n  BreadcrumbItem\n} from '../../../../common/ui/breadcrumbs/breadcrumb-item';\nimport {PartialFolder} from '../../utils/can-move-entries-into';\n\ninterface FolderBreadCrumbsProps {\n  selectedFolder: PartialFolder;\n  allFolders: PartialFolder[];\n  rootFolder: PartialFolder;\n  onFolderSelected: (folder: PartialFolder) => void;\n}\nexport function MoveEntriesDialogBreadcrumbs({\n  selectedFolder,\n  allFolders,\n  rootFolder,\n  onFolderSelected,\n}: FolderBreadCrumbsProps) {\n  const path: PartialFolder[] = selectedFolder.path\n    .split('/')\n    .map(part => {\n      const folderId = parseInt(part);\n      return allFolders.find(folder => folderId === folder.id);\n    })\n    .filter(f => !!f) as PartialFolder[];\n  const fullPath: PartialFolder[] = [rootFolder, ...path];\n\n  const previous = path[path.length - 2];\n\n  return (\n    <div className=\"flex items-center border-b pb-10 gap-6\">\n      <IconButton\n        className=\"flex-shrink-0\"\n        variant=\"outline\"\n        size=\"xs\"\n        radius=\"rounded\"\n        disabled={!previous && !selectedFolder.id}\n        onClick={() => {\n          onFolderSelected(previous || rootFolder);\n        }}\n      >\n        <ArrowBackIcon />\n      </IconButton>\n      <Breadcrumb size=\"sm\" className=\"flex-auto\">\n        {fullPath.map(item => {\n          return (\n            <BreadcrumbItem\n              onSelected={() => {\n                onFolderSelected(item);\n              }}\n              key={item.id || 'root'}\n              className=\"flex items-center gap-8\"\n            >\n              {!item.id && <FolderIcon className=\"icon-sm\" />}\n              {item.name}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </div>\n  );\n}\n","export default \"__VITE_ASSET__88476671__\"","import React, {useMemo} from 'react';\nimport {\n  IllustratedMessage\n} from '../../../../common/ui/images/illustrated-message';\nimport {SvgImage} from '../../../../common/ui/images/svg-image/svg-image';\nimport {\n  FileTypeIcon\n} from '../../../../common/uploads/file-type-icon/file-type-icon';\nimport {ChevronRightIcon} from '../../../../common/icons/material/ChevronRight';\nimport {Trans} from '../../../../common/i18n/trans';\nimport {List, ListItem} from '../../../../common/ui/list/list';\nimport myFilesSvg from './my-files.svg';\nimport {PartialFolder} from '../../utils/can-move-entries-into';\n\ninterface FolderListProps {\n  selectedFolder: PartialFolder;\n  allFolders: PartialFolder[];\n  onFolderSelected: (folder: PartialFolder) => void;\n}\n\nexport function MoveEntriesDialogFolderList(props: FolderListProps) {\n  const {onFolderSelected, selectedFolder, allFolders} = props;\n\n  const subFolders = useMemo(() => {\n    const parentId = selectedFolder.id || null;\n    return allFolders.filter(f => f.parent_id === parentId);\n  }, [selectedFolder.id, allFolders]);\n\n  if (!subFolders.length) {\n    return (\n      <IllustratedMessage\n        size=\"xs\"\n        className=\"pt-64 pb-20 min-h-288\"\n        image={<SvgImage src={myFilesSvg} />}\n        title={\n          <Trans\n            message={`There are no subfolders in \":folder\"`}\n            values={{folder: selectedFolder.name}}\n          />\n        }\n      />\n    );\n  }\n\n  return (\n    <List className=\"h-288 overflow-y-auto\">\n      {subFolders.map(folder => {\n        return (\n          <ListItem\n            className=\"border-b min-h-48\"\n            key={folder.id}\n            onSelected={() => {\n              onFolderSelected(folder);\n            }}\n            startIcon={<FileTypeIcon type=\"folder\" />}\n            endIcon={<ChevronRightIcon size=\"md\" />}\n          >\n            {folder.name}\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n","import React, {useState} from 'react';\nimport {Button} from '../../../../common/ui/buttons/button';\nimport {useFolders} from '../../queries/use-folders';\nimport {useMoveEntries} from '../../queries/use-move-entries';\nimport {NewFolderDialog} from '../new-folder-dialog';\nimport {CreateNewFolderIcon} from '../../../../common/icons/material/CreateNewFolder';\nimport {MoveEntriesDialogSearch} from './move-entries-dialog-search';\nimport {MoveEntriesDialogBreadcrumbs} from './move-entries-dialog-breadcrumbs';\nimport {MoveEntriesDialogFolderList} from './move-entries-dialog-folder-list';\nimport {DialogTrigger} from '../../../../common/ui/overlays/dialog/dialog-trigger';\nimport {DialogFooter} from '../../../../common/ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '../../../../common/ui/overlays/dialog/dialog-context';\nimport {Dialog} from '../../../../common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../../../../common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../../../../common/ui/overlays/dialog/dialog-body';\nimport {Trans} from '../../../../common/i18n/trans';\nimport {RootFolderPage} from '../../../drive-page/drive-page';\nimport {DriveEntry} from '../../drive-entry';\nimport {useDriveStore} from '../../../drive-store';\nimport {useIsMobileMediaQuery} from '../../../../common/utils/hooks/is-mobile-media-query';\nimport {\n  canMoveEntriesInto,\n  PartialFolder,\n} from '../../utils/can-move-entries-into';\n\ninterface MoveEntriesDialogProps {\n  entries: DriveEntry[];\n}\nexport function MoveEntriesDialog({entries}: MoveEntriesDialogProps) {\n  const {data} = useFolders();\n  const allFolders = data?.folders || [];\n  const activePage = useDriveStore(s => s.activePage);\n  const [selectedFolder, setSelectedFolder] = useState<PartialFolder>(\n    activePage?.folder || RootFolderPage.folder\n  );\n\n  return (\n    <Dialog size=\"lg\">\n      <DialogHeader>\n        <Trans\n          message=\"Move [one ‘:name‘|other :count items]\"\n          values={{\n            count: entries.length,\n            name: entries[0].name,\n          }}\n        />\n      </DialogHeader>\n      <DialogBody>\n        <div className=\"text-sm\">\n          <Trans message=\"Select a destination folder.\" />\n        </div>\n        <MoveEntriesDialogSearch\n          allFolders={allFolders}\n          onFolderSelected={setSelectedFolder}\n        />\n        <div className=\"mt-40 mb-20\">\n          <MoveEntriesDialogBreadcrumbs\n            selectedFolder={selectedFolder}\n            allFolders={allFolders}\n            rootFolder={RootFolderPage.folder}\n            onFolderSelected={setSelectedFolder}\n          />\n          <MoveEntriesDialogFolderList\n            selectedFolder={selectedFolder}\n            allFolders={allFolders}\n            onFolderSelected={setSelectedFolder}\n          />\n        </div>\n      </DialogBody>\n      <Footer\n        selectedFolder={selectedFolder}\n        setSelectedFolder={setSelectedFolder}\n        entries={entries}\n      />\n    </Dialog>\n  );\n}\n\ninterface FooterProps {\n  selectedFolder: PartialFolder;\n  setSelectedFolder: (folder: PartialFolder) => void;\n  entries: DriveEntry[];\n}\nfunction Footer({selectedFolder, setSelectedFolder, entries}: FooterProps) {\n  const {close} = useDialogContext();\n  const isMobile = useIsMobileMediaQuery();\n  const moveEntries = useMoveEntries();\n  return (\n    <DialogFooter\n      className=\"border-t\"\n      startAction={\n        <DialogTrigger\n          type=\"modal\"\n          onClose={folder => {\n            if (folder) {\n              setSelectedFolder(folder);\n            }\n          }}\n        >\n          <Button startIcon={<CreateNewFolderIcon />} variant=\"text\">\n            <Trans message=\"New Folder\" />\n          </Button>\n          <NewFolderDialog parentId={selectedFolder.id} />\n        </DialogTrigger>\n      }\n    >\n      {!isMobile && (\n        <Button variant=\"flat\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n      )}\n      <Button\n        type=\"submit\"\n        variant=\"flat\"\n        color=\"primary\"\n        disabled={\n          !canMoveEntriesInto(entries, selectedFolder) || moveEntries.isLoading\n        }\n        onClick={() => {\n          moveEntries.mutate(\n            {\n              destinationId: selectedFolder.id,\n              entryIds: entries.map(e => e.id),\n            },\n            {onSuccess: close}\n          );\n        }}\n      >\n        <Trans message=\"Move here\" />\n      </Button>\n    </DialogFooter>\n  );\n}\n","import React, {ReactElement} from 'react';\nimport {ActiveActionDialog, driveState, useDriveStore} from '../../drive-store';\nimport {RenameEntryDialog} from './rename-entry-dialog';\nimport {NewFolderDialog} from './new-folder-dialog';\nimport {EntryPreviewDialog} from './entry-preview-dialog';\nimport {ShareDialog} from '../../share-dialog/share-dialog';\nimport {MoveEntriesDialog} from './move-entries-dialog/move-entries-dialog';\nimport {DialogTrigger} from '../../../common/ui/overlays/dialog/dialog-trigger';\n\nexport function DriveDialogsContainer() {\n  const activeDialog = useDriveStore(s => s.activeActionDialog);\n  const dialog = getDialog(activeDialog);\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      isOpen={!!dialog}\n      onClose={() => {\n        driveState().setActiveActionDialog(null);\n      }}\n    >\n      {dialog}\n    </DialogTrigger>\n  );\n}\n\nfunction getDialog(dialog?: ActiveActionDialog | null): ReactElement | null {\n  switch (dialog?.name) {\n    case 'rename':\n      return <RenameEntryDialog entries={dialog.entries} />;\n    case 'newFolder':\n      return <NewFolderDialog parentId={dialog.entries[0]?.id} />;\n    case 'preview':\n      return <EntryPreviewDialog selectedEntry={dialog.entries[0]} />;\n    case 'share':\n      return <ShareDialog entry={dialog.entries[0]} />;\n    case 'getLink':\n      return <ShareDialog entry={dialog.entries[0]} focusLinkInput />;\n    case 'moveTo':\n      return <MoveEntriesDialog entries={dialog.entries} />;\n    default:\n      return null;\n  }\n}\n","import React, {useState} from 'react';\nimport {SearchIcon} from '../../common/icons/material/Search';\nimport {TextField} from '../../common/ui/forms/input-field/text-field/text-field';\nimport {SearchPage} from '../drive-page/drive-page';\nimport {useTrans} from '../../common/i18n/use-trans';\nimport {useDriveStore} from '../drive-store';\nimport {useNavigate} from '../../common/utils/hooks/use-navigate';\nimport {useSearchParams} from 'react-router-dom';\nimport {IconButton} from '../../common/ui/buttons/icon-button';\n\nexport function NavbarSearch() {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  const activePage = useDriveStore(s => s.activePage);\n  const [searchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState(searchParams.get('query') || '');\n\n  return (\n    <form\n      className=\"flex-auto max-w-620\"\n      onSubmit={e => {\n        e.preventDefault();\n        navigate(\n          {\n            pathname: SearchPage.path,\n            search: `?query=${inputValue}`,\n          },\n          {replace: true}\n        );\n      }}\n    >\n      <TextField\n        size=\"sm\"\n        background=\"bg-paper\"\n        value={inputValue}\n        onChange={e => setInputValue(e.target.value)}\n        onFocus={() => {\n          if (activePage !== SearchPage) {\n            navigate(SearchPage.path);\n          }\n        }}\n        startAdornment={\n          <IconButton type=\"submit\" radius=\"rounded\">\n            <SearchIcon />\n          </IconButton>\n        }\n        className=\"flex-auto max-w-620\"\n        placeholder={trans({message: 'Search'})}\n        aria-label={trans({message: 'Search files and folders'})}\n      />\n    </form>\n  );\n}\n","import {InteractableEvent} from '../interactable-event';\nimport {useEffect, useId, useRef} from 'react';\nimport {dragMonitors, DragSessionStatus} from './drag-state';\nimport {ConnectedDraggable} from './use-draggable';\n\nexport interface DragMonitor {\n  type: string;\n  onDragStart?: (e: InteractableEvent, dragTarget: ConnectedDraggable) => void;\n  onDragMove?: (e: InteractableEvent, dragTarget: ConnectedDraggable) => void;\n  onDragEnd?: (\n    e: InteractableEvent,\n    dragTarget: ConnectedDraggable,\n    status: DragSessionStatus\n  ) => void;\n}\n\nexport function useDragMonitor(monitor: DragMonitor) {\n  const monitorRef = useRef(monitor);\n  const id = useId();\n\n  useEffect(() => {\n    dragMonitors.set(id, monitorRef.current);\n    return () => {\n      dragMonitors.delete(id);\n    };\n  }, [id]);\n}\n","import {useDragMonitor} from '../../common/ui/interactions/dnd/use-drag-monitor';\nimport React, {memo, useRef, useState} from 'react';\nimport {FileTypeIcon} from '../../common/uploads/file-type-icon/file-type-icon';\nimport {FileEntry} from '../../common/uploads/file-entry';\nimport {\n  DragSessionStatus,\n  droppables,\n} from '../../common/ui/interactions/dnd/drag-state';\nimport {AnimatePresence, m} from 'framer-motion';\nimport clsx from 'clsx';\nimport {\n  isFolderTreeDragId,\n  makeFolderTreeDragId,\n} from '../layout/sidebar/folder-tree-drag-id';\nimport {InteractableEvent} from '../../common/ui/interactions/interactable-event';\nimport {useDriveStore} from '../drive-store';\nimport {ConnectedDraggable} from '../../common/ui/interactions/dnd/use-draggable';\n\ninterface Point {\n  x: number;\n  y: number;\n}\n\ninterface DragPreviewState {\n  entries?: FileEntry[];\n  e?: InteractableEvent;\n  status?: DragSessionStatus;\n  draggingTreeItem?: boolean;\n}\n\nexport function EntryDragPreview() {\n  const ref = useRef<HTMLDivElement>(null);\n  const [points, setPoints] = useState<{start?: Point; end?: Point}>();\n  const [state, setState] = useState<DragPreviewState>({});\n\n  useDragMonitor({\n    type: 'fileEntry',\n    onDragStart: (e, dragTarget) => {\n      const target = dragTarget as ConnectedDraggable<FileEntry[]>;\n      if (target) {\n        setState({\n          entries: target.getData(),\n          e,\n          draggingTreeItem: isFolderTreeDragId(target.id as number),\n        });\n        setPoints({start: e});\n      }\n    },\n    onDragMove: e => {\n      setState(prev => {\n        return {...prev, e: e};\n      });\n      setPoints(prev => {\n        return {...prev, end: e};\n      });\n    },\n    onDragEnd: (e, dragTarget, status) => {\n      setState({status});\n    },\n  });\n\n  let preview = null;\n\n  if (state.entries && state.e) {\n    preview = (\n      <div\n        ref={ref}\n        style={\n          state.e\n            ? {\n                transform: `translate(${state.e.x}px, ${state.e.y}px)`,\n                width: `${state.e.rect.width}px`,\n              }\n            : undefined\n        }\n        className=\"fixed isolate left-0 top-0 pointer-events-none\"\n      >\n        {state.entries.map((item, index) => (\n          <EntryPreview\n            key={item.id}\n            index={index}\n            entry={item}\n            points={points}\n            state={state}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  return <AnimatePresence custom={state.status}>{preview}</AnimatePresence>;\n}\n\ninterface EntryPreviewProps {\n  entry: FileEntry;\n  index: number;\n  points?: {start?: Point; end?: Point};\n  state: DragPreviewState;\n}\nconst EntryPreview = memo(\n  ({entry, points, index, state}: EntryPreviewProps) => {\n    const viewMode = useDriveStore(s => s.viewMode);\n    const droppableId = state.draggingTreeItem\n      ? makeFolderTreeDragId(entry)\n      : entry.id;\n    const target = droppables.get(droppableId);\n    if (!target?.rect || !points?.start) return null;\n    const rect = target.rect;\n    const itemCount = state.entries?.length || 0;\n\n    const exitVariant = (status: DragSessionStatus) => {\n      if (status === 'dropSuccess') {\n        return {\n          x: 0,\n          y: 0,\n          opacity: 0,\n          transition: {duration: 0.1, delay: 0},\n        };\n      }\n      return {\n        x: rect.left - (points.end?.x || 0),\n        y: rect.top - (points.end?.y || 0),\n        width: `${state.e?.rect.width}px`,\n      };\n    };\n\n    return (\n      <m.div\n        key={entry.id}\n        transition={{delay: 0.01 * index, bounce: 0, duration: 0.2}}\n        initial={{\n          x: rect.left - points.start.x,\n          y: rect.top - points.start.y,\n          width: `${state.e?.rect.width}px`,\n        }}\n        animate={{\n          x: 0,\n          y: 0,\n          // in list/table mode limit preview size to 288px, but start and end the animation\n          // at full width, so it returns to original position at original size smoothly\n          width: viewMode === 'list' ? 288 : undefined,\n        }}\n        exit={exitVariant as any}\n        style={{\n          // in grid mode simply use the width of the draggable item\n          width: viewMode === 'grid' ? `${state.e?.rect.width}px` : undefined,\n          height: `${state.e?.rect.height}px`,\n        }}\n        className={clsx(\n          'absolute bg-paper whitespace-nowrap rounded border border-primary-light max-h-48',\n          index < 2 && 'shadow',\n          index === 0 && 'z-10 top-0 left-0',\n          index > 0 && 'top-6 left-6'\n        )}\n      >\n        {itemCount > 1 && index === 0 && <EntryCount count={itemCount} />}\n        <div className=\"text-sm h-full flex justify-center items-center px-16 gap-10 bg-primary-light/20 overflow-hidden\">\n          <FileTypeIcon type={entry.type} />\n          <div className=\"flex-auto text-ellipsis overflow-hidden\">\n            {entry.name}\n          </div>\n        </div>\n      </m.div>\n    );\n  }\n);\n\ninterface EntryCountProps {\n  count: number;\n}\nconst EntryCount = memo(({count}: EntryCountProps) => {\n  return (\n    <m.div\n      key=\"entryCount\"\n      initial={{opacity: 0}}\n      animate={{opacity: 1, transition: {delay: 0.1}}}\n      exit={{opacity: 0}}\n      transition={{duration: 0.1}}\n      className=\"absolute -top-6 shadow-lg -right-6 z-30 rounded-full bg-danger text-white w-20 h-20 flex items-center justify-center text-sm font-bold z-10\"\n    >\n      {count}\n    </m.div>\n  );\n});\n","import {PageBreadcrumbs} from '../page-breadcrumbs';\nimport {DashboardContentHeader} from '../../common/ui/layout/dashboard-content-header';\nimport React, {useContext} from 'react';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {Trans} from '../../common/i18n/trans';\nimport {Tooltip} from '../../common/ui/tooltip/tooltip';\nimport {IconButton} from '../../common/ui/buttons/icon-button';\nimport {ViewListIcon} from '../../common/icons/material/ViewList';\nimport {ViewModuleIcon} from '../../common/icons/material/ViewModule';\nimport {DashboardLayoutContext} from '../../common/ui/layout/dashboard-layout-context';\nimport {InfoIcon} from '../../common/icons/material/Info';\nimport {DriveSortButton} from './sorting/drive-sort-button';\n\nexport function DriveContentHeader() {\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n  const activePage = useDriveStore(s => s.activePage);\n  return (\n    <DashboardContentHeader className=\"px-8 md:px-26 py-4 flex items-center gap-20 border-b h-60\">\n      {isMobileMode ? (\n        <DriveSortButton isDisabled={activePage?.disableSort} />\n      ) : (\n        <PageBreadcrumbs />\n      )}\n      <div className=\"text-muted ml-auto flex-shrink-0\">\n        <ToggleViewModeButton />\n        <ToggleDetailsButton />\n      </div>\n    </DashboardContentHeader>\n  );\n}\n\nfunction ToggleViewModeButton() {\n  const viewMode = useDriveStore(s => s.viewMode);\n  const tooltip =\n    viewMode === 'grid' ? (\n      <Trans message=\"List view\" />\n    ) : (\n      <Trans message=\"Grid view\" />\n    );\n  return (\n    <Tooltip label={tooltip}>\n      <IconButton\n        size=\"md\"\n        onClick={() => {\n          driveState().setViewMode(\n            driveState().viewMode === 'list' ? 'grid' : 'list'\n          );\n        }}\n      >\n        {viewMode === 'list' ? <ViewListIcon /> : <ViewModuleIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n}\n\nfunction ToggleDetailsButton() {\n  const {rightSidenavStatus: status, setRightSidenavStatus} = useContext(\n    DashboardLayoutContext\n  );\n  const tooltip = status ? (\n    <Trans message=\"Hide details\" />\n  ) : (\n    <Trans message=\"Show details\" />\n  );\n  return (\n    <Tooltip label={tooltip}>\n      <IconButton\n        size=\"md\"\n        color={status === 'open' ? 'primary' : null}\n        onClick={() => {\n          setRightSidenavStatus(status === 'open' ? 'closed' : 'open');\n        }}\n      >\n        <InfoIcon />\n      </IconButton>\n    </Tooltip>\n  );\n}\n","import React, {Fragment, useContext, useEffect, useMemo} from 'react';\nimport {Link, useLocation, useParams} from 'react-router-dom';\nimport {Sidebar} from './sidebar/sidebar';\nimport {FileView} from '../file-view/file-view';\nimport {UploadQueue} from '../uploading/upload-queue';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {\n  DRIVE_PAGES,\n  makePartialFolderPage,\n  SearchPage,\n} from '../drive-page/drive-page';\nimport {DetailsSidebar} from '../details-sidebar/details-sidebar';\nimport {DriveDialogsContainer} from '../files/dialogs/drive-dialogs-container';\nimport {NavbarSearch} from '../search/navbar-search';\nimport {useActiveWorkspaceId} from '../../common/workspace/active-workspace-id-context';\nimport {FileEntryUrlsContext} from '../../common/uploads/hooks/file-entry-urls';\nimport {FileUploadProvider} from '../../common/uploads/uploader/file-upload-provider';\nimport {EntryDragPreview} from '../file-view/entry-drag-preview';\nimport {DashboardLayout} from '../../common/ui/layout/dashboard-layout';\nimport {DashboardContent} from '../../common/ui/layout/dashboard-content';\nimport {DashboardNavbar} from '../../common/ui/layout/dashboard-navbar';\nimport {DriveContentHeader} from './drive-content-header';\nimport {IconButton} from '../../common/ui/buttons/icon-button';\nimport {SearchIcon} from '../../common/icons/material/Search';\nimport {DashboardLayoutContext} from '../../common/ui/layout/dashboard-layout-context';\nimport {CloseIcon} from '../../common/icons/material/Close';\nimport {Trans} from '../../common/i18n/trans';\nimport {EntryActionList} from '../entry-actions/entry-action-list';\nimport {CreateNewButton} from './create-new-button';\nimport {StaticPageTitle} from '../../common/seo/static-page-title';\nimport {DashboardSidenav} from '../../common/ui/layout/dashboard-sidenav';\n\nexport function DriveLayout() {\n  const {pathname} = useLocation();\n  const {hash} = useParams();\n  const {workspaceId} = useActiveWorkspaceId();\n  const activePage = useDriveStore(s => s.activePage);\n\n  useEffect(() => {\n    driveState().setActivePage(\n      DRIVE_PAGES.find(p => p.path === pathname) || makePartialFolderPage(hash!)\n    );\n  }, [pathname, hash]);\n\n  const urlsContextValue = useMemo(() => {\n    return {workspaceId};\n  }, [workspaceId]);\n\n  useEffect(() => {\n    return () => {\n      driveState().reset();\n    };\n  }, []);\n\n  return (\n    <Fragment>\n      {activePage?.label && (\n        <StaticPageTitle>{activePage.label}</StaticPageTitle>\n      )}\n      <FileUploadProvider>\n        <FileEntryUrlsContext.Provider value={urlsContextValue}>\n          <DashboardLayout\n            name=\"drive\"\n            onDragOver={e => {\n              e.preventDefault();\n              e.stopPropagation();\n              e.dataTransfer.dropEffect = 'none';\n            }}\n            onDrop={e => {\n              // prevent files from desktop from blowing away the document\n              e.preventDefault();\n            }}\n          >\n            <Navbar />\n            <DashboardSidenav position=\"left\" size=\"md\">\n              <Sidebar />\n            </DashboardSidenav>\n            <DriveContentHeader />\n            <DashboardContent>\n              <FileView />\n            </DashboardContent>\n            <UploadQueue />\n            <DriveDialogsContainer />\n            <DashboardSidenav position=\"right\" size=\"lg\">\n              <DetailsSidebar />\n            </DashboardSidenav>\n          </DashboardLayout>\n        </FileEntryUrlsContext.Provider>\n        <EntryDragPreview />\n      </FileUploadProvider>\n    </Fragment>\n  );\n}\n\nfunction Navbar() {\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n  const activePage = useDriveStore(s => s.activePage);\n\n  const children = isMobileMode ? null : <NavbarSearch />;\n  const searchButton = (\n    <IconButton elementType={Link} to={SearchPage.path}>\n      <SearchIcon />\n    </IconButton>\n  );\n\n  const mobileRightChildren = (\n    <Fragment>\n      {activePage !== SearchPage && searchButton}\n      <CreateNewButton isCompact />\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      <DashboardNavbar\n        rightChildren={isMobileMode && mobileRightChildren}\n        menuPosition=\"drive-navbar\"\n      >\n        {children}\n      </DashboardNavbar>\n      {isMobileMode && <FloatingActionList />}\n    </Fragment>\n  );\n}\n\nfunction FloatingActionList() {\n  const entriesSelected = useDriveStore(s => s.selectedEntries.size);\n  if (!entriesSelected) return null;\n  return (\n    <div className=\"fixed bg-primary w-full h-54 text-on-primary shadow-xl z-10 rounded top-0 right-0 flex items-center justify-center gap-10 px-6\">\n      <IconButton\n        onClick={() => {\n          driveState().selectEntries([]);\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n      <Trans message=\":count selected\" values={{count: entriesSelected}} />\n      <EntryActionList className=\"ml-auto\" />\n    </div>\n  );\n}\n","import {RouteObject, useRoutes} from 'react-router-dom';\nimport React from 'react';\nimport {\n  ShareableLinkPage\n} from './shareable-link/shareable-link-page/shareable-link-page';\nimport {DriveLayout} from './layout/drive-layout';\nimport {AuthRoute} from '../common/auth/guards/auth-route';\nimport {NotFoundPage} from '../common/ui/not-found-page/not-found-page';\n\nconst DriveRouteConfig: RouteObject[] = [\n  {\n    path: '/',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {\n    path: '/folders/:hash',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {\n    path: '/shares',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {\n    path: '/recent',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {\n    path: '/starred',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {\n    path: '/trash',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {\n    path: '/search',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {path: 's/:hash', element: <ShareableLinkPage />},\n  {path: '*', element: <NotFoundPage />},\n];\n\nexport default function DriveRoutes() {\n  return useRoutes(DriveRouteConfig);\n}\n"],"names":["InfiniteQueryObserver","QueryObserver","client","options","notifyOptions","infiniteQueryBehavior","pageParam","query","_state$data","_state$data2","_state$fetchMeta","_state$fetchMeta$fetc","_state$fetchMeta2","_state$fetchMeta2$fet","state","hasNextPage","hasPreviousPage","useInfiniteQuery","arg1","arg2","arg3","parseQueryArgs","useBaseQuery","DriveQueryKeys","params","key","hash","entryId","id","invalidateEntryQueries","queryClient","useLinkPageStore","create","immer","set","getFromLocalStorage","value","mode","setInLocalStorage","linkPageState","fetchLinkByHash","page","order","password","apiClient","response","useShareableLinkPage","useParams","orderBy","orderDir","s","isPasswordProtected","lastResponse","currentPage","lastPage","retryCount","e","isPasswordInvalidResponse","_a","_b","p","axios","checkLinkPassword","linkHash","useCheckLinkPassword","useMutation","props","err","showHttpErrorToast","message","importIntoOwnDrive","linkId","useImportIntoOwnDrive","toast","ShareableLinkPageActionButtons","link","user","isLoggedIn","useAuth","downloadUrl","useFileEntryUrls","entry","alreadyImported","users","find","u","allow_download","Button","_jsx","FileDownloadIcon","downloadFileFromUrl","Trans","allow_edit","MenuTrigger","mutate","IconButton","isLoading","KeyboardArrowDownIcon","_jsxs","Menu","MenuItem","ImportExportIcon","ShareableLinkNavbar","Navbar","type","FileTypeIcon","name","PasswordPage","trans","useTrans","fieldLabel","setPassword","useState","checkPassword","split","passwordIsInvalid","data","matches","SvgImage","secureFilesSvg","preventDefault","TextField","target","BaseFileGridItem","React","forwardRef","className","isSelected","isMobileMode","footerAdornment","domProps","ref","clsx","FileThumbnail","Footer","isMobile","adornment","FolderPreviewFileGrid","entries","onEntrySelected","map","index","formatFileSize","memoize","bytes","prettyBytes","fileTableColumns","allowsSorting","header","body","width","FormattedDate","updated_at","file_size","mobileColumns","filter","config","FolderPreviewFileTable","sortDescriptor","activeSort","useIsMobileMediaQuery","Table","setActiveSort","item","buildFolderHash","folderHash","useNavigateToSubfolder","navigate","useNavigate","FolderPreviewFileView","pathname","useLocation","navigateToSubfolder","activePreviewIndex","setActivePreviewIndex","viewMode","sentinelRef","useRef","isFetchingNextPage","fetchNextPage","isPreviousData","useEffect","undefined","sentinelEl","current","observer","IntersectionObserver","isIntersecting","observe","unobserve","ProgressCircle","handlePreview","folderEntries","Fragment","AdHost","AnimatePresence","m","opacityAnimation","DialogTrigger","FilePreviewDialog","DashboardContentHeader","children","useFolderPath","isEnabled","useQuery","fetchFolderPath","FolderPreviewBreadcrumb","folder","shareable_link","content","items","path","forEach","parent","push","label","_Fragment","Breadcrumb","BreadcrumbItem","AVAILABLE_SORTS","EntriesSortButton","descriptor","onChange","isDisabled","column","direction","sort","SortIcon","MenuSection","FolderPreviewHeader","isFetching","hasEntry","setViewMode","GridViewIcon","shareSvg","FolderPreview","isFetched","showEmptyMessage","length","DashboardLayout","DashboardNavbar","FileUploadProvider","DashboardContent","EmptyMessage","IllustratedMessage","ShareableLinkPageFilePreview","FilePreviewContainer","ShareableLinkPage","status","NotFoundPage","FileEntryUrlsContext","useStorageSummary","fetchStorageSummary","formatResponse","percentage","Meter","ProgressBarBase","StorageMeter","used","usedFormatted","available","availableFormatted","StorageIcon","useCreateWorkspace","form","createWorkspace","WorkspaceQueryKeys","r","onFormQueryError","NewWorkspaceDialog","useForm","formId","close","useDialogContext","Dialog","DialogHeader","DialogBody","Form","getValues","onSuccess","workspace","FormTextField","DialogFooter","fetchWorkspaceWithMembers","workspaceId","useWorkspaceWithMembers","InviteMembers","other","useInviteMembers","ResendInvite","inviteId","useResendInvite","matcher","isEmail","string","ChangeRole","member","modelType","memberId","useChangeRole","removeMember","memberType","endpoint","useRemoveMember","setWorkspaceId","useActiveWorkspaceId","PersonalWorkspace","LeaveWorkspaceConfirmation","ConfirmationDialog","WorkspaceMembersDialog","Manager","can","usePermissions","members","invites","invite","InviteChipField","GroupIcon","MemberListItem","model_type","x","opacity","duration","avatar","display_name","MemberDisplayNameAppend","email","MemberActions","authUser","update","delete","permissions","authMember","mb","permission","is_owner","selectedRole","setSelectedRole","role_id","changeRole","isOwner","isCurrentUser","roleSelector","role_name","RoleMenuTrigger","roleId","RemoveMemberButton","chips","setChips","allEmailsValid","every","chip","invalid","displayWith","description","inviteMembers","useValueLists","workspaceRoles","ChipField","errorMessage","emails","c","isConfirmed","ExitToAppIcon","CloseIcon","RemoveMemberConfirmation","size","role","newValue","ArrowDropDownIcon","ResendInviteDialogTrigger","resendInvite","updateWorkspace","useUpdateWorkspace","RenameWorkspaceDialog","defaultValues","deleteWorkspace","useDeleteWorkspace","payload","WorkspaceSelector","useUserWorkspaces","activeWorkspace","w","dialog","setDialog","selectorIsOpen","setSelectorIsOpen","ButtonBase","default","count","members_count","UnfoldMoreIcon","WorkspaceItem","stopPropagation","AddIcon","DialogContainer","isActive","CheckIcon","ManageButton","DeleteWorkspaceConfirmation","PersonAddIcon","owner_id","EditIcon","DeleteIcon","addFilesSvg","timeManagement","fileSearching","throwAwaySvg","lovingItSvg","defaultSortDescriptor","makeFolderPage","makePartialFolderPage","canUpload","getPathForFolder","hasActions","isFolderPage","noContentMessage","title","image","rootFolder","getBootstrapData","RootFolderPage","RecentPage","disableSort","queryParams","recentOnly","SearchPage","isSearchingOrFiltering","SharesPage","sharedOnly","TrashPage","deletedOnly","StarredPage","starredOnly","DRIVE_PAGES","MenuPositions","__assign","this","t","n","o","defaultConfig","exports","arrayToTree","a","h","i","d","getNestedProperty","l","countNodes","fetchUserFolders","useFolders","stableArray","enableMapSet","initialState","useDriveStore","get","isOpen","merge","driveState","useActiveDialogEntry","useMoveEntries","moveEntries","EightMB","useDriveUploadQueue","uploadMultiple","useFileUploadStore","activePage","usage","parentId","uploads","useSettings","maxFileSize","allowedFileTypes","blockedFileTypes","useCallback","files","file","UploadedFile","sizeOfFiles","sum","currentlyUsing","availableSpace","canMoveEntriesInto","targets","destination","destinationIsInTarget","destinationPath","part","useFolderDropAction","uploadFiles","folderAcceptsDrop","makeFolderTreeDragId","isFolderTreeDragId","useSidebarTreeDropTarget","isDragOver","setIsDragOver","onDrop","useDroppable","draggable","TreeContext","createContext","renderTree","nodes","itemRenderer","parentNode","level","node","cloneElement","TreeLabel","icon","expandedKeys","setExpandedKeys","selectedKeys","setSelectedKeys","useContext","isExpanded","includes","handleExpandIconClick","indexOf","newExpandedKeys","splice","Array","from","_","ArrowRightIcon","displayName","TreeItem","labelRef","labelClassName","focusManager","useFocusManager","focusedNode","setFocusedNode","hasChildren","isFirstNode","isFocused","createEventHandler","focusNext","newKeys","parentEl","document","activeElement","parentElement","closest","focus","focusPrevious","focusFirst","focusLast","childNode","currentTarget","contains","relatedTarget","open","height","closed","overflow","Tree","useControlledState","defaultSelectedKeys","onExpandedKeysChange","onSelectedKeysChange","FocusScope","TreeRoot","FolderTree","sidebarExpandedKeys","tree","useMemo","folders","dataField","keys","setSidebarExpandedKeys","entryHash","findHash","FolderTreeItem","isRootFolder","isDragging","entriesBeingDragged","draggableProps","useDraggable","disabled","hidePreview","onDragStart","setEntriesBeingDragged","getData","selectEntries","onDragEnd","droppableProps","mergeProps","deselectEntries","setContextMenuData","clientX","y","clientY","BackupIcon","FolderIcon","deleteEntries","useDeleteEntries","entryIds","emptyTrash","backendError","getAxiosErrorMessage","SidebarMenu","CustomMenu","DriveSidebar","action","TrashMenuItem","CustomMenuItem","types","onDragEnter","onDragLeave","deleteForever","CreateNewButton","isCompact","button","FileUploadIcon","openUploadWindow","multiple","directory","activeFolder","setActiveActionDialog","UploadFileIcon","DriveFolderUploadIcon","CreateNewFolderIcon","Sidebar","isSubscribed","billing","enable","Link","WorkspaceSwitcher","fetchEntries","setActiveFolder","newFolder","usePaginatedEntries","searchParams","useSearchParams","isDisabledInSearch","getAllEntries","all","cache","driveSearchFilters","FILE_ENTRY_TYPE_FILTER","BackendFilter","FilterControlType","CreatedAtFilter","UpdatedAtFilter","FilterOperator","alwaysShownFilters","f","SearchFilterList","DashboardLayoutContext","SearchIcon","FilterList","restrictResizableWithinBoundary","rect","boundaryRect","boundedRect","leftRestriction","topRestriction","mouseSelectables","useMouseSelectable","optionsRef","useLayoutEffect","droppables","rectsIntersect","rectA","rectB","useMouseSelectionBox","onPointerDown","defaultRef","containerRef","boxRef","drawSelectionBox","startPoint","endPoint","initialScrollTop","currentScrollTop","newRect","scrollDiff","scrollValue","absoluteRect","selectable","intersect","_c","_d","_e","_f","_g","usePointerEvents","activeInteraction","updateRects","el","reachedBottomEdge","reachedTopEdge","createShareableLink","useCreateShareableLink","addStarToEntries","useAddStarToEntries","removeStarFromEntries","useRemoveStarFromEntries","duplicateEntries","useDuplicateEntries","useUnshareEntries","unshareEntries","useRestoreEntries","restoreEntries","useEntryActions","preview","usePreviewAction","share","useShareAction","getLink","useGetLinkAction","addStar","useAddToStarredAction","removeStar","useRemoveFromStarred","moveTo","useMoveToAction","rename","useRenameAction","makeCopy","useMakeCopyAction","download","useDownloadEntriesAction","deleteAction","useDeleteEntriesAction","removeSharedEntries","useRemoveSharedEntriesAction","useRestoreEntriesAction","RemoveRedEyeIcon","createLink","LinkIcon","starEntries","tag","StarIcon","StarOutlineIcon","DriveFileMoveIcon","DriveFileRenameOutlineIcon","ContentCopyIcon","RestoreIcon","useDrivePageActions","useNewFolderAction","useUploadFilesAction","uploadFolder","useUploadFolderAction","useEmptyTrashAction","DeleteForeverIcon","EntryActionMenuTrigger","PageMenu","EntriesMenu","actions","BaseMenu","execute","createElement","useEntries","useSelectedEntries","ids","useSelectedEntry","useSelectedEntryParent","getSelectedEntries","allEntries","EntryActionList","selectedEntries","ActionList","removeShared","Tooltip","MoreVertIcon","preventContextOnMenu","ContextMenu","position","listbox","useListbox","placement","floatingWidth","offset","mainAxis","alignmentAxis","loopFocus","reference","refs","setIsOpen","activeIndex","focusItem","listContent","floating","addEventListener","removeEventListener","getBoundingClientRect","top","right","bottom","left","handleListboxKeyboardNavigation","useListboxKeyboardNavigation","findMatchingItem","useTypeSelect","Listbox","DriveContextMenu","contextMenuData","PageContextMenu","EntriesContextMenu","BaseContextMenu","useFileViewDnd","isTouchDevice","useIsTouchDevice","itemClassName","FileTableRow","onContextMenu","has","useViewItemActionHandler","fileTableMobileColumns","hideHeader","align","padding","selectedRows","Checkbox","FileTable","performViewItemAction","setSortDescriptor","FileGridItem","toggleEntry","pressHandler","isCtrlOrShiftPressed","pressProps","onLongPress","onPress","keyboardHandler","contextMenuHandler","onKeyDown","FooterAdornment","FileGrid","DriveSortButton","PageBreadcrumbs","useActiveWorkspace","rootItem","useRootItem","fetchStatus","isMenuItem","MixedText","workspace_id","owner","owns_entry","InfiniteScrollSentinel","onIntersection","DropTargetMask","isVisible","mask","FileView","containerProps","boxProps","handleContextMenu","Toolbar","UploadQueueItem","memo","mime","SizeInfo","FileStatus","fileUpload","fileUploads","bytesUploaded","totalBytes","uploadedBytes","statusMessage","abortUpload","isHovered","setIsHovered","abortButton","progressButton","statusButton","errMessage","AnimatedStatus","ErrorIcon","WarningIcon","CheckCircleIcon","pointerType","scale","UploadQueue","uploadQueueIsOpen","Header","UploadList","inProgressUploadsCount","completedUploadsCount","clearInactive","setUploadQueueIsOpen","setTimeout","values","upload","detailedExamination","DetailsSidebar","selectedEntry","EntryProperties","NothingSelected","entryType","entryName","setRightSidenavStatus","SectionHeader","GroupsIcon","Avatar","PropertiesPanel","prettySize","PropertyItem","useRenameEntry","renameEntry","RenameEntryDialog","initialName","formState","isDirty","createFolder","useCreateFolder","NewFolderDialog","EntryPreviewDialog","defaultActiveIndex","findIndex","setActiveIndex","DriveActions","shareEntry","useShareEntry","DRIVE_ENTRY_FULL_PERMISSIONS","PermissionSelectorItems","view","PermissionSelector","getPermissionItemForUser","edit","entry_permissions","useChangePermission","changePermission","MemberList","ActionButtons","changePermissions","unshareEntry","activePermission","setActivePermission","userId","onError","SharePanel","isSharing","setIsSharing","selectedPermission","setSelectedPermission","inputValue","setInputValue","useNormalizedModels","USER_MODEL","perPage","enabled","suggest_emails","results","Item","onSettled","useEntryShareableLink","fetchLinkByEntryId","deleteShareableLink","useDeleteShareableLink","ShareableLinkPanel","setActivePanel","focusInput","linkExists","deleteLink","Switch","ShareableLinkInput","autoFocus","base_url","randomString","linkUrl","isCopied","setCopied","useClipboard","successDuration","select","updateShareableLink","useUpdateShareableLink","LinkSettingsDialog","allowDownload","allowEdit","expiresAt","expires_at","updateLink","LinkExpirationOption","LinkPasswordOption","LinkOption","FormSwitch","minDate","now","getLocalTimeZone","showField","showFieldDefault","setShowField","checked","FormDatePicker","showBorder","ShareDialog","initialEntry","focusLinkInput","fileEntry","fetchFileEntry","then","initialData","activePanel","MainDialog","MoveEntriesDialogSearch","allFolders","onFolderSelected","searchLabel","ComboBox","folderId","parseInt","MoveEntriesDialogBreadcrumbs","selectedFolder","fullPath","previous","ArrowBackIcon","myFilesSvg","MoveEntriesDialogFolderList","subFolders","parent_id","List","ListItem","ChevronRightIcon","MoveEntriesDialog","setSelectedFolder","destinationId","DriveDialogsContainer","activeDialog","activeActionDialog","getDialog","NavbarSearch","search","replace","useDragMonitor","monitor","monitorRef","useId","dragMonitors","EntryDragPreview","points","setPoints","setState","dragTarget","draggingTreeItem","start","onDragMove","prev","end","transform","EntryPreview","droppableId","itemCount","exitVariant","transition","delay","bounce","EntryCount","DriveContentHeader","ToggleViewModeButton","ToggleDetailsButton","ViewListIcon","ViewModuleIcon","rightSidenavStatus","InfoIcon","DriveLayout","setActivePage","urlsContextValue","reset","StaticPageTitle","dataTransfer","dropEffect","DashboardSidenav","searchButton","mobileRightChildren","FloatingActionList","entriesSelected","DriveRouteConfig","element","AuthRoute","DriveRoutes","useRoutes"],"mappings":"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"}