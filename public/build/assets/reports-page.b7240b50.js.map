{"version":3,"mappings":"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","names":["Endpoint","useAnalyticsReport","useTrans","select","useCallback","response","formatData","trans","useQuery","fetchAnalyticsReport","apiClient","weekly","datum","parseAbsoluteToLocal","message","monthly","browsers","countries","ChartLayout","props","title","description","children","className","contentIsFlex","contentClassName","clsx","_jsx","LazyChart","lazy","__vitePreload","BaseChart","Suspense","ProgressCircle","ChartColors","LineChart","data","mergedData","datasets","map","dataset","i","backgroundColor","borderColor","pointBackgroundColor","line","fill","tension","pointBorderWidth","pointHitRadius","BarChart","type","individualBarColors","c","borderWidth","indexAxis","PolarAreaChart","ReportsPage","query","FullPageLoader","colGap","rowClassName","StaticPageTitle","Trans","header","HeaderDatumItem","name","_jsxs","Icon","createSvgIconFromTree","icon","value"],"sources":["../../../resources/client/common/admin/reports/use-analytics-report.ts","../../../resources/client/common/charts/chart-layout.tsx","../../../resources/client/common/charts/base-chart.tsx","../../../resources/client/common/charts/chart-colors.tsx","../../../resources/client/common/charts/line-chart.tsx","../../../resources/client/common/charts/bar-chart.tsx","../../../resources/client/common/charts/polar-area-chart.tsx","../../../resources/client/common/admin/reports/reports-page.tsx"],"sourcesContent":["import {useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {apiClient} from '../../http/query-client';\nimport {SiteAnalyticsData} from './site-analytics-data';\nimport {parseAbsoluteToLocal} from '@internationalized/date';\nimport {ChartData} from 'chart.js';\nimport {IconTree} from '../../icons/create-svg-icon';\nimport {useTrans, UseTransReturn} from '../../i18n/use-trans';\nimport {useCallback} from 'react';\nimport {message} from '../../i18n/message';\n\nconst Endpoint = 'admin/reports/analytics';\n\nexport interface HeaderDatum {\n  icon: IconTree[];\n  name: string;\n  value: number | string;\n}\n\ninterface FetchAnalyticsReportResponse extends BackendResponse {\n  mainData: SiteAnalyticsData;\n  headerData: HeaderDatum[];\n}\n\nexport function useAnalyticsReport() {\n  const {trans} = useTrans();\n  const select = useCallback(\n    (response: FetchAnalyticsReportResponse) => {\n      return formatData(response, trans);\n    },\n    [trans]\n  );\n  return useQuery([Endpoint], () => fetchAnalyticsReport(), {\n    select,\n  });\n}\n\nfunction fetchAnalyticsReport(): Promise<FetchAnalyticsReportResponse> {\n  return apiClient.get(Endpoint).then(response => response.data);\n}\n\nfunction formatData(\n  response: FetchAnalyticsReportResponse,\n  trans: UseTransReturn['trans']\n): {\n  weekly: ChartData<'line'>;\n  monthly: ChartData<'line'>;\n  browsers: ChartData<'polarArea'>;\n  countries: ChartData<'bar'>;\n  header: HeaderDatum[];\n} {\n  const weekly: ChartData<'line'> = {\n    labels: response.mainData.weeklyPageViews.current.map(datum => {\n      return parseAbsoluteToLocal(datum.date).day;\n    }),\n    datasets: [\n      {\n        label: trans(message('This week')),\n        data: response.mainData.weeklyPageViews.current.map(\n          datum => datum.pageViews\n        ),\n      },\n      {\n        label: trans(message('Last week')),\n        data: response.mainData.weeklyPageViews.previous.map(\n          datum => datum.pageViews\n        ),\n      },\n    ],\n  };\n\n  const monthly: ChartData<'line'> = {\n    labels: response.mainData.monthlyPageViews.current.map(datum => {\n      return parseAbsoluteToLocal(datum.date).day;\n    }),\n    datasets: [\n      {\n        label: trans(message('This month')),\n        data: response.mainData.monthlyPageViews.current.map(\n          datum => datum.pageViews\n        ),\n      },\n      {\n        label: trans(message('Last month')),\n        data: response.mainData.monthlyPageViews.previous.map(\n          datum => datum.pageViews\n        ),\n      },\n    ],\n  };\n\n  const browsers: ChartData<'polarArea'> = {\n    labels: response.mainData.browsers.map(datum => {\n      return datum.browser;\n    }),\n    datasets: [\n      {\n        label: trans(message('Sessions')),\n        data: response.mainData.browsers.map(datum => datum.sessions),\n      },\n    ],\n  };\n\n  const countries: ChartData<'bar'> = {\n    labels: response.mainData.countries.map(datum => {\n      return datum.country;\n    }),\n    datasets: [\n      {\n        label: trans(message('Sessions')),\n        data: response.mainData.countries.map(datum => datum.sessions),\n      },\n    ],\n  };\n\n  return {\n    weekly,\n    monthly,\n    browsers,\n    countries,\n    header: response.headerData,\n  };\n}\n","import {ReactNode} from 'react';\nimport clsx from 'clsx';\n\nexport interface ChartLayoutProps {\n  title: ReactNode;\n  description: ReactNode;\n  className?: string;\n  children: ReactNode;\n  contentIsFlex?: boolean;\n  contentClassName?: string;\n}\nexport function ChartLayout(props: ChartLayoutProps) {\n  const {\n    title,\n    description,\n    children,\n    className,\n    contentIsFlex = true,\n    contentClassName,\n  } = props;\n\n  return (\n    <div\n      className={clsx(\n        'border rounded min-h-440 h-full flex flex-col col-auto',\n        className\n      )}\n    >\n      <div className=\"text-xs p-14 border-b flex-shrink-0\">\n        <div className=\"font-semibold\">{title}</div>\n        <div className=\"text-muted\">{description}</div>\n      </div>\n      <div\n        className={clsx(\n          'p-14 relative',\n          contentIsFlex && 'flex-auto flex items-center justify-center',\n          contentClassName\n        )}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n","import type {ChartData, ChartOptions, ChartType} from 'chart.js';\nimport {lazy, Suspense} from 'react';\nimport {ProgressCircle} from '../ui/progress/progress-circle';\nimport {ChartLayout, ChartLayoutProps} from './chart-layout';\n\nconst LazyChart = lazy(() => import('./lazy-chart'));\n\nexport interface BaseChartProps<Type extends ChartType = ChartType>\n  extends Omit<ChartLayoutProps, 'children'> {\n  type: Type;\n  data: ChartData<Type>;\n  options?: ChartOptions<Type>;\n  hideLegend?: boolean;\n}\nexport function BaseChart<Type extends ChartType = ChartType>(\n  props: BaseChartProps<Type>\n) {\n  const {title, description, className} = props;\n\n  return (\n    <ChartLayout title={title} description={description} className={className}>\n      <Suspense fallback={<ProgressCircle isIndeterminate />}>\n        <LazyChart {...props} />\n      </Suspense>\n    </ChartLayout>\n  );\n}\n","export const ChartColors = [\n  ['rgb(66,165,245)', 'rgba(66,165,245,0.2)'],\n  ['rgb(102,187,106)', 'rgba(102,187,106,0.2)'],\n  ['rgb(255,112,67)', 'rgb(255,112,67,0.2)'],\n  ['rgb(92,107,192)', 'rgb(92,107,192,0.2)'],\n  ['rgb(141,110,99)', 'rgb(141,110,99,0.2)'],\n  ['rgb(255,167,38)', 'rgb(255,167,38,0.2)'],\n];\n","import {BaseChart, BaseChartProps} from './base-chart';\nimport {ChartData} from 'chart.js';\nimport {ChartColors} from './chart-colors';\n\nexport function LineChart({\n  data,\n  ...props\n}: Omit<BaseChartProps<'line'>, 'type' | 'children'>) {\n  const mergedData: ChartData<'line'> = {\n    ...data,\n    datasets: data.datasets.map((dataset, i) => ({\n      ...dataset,\n      backgroundColor: ChartColors[i][1],\n      borderColor: ChartColors[i][0],\n      pointBackgroundColor: ChartColors[i][0],\n    })),\n  };\n  return (\n    <BaseChart\n      {...props}\n      data={mergedData}\n      options={{\n        datasets: {\n          line: {\n            fill: 'origin',\n            tension: 0.1,\n            pointBorderWidth: 4,\n            pointHitRadius: 10,\n          },\n        },\n      }}\n      type=\"line\"\n    />\n  );\n}\n","import {BaseChart, BaseChartProps} from './base-chart';\nimport {ChartData} from 'chart.js';\nimport {ChartColors} from './chart-colors';\n\ninterface BarChartProps\n  extends Omit<BaseChartProps<'bar'>, 'type' | 'children'> {\n  type?: 'horizontal' | 'vertical';\n  individualBarColors?: boolean;\n}\nexport function BarChart({\n  data,\n  type = 'vertical',\n  individualBarColors = false,\n  ...props\n}: BarChartProps) {\n  const mergedData: ChartData<'bar'> = {\n    ...data,\n    datasets: data.datasets.map((dataset, i) => {\n      return {\n        ...dataset,\n        backgroundColor: individualBarColors\n          ? ChartColors.map(c => c[1])\n          : ChartColors[i][1],\n        borderColor: individualBarColors\n          ? ChartColors.map(c => c[0])\n          : ChartColors[i][0],\n        borderWidth: 2,\n      };\n    }),\n  };\n  return (\n    <BaseChart\n      data={mergedData}\n      options={{\n        indexAxis: type === 'horizontal' ? 'y' : 'x',\n      }}\n      {...props}\n      type=\"bar\"\n    />\n  );\n}\n","import {BaseChart, BaseChartProps} from './base-chart';\nimport {ChartData} from 'chart.js';\nimport {ChartColors} from './chart-colors';\n\nexport function PolarAreaChart({\n  data,\n  ...props\n}: Omit<BaseChartProps<'polarArea'>, 'type' | 'children'>) {\n  const mergedData: ChartData<'polarArea'> = {\n    ...data,\n    datasets: data.datasets.map((dataset, i) => {\n      return {\n        ...dataset,\n        backgroundColor: ChartColors.map(c => c[0]),\n      };\n    }),\n  };\n  return <BaseChart data={mergedData} {...props} type=\"polarArea\" />;\n}\n","import React from 'react';\nimport {HeaderDatum, useAnalyticsReport} from './use-analytics-report';\nimport {Trans} from '../../i18n/trans';\nimport {LineChart} from '../../charts/line-chart';\nimport {BarChart} from '../../charts/bar-chart';\nimport {createSvgIconFromTree} from '../../icons/create-svg-icon';\nimport {PolarAreaChart} from '../../charts/polar-area-chart';\nimport {FullPageLoader} from '../../ui/progress/full-page-loader';\nimport {StaticPageTitle} from '../../seo/static-page-title';\n\nexport default function ReportsPage() {\n  const query = useAnalyticsReport();\n\n  if (!query.data) {\n    return <FullPageLoader />;\n  }\n\n  const colGap = 'gap-12 md:gap-24 mb-12 md:mb-24';\n  const rowClassName = `flex flex-col lg:flex-row lg:items-center ${colGap}`;\n\n  return (\n    <div className=\"min-h-full gap-12 md:gap-24 p-12 md:p-24\">\n      <StaticPageTitle>\n        <Trans message=\"Analytics\" />\n      </StaticPageTitle>\n      <div\n        className={`flex items-center flex-shrink-0 overflow-x-auto ${colGap}`}\n      >\n        {query.data.header.map(datum => (\n          <HeaderDatumItem key={datum.name} datum={datum}></HeaderDatumItem>\n        ))}\n      </div>\n      <div className={rowClassName}>\n        <LineChart\n          className=\"flex-auto\"\n          data={query.data.weekly}\n          title={<Trans message=\"This Week vs Last Week\" />}\n          description={<Trans message=\"By pageviews\" />}\n        />\n        <PolarAreaChart\n          className=\"lg:min-w-500\"\n          data={query.data.browsers}\n          title={<Trans message=\"Top browsers\" />}\n          description={<Trans message=\"By sessions\" />}\n        />\n      </div>\n      <div className={rowClassName}>\n        <LineChart\n          className=\"flex-auto\"\n          data={query.data.monthly}\n          title={<Trans message=\"This Month vs Last Month\" />}\n          description={<Trans message=\"By pageviews\" />}\n        />\n        <BarChart\n          className=\"md:min-w-440\"\n          type=\"horizontal\"\n          individualBarColors\n          data={query.data.countries}\n          title={<Trans message=\"Top countries\" />}\n          description={<Trans message=\"By sessions\" />}\n        />\n      </div>\n    </div>\n  );\n}\n\ninterface HeaderDatumItemProps {\n  datum: HeaderDatum;\n}\nfunction HeaderDatumItem({datum}: HeaderDatumItemProps) {\n  const Icon = createSvgIconFromTree(datum.icon);\n\n  return (\n    <div\n      key={datum.name}\n      className=\"flex items-center flex-auto rounded border p-20 gap-18 max-h-100 whitespace-nowrap\"\n    >\n      <div className=\"bg-primary-light/20 rounded-lg p-10\">\n        <Icon size=\"lg\" className=\"text-primary\" />\n      </div>\n      <div>\n        <div className=\"text-main text-lg font-semibold\">{datum.value}</div>\n        <h2 className=\"text-muted text-sm\">{datum.name}</h2>\n      </div>\n    </div>\n  );\n}\n"],"file":"assets/reports-page.b7240b50.js"}