{"version":3,"file":"use-resume-subscription.985ade8a.js","sources":["../../../resources/client/common/billing/billing-page/requests/use-cancel-subscription.ts","../../../resources/client/common/billing/billing-page/requests/use-resume-subscription.ts"],"sourcesContent":["import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '../../../http/query-client';\nimport {useTrans} from '../../../i18n/use-trans';\nimport {BackendResponse} from '../../../http/backend-response/backend-response';\nimport {toast} from '../../../ui/toast/toast';\nimport {message} from '../../../i18n/message';\nimport {User} from '../../../auth/user';\nimport {showHttpErrorToast} from '../../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  user: User;\n}\n\ninterface Payload {\n  subscriptionId: number;\n  delete?: boolean;\n}\n\nexport function useCancelSubscription() {\n  const {trans} = useTrans();\n  return useMutation((props: Payload) => cancelSubscription(props), {\n    onSuccess: (response, payload) => {\n      toast(\n        payload.delete\n          ? trans(message('Subscription deleted.'))\n          : trans(message('Subscription cancelled.'))\n      );\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction cancelSubscription({\n  subscriptionId,\n  ...payload\n}: Payload): Promise<Response> {\n  return apiClient\n    .post(`billing/subscriptions/${subscriptionId}/cancel`, payload)\n    .then(r => r.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '../../../http/query-client';\nimport {useTrans} from '../../../i18n/use-trans';\nimport {BackendResponse} from '../../../http/backend-response/backend-response';\nimport {toast} from '../../../ui/toast/toast';\nimport {message} from '../../../i18n/message';\nimport {User} from '../../../auth/user';\nimport {showHttpErrorToast} from '../../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  user: User;\n}\n\ninterface Payload {\n  subscriptionId: number;\n}\n\nexport function useResumeSubscription() {\n  const {trans} = useTrans();\n  return useMutation((props: Payload) => resumeSubscription(props), {\n    onSuccess: () => {\n      toast(trans(message('Subscription renewed.')));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction resumeSubscription({subscriptionId}: Payload): Promise<Response> {\n  return apiClient\n    .post(`billing/subscriptions/${subscriptionId}/resume`)\n    .then(r => r.data);\n}\n"],"names":["useCancelSubscription","trans","useTrans","useMutation","props","cancelSubscription","response","payload","toast","message","err","showHttpErrorToast","subscriptionId","apiClient","r","useResumeSubscription","resumeSubscription"],"mappings":"0EAkBO,SAASA,GAAwB,CAChC,KAAA,CAAC,MAAAC,GAASC,IAChB,OAAOC,EAAaC,GAAmBC,EAAmBD,CAAK,EAAG,CAChE,UAAW,CAACE,EAAUC,IAAY,CAChCC,EACED,EAAQ,OACJN,EAAMQ,EAAQ,uBAAuB,CAAC,EACtCR,EAAMQ,EAAQ,yBAAyB,CAAC,CAAA,CAEhD,EACA,QAAgBC,GAAAC,EAAmBD,CAAG,CAAA,CACvC,CACH,CAEA,SAASL,EAAmB,CAC1B,eAAAO,KACGL,CACL,EAA+B,CACtB,OAAAM,EACJ,KAAK,yBAAyBD,WAAyBL,CAAO,EAC9D,KAAUO,GAAAA,EAAE,IAAI,CACrB,CCtBO,SAASC,GAAwB,CAChC,KAAA,CAAC,MAAAd,GAASC,IAChB,OAAOC,EAAaC,GAAmBY,EAAmBZ,CAAK,EAAG,CAChE,UAAW,IAAM,CACfI,EAAMP,EAAMQ,EAAQ,uBAAuB,CAAC,CAAC,CAC/C,EACA,QAAgBC,GAAAC,EAAmBD,CAAG,CAAA,CACvC,CACH,CAEA,SAASM,EAAmB,CAAC,eAAAJ,GAA6C,CACjE,OAAAC,EACJ,KAAK,yBAAyBD,UAAuB,EACrD,KAAKE,GAAKA,EAAE,IAAI,CACrB"}