{"version":3,"file":"Edit.2aa2741b.js","sources":["../../../resources/client/common/icons/material/ChevronRight.tsx","../../../resources/client/common/ui/breadcrumbs/breadcrumb-item.tsx","../../../resources/client/common/icons/material/MoreHoriz.tsx","../../../resources/client/common/ui/breadcrumbs/breadcrumb.tsx","../../../resources/client/common/icons/material/Edit.tsx"],"sourcesContent":["import {createSvgIcon} from '../create-svg-icon';\n\nexport const ChevronRightIcon = createSvgIcon(\n  <path d=\"M10 6 8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6-6-6z\" />\n, 'ChevronRightOutlined');\n","import React, {HTMLAttributes, ReactElement, ReactNode} from 'react';\nimport clsx from 'clsx';\nimport {ChevronRightIcon} from '../../icons/material/ChevronRight';\nimport type {BreadcrumbSizeStyle} from './breadcrumb';\n\nexport interface BreadcrumbItemProps {\n  sizeStyle?: BreadcrumbSizeStyle;\n  isMenuTrigger?: boolean;\n  isMenuItem?: boolean;\n  children: ReactNode | ((state: {isMenuItem?: boolean}) => ReactNode);\n  isCurrent?: boolean;\n  onSelected?: () => void;\n  isClickable?: boolean;\n  isDisabled?: boolean;\n  className?: string;\n  isLink?: boolean;\n}\n\nexport function BreadcrumbItem(props: BreadcrumbItemProps) {\n  const {\n    isCurrent,\n    sizeStyle,\n    isMenuTrigger,\n    isClickable,\n    isDisabled,\n    onSelected,\n    className,\n    isMenuItem,\n    isLink,\n  } = props;\n\n  const children =\n    typeof props.children === 'function'\n      ? props.children({isMenuItem})\n      : props.children;\n\n  if (isMenuItem) {\n    return children as ReactElement;\n  }\n\n  const domProps: HTMLAttributes<HTMLDivElement> = isMenuTrigger\n    ? {}\n    : {\n        tabIndex: isLink && !isDisabled ? 0 : undefined,\n        role: isLink ? 'link' : undefined,\n        'aria-disabled': isLink ? isDisabled : undefined,\n        'aria-current': isCurrent && isLink ? 'page' : undefined,\n        onClick: () => onSelected?.(),\n      };\n\n  return (\n    <li\n      className={clsx(\n        `inline-flex justify-start items-center relative min-w-0 ${sizeStyle?.font}`,\n        isMenuTrigger && 'flex-shrink-0',\n        (!isClickable || isDisabled) && 'pointer-events-none',\n        !isCurrent && isDisabled && 'text-disabled'\n      )}\n    >\n      <div\n        {...domProps}\n        className={clsx(\n          className,\n          'px-8 cursor-pointer rounded whitespace-nowrap overflow-hidden',\n          !isMenuTrigger && 'py-4 hover:bg-hover',\n          !isMenuTrigger && isLink && 'focus-visible:ring outline-none'\n        )}\n      >\n        {children}\n      </div>\n      {isCurrent === false && (\n        <ChevronRightIcon\n          size={sizeStyle?.icon}\n          className={clsx(isDisabled ? 'text-disabled' : 'text-muted')}\n        />\n      )}\n    </li>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const MoreHorizIcon = createSvgIcon(\n  <path d=\"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\n, 'MoreHorizOutlined');\n","import React, {cloneElement, ReactElement, useCallback, useRef} from 'react';\nimport {\n  useLayoutEffect,\n  useResizeObserver,\n  useValueEffect,\n} from '@react-aria/utils';\nimport clsx from 'clsx';\nimport {InputSize} from '../forms/input-field/input-size';\nimport {IconButton} from '../buttons/icon-button';\nimport {BreadcrumbItem, BreadcrumbItemProps} from './breadcrumb-item';\nimport {MoreHorizIcon} from '../../icons/material/MoreHoriz';\nimport {ButtonSize} from '../buttons/button-size';\nimport {Menu, MenuItem, MenuTrigger} from '../navigation/menu/menu-trigger';\nimport {IconSize} from '../../icons/svg-icon';\nimport {useTrans} from '../../i18n/use-trans';\n\nconst MIN_VISIBLE_ITEMS = 1;\nconst MAX_VISIBLE_ITEMS = 10;\n\nexport interface BreadcrumbsProps {\n  children:\n    | ReactElement<BreadcrumbItemProps>\n    | ReactElement<BreadcrumbItemProps>[];\n  isDisabled?: boolean;\n  size?: InputSize;\n  className?: string;\n  currentIsClickable?: boolean;\n  isNavigation?: boolean;\n}\n\nexport function Breadcrumb(props: BreadcrumbsProps) {\n  const {\n    size = 'md',\n    children,\n    isDisabled,\n    className,\n    currentIsClickable,\n    isNavigation,\n  } = props;\n  const {trans} = useTrans();\n  const style = sizeStyle(size);\n\n  // Not using React.Children.toArray because it mutates the key prop.\n  const childArray: ReactElement<BreadcrumbItemProps>[] = [];\n  React.Children.forEach(children, child => {\n    if (React.isValidElement(child)) {\n      childArray.push(child);\n    }\n  });\n\n  const domRef = useRef<HTMLDivElement>(null);\n  const listRef = useRef<HTMLOListElement>(null);\n\n  const [visibleItems, setVisibleItems] = useValueEffect(childArray.length);\n\n  const updateOverflow = useCallback(() => {\n    const computeVisibleItems = (itemCount: number) => {\n      // Refs can be null at runtime.\n      const currListRef: HTMLUListElement | null = listRef.current;\n      if (!currListRef) {\n        return;\n      }\n\n      const listItems = Array.from(currListRef.children) as HTMLLIElement[];\n      if (!listItems.length) return;\n\n      const containerWidth = currListRef.offsetWidth;\n      const isShowingMenu = childArray.length > itemCount;\n      let calculatedWidth = 0;\n      let newVisibleItems = 0;\n      let maxVisibleItems = MAX_VISIBLE_ITEMS;\n\n      calculatedWidth += listItems.shift()!.offsetWidth;\n      newVisibleItems++;\n\n      if (isShowingMenu) {\n        calculatedWidth += listItems.shift()!.offsetWidth;\n        maxVisibleItems--;\n      }\n\n      if (calculatedWidth >= containerWidth) {\n        newVisibleItems--;\n      }\n\n      // Ensure the last breadcrumb isn't truncated when we measure it.\n      if (listItems.length > 0) {\n        const last = listItems.pop();\n        last!.style.overflow = 'visible';\n\n        calculatedWidth += last!.offsetWidth;\n        if (calculatedWidth < containerWidth) {\n          newVisibleItems++;\n        }\n\n        last!.style.overflow = '';\n      }\n\n      // eslint-disable-next-line no-restricted-syntax\n      for (const breadcrumb of listItems.reverse()) {\n        calculatedWidth += breadcrumb.offsetWidth;\n        if (calculatedWidth < containerWidth) {\n          newVisibleItems++;\n        }\n      }\n\n      return Math.max(\n        MIN_VISIBLE_ITEMS,\n        Math.min(maxVisibleItems, newVisibleItems)\n      );\n    };\n\n    // eslint-disable-next-line func-names\n    setVisibleItems(function* () {\n      // Update to show all items.\n      yield childArray.length;\n\n      // Measure, and update to show the items that fit.\n      const newVisibleItems = computeVisibleItems(childArray.length);\n      yield newVisibleItems;\n\n      // If the number of items is less than the number of children,\n      // then update again to ensure that the menu fits.\n      if (newVisibleItems! < childArray.length && newVisibleItems! > 1) {\n        yield computeVisibleItems(newVisibleItems!);\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [listRef, children, setVisibleItems]);\n\n  useResizeObserver({ref: domRef, onResize: updateOverflow});\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useLayoutEffect(updateOverflow, [children]);\n\n  let contents = childArray;\n  if (childArray.length > visibleItems) {\n    const selectedKey = childArray.length - 1;\n\n    const menuItem = (\n      <BreadcrumbItem key=\"menu\" sizeStyle={style} isMenuTrigger>\n        <MenuTrigger selectionMode=\"single\" selectedValue={selectedKey}>\n          <IconButton aria-label=\"â€¦\" disabled={isDisabled} size={style.btn}>\n            <MoreHorizIcon />\n          </IconButton>\n          <Menu>\n            {childArray.map((child, index) => {\n              const isLast = selectedKey === index;\n              return (\n                <MenuItem\n                  key={index}\n                  value={index}\n                  onSelected={() => {\n                    if (!isLast) {\n                      child.props.onSelected?.();\n                    }\n                  }}\n                >\n                  {cloneElement(child, {isMenuItem: true})}\n                </MenuItem>\n              );\n            })}\n          </Menu>\n        </MenuTrigger>\n      </BreadcrumbItem>\n    );\n\n    contents = [menuItem];\n    const breadcrumbs = [...childArray];\n    let endItems = visibleItems;\n    if (visibleItems > 1) {\n      contents.unshift(breadcrumbs.shift()!);\n      endItems--;\n    }\n    contents.push(...breadcrumbs.slice(-endItems));\n  }\n\n  const lastIndex = contents.length - 1;\n  const breadcrumbItems = contents.map((child, index) => {\n    const isCurrent = index === lastIndex;\n    const isClickable = !isCurrent || currentIsClickable;\n\n    return cloneElement<BreadcrumbItemProps>(child, {\n      key: child.key || index,\n      isCurrent,\n      sizeStyle: style,\n      isClickable,\n      isDisabled,\n      isLink: isNavigation,\n    });\n  });\n\n  const Element = isNavigation ? 'nav' : 'div';\n\n  return (\n    <Element\n      className={clsx(className, 'min-w-0 w-full')} // prevent flex parent overflow\n      aria-label={trans({message: 'Breadcrumbs'})}\n      ref={domRef}\n    >\n      <ol\n        ref={listRef}\n        className={clsx('flex justify-start flex-nowrap', style.minHeight)}\n      >\n        {breadcrumbItems}\n      </ol>\n    </Element>\n  );\n}\n\nfunction sizeStyle(size: InputSize): BreadcrumbSizeStyle {\n  switch (size) {\n    case 'sm':\n      return {font: 'text-sm', icon: 'sm', btn: 'sm', minHeight: 'min-h-36'};\n    case 'lg':\n      return {font: 'text-lg', icon: 'md', btn: 'md', minHeight: 'min-h-42'};\n    default:\n      return {font: 'text-base', icon: 'md', btn: 'md', minHeight: 'min-h-42'};\n  }\n}\n\nexport interface BreadcrumbSizeStyle {\n  font: string;\n  icon: IconSize;\n  btn: ButtonSize;\n  minHeight: string;\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const EditIcon = createSvgIcon(\n  <path d=\"m14.06 9.02.92.92L5.92 19H5v-.92l9.06-9.06M17.66 3c-.25 0-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29zm-3.6 3.19L3 17.25V21h3.75L17.81 9.94l-3.75-3.75z\" />\n, 'EditOutlined');\n"],"names":["ChevronRightIcon","createSvgIcon","_jsx","BreadcrumbItem","props","isCurrent","sizeStyle","isMenuTrigger","isClickable","isDisabled","onSelected","className","isMenuItem","isLink","children","domProps","tabIndex","undefined","role","onClick","clsx","font","icon","MoreHorizIcon","MIN_VISIBLE_ITEMS","MAX_VISIBLE_ITEMS","Breadcrumb","size","currentIsClickable","isNavigation","trans","useTrans","style","childArray","Children","forEach","child","React","isValidElement","push","domRef","useRef","listRef","visibleItems","setVisibleItems","useValueEffect","length","updateOverflow","useCallback","computeVisibleItems","itemCount","currListRef","current","listItems","Array","from","containerWidth","offsetWidth","isShowingMenu","calculatedWidth","newVisibleItems","maxVisibleItems","shift","last","pop","overflow","breadcrumb","reverse","Math","max","min","useResizeObserver","ref","onResize","contents","selectedKey","MenuTrigger","IconButton","btn","Menu","map","index","isLast","MenuItem","cloneElement","breadcrumbs","endItems","unshift","slice","lastIndex","breadcrumbItems","key","message","minHeight","EditIcon"],"mappings":"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"}